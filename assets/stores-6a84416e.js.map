{"version":3,"mappings":"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,OACA,4BACAC,GAAmB,CACjBrkC,OAAQ,CACNq6B,iBAAkB,SAClBwK,SAAU,IACVxZ,SAAU,OAKlBiZ,GAAsB,CACpBpB,eAAgB,CAAC,iBAEnB,EACApB,GACA,EACA,+CAIFmC,GACE,oBACA,SACA,+BACA,CACEG,GACE,QACA,yBACAC,GAAmB,CACjBriC,OAAO,KACPsI,SAAU,MAGd85B,GACE,SACA,2BACAC,GAAmB,CACjBriC,OAAO,IACPsI,SAAU,MAGd85B,GACE,OACA,yBACAC,GAAmB,MAGvBC,GAAsB,CACpBhB,YAAa,IACbd,QAAS,GACT/tB,YAAa,CAAEiZ,IAAK,KACpB0D,cAAe,CAAE1D,IAAK,OAExB,EACAoU,GACA,EACA,+CAIFmC,GACE,mBACA,OACA,qDACA,CACEG,GACE,SACA,oCACAC,GAAmB,CACjBN,UAAW,sBAIjBO,GAAsB,CACpB9B,QAAS,EACTC,QAAS,KAEX,EACAX,GACA,EACA,sCAGFmC,GACE,kBACA,OACA,wCACA,CACEG,GACE,OACA,2BACAC,GAAmB,CACjBN,UAAW,oBAIjBO,GAAsB,CACpBpB,eAAgB,CAAC,uBAEnB,EACApB,GACA,EACA,6CAGFmC,GACE,gBACA,OACA,0DACA,CACEG,GACE,OACA,+BACAC,GAAmB,CACjBtB,WAAY,CAAE4B,cAAe,OAInCL,GAAsB,CACpBpB,eAAgB,CAAC,sBAEnB,EACApB,GACA,EACA,2CAIFmC,GACE,yBACA,OACA,uCACA,CACEG,GACE,OACA,yBACAC,GAAmB,CACjBriC,MAAO,IACP+gC,WAAY,CAAE+B,UAAW,MAG7BV,GACE,QACA,4BACAC,GAAmB,CACjBriC,MAAO,KACP+gC,WAAY,CAAE+B,UAAW,EAAGL,WAAY,OAI9CH,GAAsB,CACpBhB,YAAa,IACbd,QAAS,MAEX,EACAV,GACA,GACA,yCAGFmC,GACE,oBACA,OACA,8CACA,CACEG,GACE,OACA,2BACAC,GAAmB,CACjBriC,OAAO,IACP+gC,WAAY,CAAE4B,cAAe,MAGjCP,GACE,SACA,8BACAC,GAAmB,CACjBriC,OAAO,IACP+gC,WAA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","names":["ErrorType","VALIDATION","NETWORK","STORAGE","GAME_LOGIC","SYSTEM","UNKNOWN","ErrorSeverity","FATAL","ERROR","WARNING","INFO","storageError","message","metadata","type","severity","error","Error","timestamp","Date","toISOString","createError","zhCN","common","confirm","cancel","back","save","delete","loading","yes","no","ok","next","previous","close","edit","create","update","remove","search","filter","sort","refresh","retry","more","time","week","weeks","of","remaining","day","hour","minute","second","system","defaultPlayerName","autoSave","unknownError","criticalError","componentError","errorLogs","exportLogs","clearLogs","currency","settings","title","game","display","audio","language","difficulty","difficulties","easy","standard","hard","autoSaveInterval","autoSaveIntervals","soundEnabled","fullScreen","textSpeed","textSpeeds","slow","normal","fast","reset","saveSuccess","resetSuccess","description","sound","menu","nextWeek","tabs","market","inventory","houses","marketStatus","bull","bear","stable","mixed","gameMenu","load","mainMenu","continue","saveDialog","namePlaceholder","gameOver","victory","houseVictory","timeLimit","weeksPlayed","finalMoney","netWorth","purchasedHouses","backToMenu","continueGame","continueDescription","restartGame","recovery","defaultMessage","date","gameWeek","weekNumber","playerName","money","recover","success","failed","noSnapshot","automaticRecovery","capacityUsed","productName","quantity","purchasePrice","currentPrice","trend","profit","action","sell","empty","full","almostFull","selectLocation","price","change","buy","noProducts","special","viewMode","table","card","priceHistory","priceChart","high","low","average","historicalPrices","priceRange","weekRange","noData","all","rising","falling","default","priceAsc","priceDesc","changeAsc","changeDesc","nameAsc","nameDesc","location","travel","currentLocation","travelCost","travelTime","travelConfirm","travelSuccess","second_hand_market","premium_mall","electronics_hub","black_market","commodity_market","second_hand_market_desc","premium_mall_desc","electronics_hub_desc","black_market_desc","commodity_market_desc","houseMarket","affordable","purchased","alreadyOwned","level","size","buyButton","noHouses","notEnoughMoney","fundsChanged","significantConfirm","purchaseSuccess","purchaseFailed","confirmTitle","confirmMessage","yourMoney","significantWarning","victoryPurchase","victoryMessage","continuePrompt","continuePlaying","endGameNow","details","features","types","apartment","house","villa","mansion","penthouse","garden","pool","garage","security","view","central","quiet","modern","classic","luxury","small","name","medium","large","buyModal","availableMoney","availableSpace","totalCost","maxQuantity","sellModal","sellQuantity","potentialProfit","totalIncome","houseModal","confirmPurchase","remainingMoney","endGame","trends","rising_strong","stable_high","stable_low","falling_strong","volatile","trendAnalysis","shortTerm","midTerm","longTerm","prediction","confidence","playerInfo","debt","capacity","repayDebt","bank","stats","totalProfit","transactions","visitedLocations","eventsTriggered","highestSingleProfit","mostProfitableProduct","mostVisitedLocation","profitDesc","profitAsc","quantityDesc","quantityAsc","profitable","unprofitable","purchaseInfo","purchaseDate","purchaseLocation","currentInfo","profitPercentage","repayModal","currentDebt","repayAmount","remainingDebt","fullRepay","debtSystem","interestRate","nextInterest","paymentDue","warning","critical","bankrupt","interestApplied","deposit","withdraw","loan","repay","currentDeposit","currentLoan","depositInterest","loanInterest","maxLoan","availableLoan","amountToDeposit","amountToWithdraw","amountToLoan","amountToRepay","confirmDeposit","confirmWithdraw","confirmLoan","confirmRepay","interestInfo","depositSuccess","withdrawSuccess","loanSuccess","repaySuccess","weeklyInterest","remainingDeposit","remainingLoan","tutorial","tips","welcome","content","market_intro","inventory_intro","location_change","price_trends","special_products","mid_game","late_game","help","basics","trading","events","gotIt","dontShowAgain","prev","shortcuts","space","tab","esc","h","event","debtIncrease","debtDecrease","gainProduct","loseProduct","moneyGain","moneyLoss","priceChange","capacityChange","specialEvent","positive","negative","neutral","effects","product","choices","accept","decline","option1","option2","option3","notifications","triggered","completed","reward","penalty","choiceMade","marketCrash","marketBoom","robbery","lottery","backpackUpgrade","backpackDamage","investmentSuccess","investmentFailure","taxAudit","inheritance","donation","discount","priceHike","specialOffer","blackMarket","descriptions","inventoryFull","insufficientStock","houseNotFound","invalidRepayment","saveFailed","loadFailed","insufficientFunds","autoSaveFailed","autoSaveError","sold","housePurchased","repaid","gameSaved","gameLoaded","autoSaved","info","timeUp","weekProgress","locationChange","achievement","earlyGoal","noDebtHouse","achieved","ui","newGame","loadGame","exit","version","credits","saveMenu","newSave","loadSave","deleteSave","noSaves","saveDate","saveWeek","playerMoney","confirmDelete","overwriteConfirm","invalidSave","gameView","weekDisplay","moneyDisplay","debtDisplay","saving","dialogs","alert","input","toast","initializing","loadingAssets","loadingGame","savingGame","processingTurn","generatingWorld","ready","devTools","addMoney","removeMoney","addDebt","removeDebt","skipWeek","unlockAllLocations","resetPrices","triggerEvent","amount","apply","eventType","charts","playerNetWorth","weeklyProfit","zoom","period","showAll","last10Weeks","last20Weeks","custom","exportData","importData","errorHandling","stackTrace","ignore","report","errorBoundary","errors","defaultError","fatal","validation","specific","required_field","invalid_format","out_of_range","invalid_type","duplicate_entry","too_short","too_long","network","connection_failed","timeout","server_error","api_error","invalid_response","offline","storage","file_not_found","permission_denied","quota_exceeded","data_corrupt","unknown","save_failed","load_failed","file_io_error","version_mismatch","game_logic","invalid_operation","insufficient_funds","inventory_full","invalid_state","invalid_transition","out_of_bounds","dependency_missing","invalid_parameter","calculation_error","rule_violation","initialization_failed","resource_not_found","memory_error","performance_issue","render_error","audio_error","plugin_error","compatibility_issue","unexpected_state","critical_failure","options","reload","corrupted","notFound","incompatible","stateSnapshot","restoring","noValidSnapshot","partialRestore","fullRestore","errorLog","actions","clear","export","showDetails","hideDetails","getUserLanguage","savedLang","localStorage","getItem","e","handleError","console","warn","navigator","userLanguage","startsWith","i18n","createI18n","legacy","locale","fallbackLocale","messages","datetimeFormats","short","year","month","long","numberFormats","style","notation","decimal","minimumFractionDigits","maximumFractionDigits","percent","useGrouping","global","setLanguage","lang","availableLocales","includes","value","document","querySelector","setAttribute","setItem","getSupportedLanguages","code","flag","formatCurrency","n","formatDate","format","d","formatNumber","number","formatPercent","setupI18n","t","scope","logger","Object","defineProperties","defaultLabel","writable","labelPadding","maxLabelLength","labelLength","get","label","Math","max","length","newScope","levels","logData","log","scopeFactory","require$$0","Buffering","constructor","processMessage","this","buffer","enabled","begin","bind","commit","reject","addMessage","push","forEach","item","_Logger","allowUnknownLevel","dependencies","errorHandler","eventLogger","initializeFn","isDev","logId","transportFactories","variables","__publicField","addLevel","initialize","buffering","functions","setOptions","logFn","factory","entries","transports","instances","getInstance","index","splice","args","catchErrors","data","startCatching","compareLevels","passLevel","checkLevel","pass","indexOf","check","cmd","handle","errorName","processType","showDialog","Boolean","normalizedMessage","transName","transFn","transportEntries","transformedMsg","hooks","reduce","msg","hook","processInternalErrorFn","_e","Array","isArray","map","Logger_1","consoleError","RendererErrorHandler_1","handleRejection","onError","preventDefault","isActive","window","addEventListener","_a","call","reason","JSON","stringify","transform_1","transform","transport","initialData","transforms","trans","console_1","assign","writeFn","formatDataFn","consoleLogFn","consoleMethods","setTimeout","verbose","debug","silly","unshift","match","slice","replace","substring","getFullYear","toString","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","getMilliseconds","_b","trim","ipc","__electronLog","serialized","sendToMain","depth","serializeFn","RESTRICTED_TYPES","Set","Promise","WeakMap","WeakSet","isPrimitive","seen","actualDepth","has","stack","Map","from","key","val","add","fromEntries","Logger","RendererErrorHandler","require$$1","transportConsole","require$$2","transportIpc","require$$3","process","module","exports","cause","instance","Proxy","target","prop","createLogger","ref","MAX_ERROR_LOGS","GAME_RUNNING_FLAG","LAST_ACTIVITY_KEY","cachedUiStore","async","getUiStore","attempt","__vitePreload","resolve","then","uiStore","url","useUiStore","store","err","maxRetries","context","errorInfo","serializedLogs","logError","showErrorDialog","getLocalizedErrorMessage","notifyUserWithDialog","showToast","duration","notifyUserWithToast","electronAPI","electronLog","loadErrorLogs","savedLogs","parsedLogs","parse","specificKey","toLowerCase","typeKey","defaultMsg","te","withErrorHandling","asyncFn","setupGlobalErrorHandlers","app","config","vm","componentName","$options","$root","COMPONENT","ASYNC","RUNTIME","markGameRunning","now","clearGameRunningMark","removeItem","checkGameAbnormalExit","lastActivity","lastActiveTime","parseInt","getHouseImagePath","houseId","isNaN","parsedId","min","second_hand","highend","defineStore","errorDialogVisible","errorDialogData","toasts","toastTimeouts","recoveryDialogVisible","recoveryDialogData","dialogVisible","dialogData","addToast","actionText","actionCallback","existingToast","find","removeToast","id","random","oldestToast","pop","clearTimeout","findIndex","closeRecoveryDialog","closeErrorDialog","closeToast","showRecoveryDialog","snapshot","allowCancel","onRecover","onCancel","closeDialog","useSettingsStore","state","tutorialEnabled","soundVolume","musicEnabled","musicVolume","theme","uiScale","animationsEnabled","graphicsQuality","currentScene","updateSetting","$state","saveSettings","updateSettings","resetSettings","$reset","settingsData","loadSettings","setCurrentScene","scene","gameAudio","playBGM","usePlayerStore","loanPrincipal","inventoryUsed","initialized","bankDeposit","maxLoanAmount","statistics","weekCount","transactionCount","maxMoney","housePurchases","firstHousePurchaseWeek","mostExpensiveHouse","highestLevelHouse","initializePlayer","updateWeeklyPlayerState","currentWeek","interest","floor","spendMoney","addVisitedLocation","locationId","purchaseHouse","requiredProps","some","purchaseWeek","useGameCoreStore","purchaseRecord","depositToBank","withdrawFromBank","takeLoan","availableLoanAmount","getters","inventoryValue","total","houseValue","totalMoney","hasHighestHouse","most","availableCapacity","depositInterestRate","loanInterestRate","useInventoryActions","playerStore","addToInventory","totalSpace","existingIndex","productId","purchaseValue","existingItem","oldTotalValue","totalValue","newTotalQuantity","newTotalValue","newAveragePrice","round","removeFromInventory","inventoryIndex","spaceFreed","findByProductId","getTotalQuantity","getTotalValue","clearInventory","ProductCategory","Product","basePrice","minPrice","maxPrice","volatility","category","icon","availableAt","getPriceRange","range","isValidPrice","adjustPriceToRange","predefinedProducts","getAllProducts","productData","Location","availableProducts","specialProducts","modifiers","priceFactor","image","eventProbability","getPriceFactor","isSpecialProduct","hasProduct","applyPriceModifiers","predefinedLocations","getAllLocations","locationData","House","specialFeature","purchaseCondition","imageMap","getHouseImage","canBePurchasedWith","getValueRating","predefinedHouses","getAllHouses","houseData","PriceTrend","RISING_STRONG","RISING","STABLE_HIGH","STABLE","STABLE_LOW","FALLING","FALLING_STRONG","VOLATILE","priceCalculationCache","fastSin","x","PI","x2","x3","x5","calculatePriceWithCache","previousPrice","locationFactor","marketModifiers","cacheKey","result","calculateNewPrice","set","clearPriceCache","prevPrice","prevTrend","weekModForSin","volatilityBase","trendFactorTable","normalizedSeed","randomFactor","trendContinuationFactor","categoryFactor","weekMod","factor","cos","periodFactor","locationAdjustment","isSpecial","randomNoise","sin","globalMarketModifier","globalPriceModifier","categoryModifier","categoryModifiers","productModifier","_c","productModifiers","currentLocationId","locationModifier","locationProductModifier","_d","locationModifiers","_f","locationProductModifiers","toFixed","totalFactor","adjustedTotalFactor","abs","newPrice","volatilityFactor","volatilityMultiplier","maxChange","maxUpLimit","maxDownLimit","minChangeAmount","protectedPrice","midPoint","distanceFromMid","regressionDirection","applyPriceProtection","originalPricePercent","changePercent","RISE_THRESHOLD","STRONG_FALL_THRESHOLD","FALL_THRESHOLD","relativePricePos","determineTrendFast","parseFloat","getTrendDescription","getTrendIcon","getTrendColor","usePriceActions","marketStore","useMarketStore","updateProductPrices","products","productPrices","newPrices","productCount","categories","keys","locations","locationProducts","count","i","timeEnd","batchUpdatePrices","prevPriceData","history","newPriceData","p","Number","combinedSeed","direction","pseudoRandom","randomChange","changeRatio","join","calculateLongTermTrend","updateLocationProducts","getProductTrendInfo","getProductPriceTrend","text","color","getPriceChangeText","priceData","measurePricePerformance","weeksSinceLastGlobalChange","categoryUnchangedWeeks","productUnchangedWeeks","locationUnchangedWeeks","locationProductUnchangedWeeks","initializeMarket","initializeProductPrices","changeLocation","initialPrice","updateMarketState","updateMarketModifiers","oldModifier","variance","productIds","locationCount","locationIds","l","loc","availableProductIds","getLocationAvailableProducts","getCurrentProductPrice","currentChangePercent","recentPrices","calculateVolatility","prices","sumChanges","productIdStr","String","getProductPriceHistory","addMarketModifier","loadProducts","allProducts","loadHouses","houseIds","allHouses","availableHouses","currentLocationInfo","hasSpecialProducts","globalModifier","status","productsWithPrices","highPriceProducts","lowPriceProducts","highPriceProductsRatio","lowPriceProductsRatio","activeModifiersCount","EventType","Event$1","conditions","repeatable","weight","imageUrl","canTrigger","gameState","triggeredEvents","c","minWeek","maxWeek","player","playerDebt","inventoryItems","inventoryItem","minQuantity","attributes","attr","limits","requiredEvents","eventId","excludedEvents","customCondition","probability","getAvailableOptions","option","condition","EventOption","isAvailable","EventEffects","forceLocationChange","targetLocation","nextEvent","EventConditions","createEvent","arguments","Event","createEventOption","createEventEffects","createEventConditions","predefinedEvents","creditRating","reputation","health","businessSkill","risk_tolerance","modifier","happiness","socialSkill","insiderInfo","FOOD","ELECTRONICS","DAILY","housingValue","houseMarketModifier","housingInvestment","propertyValue","hasHouse","socialNetwork","house_a","house_b","land_a","eventsCache","tutorialEvents","randomEvents","locationEvents","marketEvents","personalEvents","storyEvents","getAllEvents","eventData","eventEmitter","onceEvents","on","eventName","listener","off","once","emit","listeners","clearEvent","DifficultyLevel","gameConfigs","DifficultyLevel_EASY","initialMoney","initialDebt","initialCapacity","debtInterestRate","debtGracePeriod","priceTrendStrength","priceVolatility","specialProductDiscount","trendContinuationChance","positiveEventChance","eventFrequency","earlyGameEventMultiplier","lateGameEventMultiplier","housePriceMultipliers","gameGoals","requiredNetWorth","targetWeeks","debtRatio","DifficultyLevel_NORMAL","DifficultyLevel_HARD","GameEventType","EventEffectType","EventStage","EventSystem","activeEvents","eventHistory","cooldowns","difficultyLevel","setDifficulty","generateStageAppropriateEvent","maxWeeks","gameProgress","currentStage","getGameConfig","phaseMultipliers","progress","phase","eventMultiplier","priceVolatilityMultiplier","getGamePhaseMultipliers","baseEventChance","stageMultiplier","finalEventChance","randomValue","shouldTriggerEvent","positiveChance","record","getEventById","locationEventReduction","pow","houseEventModifier","eventEffectType","eligibleEvents","isEventInCooldown","effectType","gameStage","checkEventConditions","selectedEvent","selectEventByWeight","checkForEvents","roll","getEligibleEvents","recordEvent","allEligibleEvents","itemCond","requiredEvent","excludedEvent","adjustedProbability","setEventCooldown","cooldownWeeks","totalWeight","eventWeights","opt","occurrenceCount","baseReduction","maxReduction","prepareEvent","triggerSpecificEvent","isSpecific","preparedEvent","displayText","updateActiveEvents","effect","expired","expiryTime","getActiveMarketModifiers","applyEventEffects","appliedEffects","failedEffects","moneyChange","required","available","debtChange","actualReduction","items","requiredSpace","removedQuantity","oldValue","attribute","newValue","marketEffect","startTime","categoryProducts","getSaveState","loadFromSaveState","saveState","useEventStore","activeEvent","nextEventId","eventSystem","initializeEvents","initEventSystem","setupEventListeners","locationChangeEffect","nextEventEffect","resetEvents","generateRandomEvent","playerData","marketData","easterEggEvent","extraEventChance","randomEvent","triggerTutorialEvent","tutorialEventId","handleEventOption","processedResult","calculateAllPrices","updatePrices","optionId","clearForceLocationChange","clearNextEvent","currentEvent","needsLocationChange","targetLocationId","eventStatistics","byType","fullEvent","useEventActions","eventStore","getLocationName","selectedOption","beforeState","inventoryCount","afterState","changes","locationChanged","tutorialStep","getCurrentEvent","hasPendingEvent","getEventStatistics","gameStarted","gamePaused","victoryAchieved","gameResult","startNewGame","advanceWeek","checkGameEnd","hasAffordableProducts","includeBankDeposit","endGameWithTimeLimit","achieveVictory","hasHouses","finalScore","calculateGameScore","scoreRank","calculateRank","scoreDetails","calculateScoreDetails","rank","weeksPassed","score","achievementName","firstVictoryWeek","firstVictoryHouse","finalAssets","tradeStats","totalTrades","averageProfit","_g","endReason","allPurchasedHouses","houseCount","continuedPlay","addNotification","achieveVictoryWithHouse","safeHouse","canContinue","purchasedHouse","gameScore","_h","scoreInDetails","baseScore","multiplier","speedMultiplier","houseBonus","totalScore","assetsScore","timeScore","houseScore","totalHouseValue","housePrice","tradeScore","tradeCount","bankScore","totalInterest","totalInterestEarned","shift","pauseGame","resumeGame","manualEndGame","initializeGameCore","updateGameState","isGameActive","remainingWeeks","isEndlessMode","validateSaveData","saveData","issues","isValid","requiredSections","section","gameCore","requiredStats","stat","repairSaveData","template","repairedData","repairLog","ensureNumber","ensureBoolean","calculatedInventoryUsed","firstHouse","a","b","Infinity","pricesFixed","defaultValue","num","StorageService","getData","setData","removeData","clearAll","LocalStorageService","prefix","getFullKey","fullKey","originalError","_safeStringify","safeArray","safeObj","prototype","hasOwnProperty","serializedData","serializeError","_simplified","ElectronStorageService","isInitialized","fallbackStorage","initializeElectronAPI","getConfig","_safeSerialize","fallbackSuccess","setConfig","safeData","saveGame","saveName","saveGameError","clearConfig","keysToRemove","storageService","SAVE_LIST_KEY","SAVE_PREFIX","CURRENT_GAME_VERSION","useSaveStore","saveList","isLoading","lastAutoSaveWeek","autoSaveEnabled","saveTemplate","lastValidatedSave","init","loadSaveList","createSaveTemplate","setInterval","checkAutoSave","listSaves","saves","formattedSaves","isAuto","lastModified","getTime","electronError","validateSave","saveId","targetId","validationResult","canRepair","isAutoSave","safeGameResult","safeNotifications","safeInventory","safePurchasedHouses","safeActiveEvent","repairResult","isNewSave","autoSaveId","toLocaleString","existingSave","saveInfo","electronResult","path","backupResult","autoSaves","oldestAutoSaves","oldSave","loadStoresFromSaveData","rawSaveData","previewData","currentVersion","ensureVersionCompatibility","silent","saveIndex","cleanupOldAutoSaves","triggerImportantActionAutoSave","actionType","manualSaves","latestSave","useGameStore","inventoryActions","computed","buyProduct","addResult","buyWithBasePrice","sellProduct","avgPurchasePrice","removeResult","income","profitPercent","sellWithBasePrice","getSaves","amountRepaid","buyHouse"],"sources":["../../src/infrastructure/utils/errorTypes.js","../../src/i18n/langs/zh-CN/common.js","../../src/i18n/langs/zh-CN/index.js","../../src/i18n/langs/zh-CN/market.js","../../src/i18n/langs/zh-CN/player.js","../../src/i18n/langs/zh-CN/events.js","../../src/i18n/langs/zh-CN/ui.js","../../src/i18n/langs/zh-CN/errors.js","../../src/i18n/setup.js","../../src/i18n/index.js","../../node_modules/electron-log/src/core/scope.js","../../node_modules/electron-log/src/core/Logger.js","../../node_modules/electron-log/src/core/Buffering.js","../../node_modules/electron-log/src/renderer/lib/RendererErrorHandler.js","../../node_modules/electron-log/src/core/transforms/transform.js","../../node_modules/electron-log/src/renderer/lib/transports/console.js","../../node_modules/electron-log/src/renderer/lib/transports/ipc.js","../../node_modules/electron-log/src/renderer/index.js","../../src/infrastructure/utils/errorHandler.js","../../src/infrastructure/utils/imagePathUtils.js","../../src/stores/uiStore.js","../../src/stores/settingsStore.js","../../src/stores/player/playerState.js","../../src/stores/player/inventoryActions.js","../../src/core/models/product.js","../../src/core/models/location.js","../../src/core/models/house.js","../../src/core/services/priceSystem.js","../../src/stores/market/priceActions.js","../../src/stores/market/marketState.js","../../src/core/models/event.js","../../src/infrastructure/eventEmitter.js","../../src/core/services/gameConfigService.js","../../src/core/services/eventSystem.js","../../src/stores/events/eventState.js","../../src/stores/events/eventActions.js","../../src/stores/gameCore/gameState.js","../../src/infrastructure/persistence/storageService.js","../../src/stores/persistence/saveSystem.js","../../src/stores/index.js"],"sourcesContent":["/**\r\n * 错误类型枚举\r\n * 定义系统中的错误类型\r\n */\r\n\r\n/**\r\n * 错误类型常量\r\n */\r\nexport const ErrorType = {\r\n  VALIDATION: 'validation',   // 数据验证错误\r\n  NETWORK: 'network',         // 网络错误\r\n  STORAGE: 'storage',         // 存储错误\r\n  GAME_LOGIC: 'gameLogic',    // 游戏逻辑错误\r\n  SYSTEM: 'system',           // 系统错误\r\n  UNKNOWN: 'unknown'          // 未知错误\r\n};\r\n\r\n/**\r\n * 错误严重程度枚举\r\n */\r\nexport const ErrorSeverity = {\r\n  FATAL: 'fatal',     // 致命错误，需要立即处理\r\n  ERROR: 'error',     // 严重错误，可能影响功能\r\n  WARNING: 'warning', // 警告，不影响主要功能\r\n  INFO: 'info'        // 信息性错误\r\n};\r\n\r\n/**\r\n * 创建错误对象\r\n * @param {string} message 错误消息\r\n * @param {string} type 错误类型\r\n * @param {string} severity 错误严重程度\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 增强的错误对象\r\n */\r\nexport function createError(message, type = ErrorType.UNKNOWN, severity = ErrorSeverity.ERROR, metadata = {}) {\r\n  const error = new Error(message);\r\n  error.type = type;\r\n  error.severity = severity;\r\n  error.metadata = metadata;\r\n  error.timestamp = new Date().toISOString();\r\n  return error;\r\n}\r\n\r\n/**\r\n * 验证错误\r\n * @param {string} message 错误消息\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 验证错误对象\r\n */\r\nexport function validationError(message, metadata = {}) {\r\n  return createError(message, ErrorType.VALIDATION, ErrorSeverity.WARNING, metadata);\r\n}\r\n\r\n/**\r\n * 网络错误\r\n * @param {string} message 错误消息\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 网络错误对象\r\n */\r\nexport function networkError(message, metadata = {}) {\r\n  return createError(message, ErrorType.NETWORK, ErrorSeverity.ERROR, metadata);\r\n}\r\n\r\n/**\r\n * 存储错误\r\n * @param {string} message 错误消息\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 存储错误对象\r\n */\r\nexport function storageError(message, metadata = {}) {\r\n  return createError(message, ErrorType.STORAGE, ErrorSeverity.ERROR, metadata);\r\n}\r\n\r\n/**\r\n * 游戏逻辑错误\r\n * @param {string} message 错误消息\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 游戏逻辑错误对象\r\n */\r\nexport function gameLogicError(message, metadata = {}) {\r\n  return createError(message, ErrorType.GAME_LOGIC, ErrorSeverity.WARNING, metadata);\r\n}\r\n\r\n/**\r\n * 系统错误\r\n * @param {string} message 错误消息\r\n * @param {Object} metadata 额外元数据\r\n * @returns {Error} 系统错误对象\r\n */\r\nexport function systemError(message, metadata = {}) {\r\n  return createError(message, ErrorType.SYSTEM, ErrorSeverity.FATAL, metadata);\r\n}\r\n\r\nexport default {\r\n  ErrorType,\r\n  ErrorSeverity,\r\n  createError,\r\n  validationError,\r\n  networkError,\r\n  storageError,\r\n  gameLogicError,\r\n  systemError\r\n}; ","export default {\r\n  common: {\r\n    confirm: '确认',\r\n    cancel: '取消',\r\n    back: '返回',\r\n    save: '保存',\r\n    delete: '删除',\r\n    loading: '加载中...',\r\n    yes: '是',\r\n    no: '否',\r\n    ok: '确定',\r\n    next: '下一步',\r\n    previous: '上一步',\r\n    close: '关闭',\r\n    edit: '编辑',\r\n    create: '创建',\r\n    update: '更新',\r\n    remove: '移除',\r\n    search: '搜索',\r\n    filter: '筛选',\r\n    sort: '排序',\r\n    refresh: '刷新',\r\n    retry: '重试',\r\n    more: '更多'\r\n  },\r\n  \r\n  time: {\r\n    week: '第{week}周',\r\n    weeks: '{count}周',\r\n    of: '/',\r\n    remaining: '剩余: {weeks}周',\r\n    day: '天',\r\n    hour: '小时',\r\n    minute: '分钟',\r\n    second: '秒'\r\n  },\r\n  \r\n  system: {\r\n    defaultPlayerName: '玩家',\r\n    autoSave: '自动存档',\r\n    unknownError: '发生未知错误',\r\n    criticalError: '发生严重错误',\r\n    componentError: '组件错误',\r\n    retry: '重试',\r\n    errorLogs: '错误日志',\r\n    exportLogs: '导出日志',\r\n    clearLogs: '清空日志',\r\n    severity: '严重程度',\r\n    type: '类型',\r\n    search: '搜索'\r\n  },\r\n  \r\n  currency: '元',\r\n  \r\n  // 设置相关翻译\r\n  settings: {\r\n    title: '游戏设置',\r\n    game: '游戏设置',\r\n    display: '显示设置',\r\n    audio: '音频设置',\r\n    language: '语言',\r\n    difficulty: '游戏难度',\r\n    difficulties: {\r\n      easy: '简单',\r\n      standard: '标准',\r\n      hard: '困难'\r\n    },\r\n    autoSaveInterval: '自动保存间隔',\r\n    autoSaveIntervals: {\r\n      1: '每周',\r\n      2: '每2周',\r\n      5: '每5周',\r\n      10: '每10周'\r\n    },\r\n    soundEnabled: '游戏音效',\r\n    fullScreen: '全屏模式',\r\n    textSpeed: '文本速度',\r\n    textSpeeds: {\r\n      slow: '慢速',\r\n      normal: '正常',\r\n      fast: '快速'\r\n    },\r\n    reset: '恢复默认设置',\r\n    saveSuccess: '设置已保存',\r\n    resetSuccess: '设置已重置',\r\n    description: {\r\n      difficulty: '调整游戏的整体难度，影响价格波动、事件触发概率等',\r\n      autoSave: '设置游戏自动保存的频率',\r\n      sound: '启用或禁用游戏音效',\r\n      fullScreen: '以全屏模式运行游戏',\r\n      textSpeed: '调整对话和提示文本的显示速度',\r\n      language: '选择游戏界面语言'\r\n    }\r\n  },\r\n  \r\n  game: {\r\n    title: '买房记',\r\n    week: '周数',\r\n    menu: '菜单',\r\n    nextWeek: '进入下一周',\r\n    tabs: {\r\n      market: '市场',\r\n      inventory: '背包',\r\n      houses: '房屋'\r\n    },\r\n    marketStatus: {\r\n      bull: '上涨(牛市)',\r\n      bear: '下跌(熊市)',\r\n      stable: '稳定',\r\n      mixed: '混合'\r\n    }\r\n  },\r\n  \r\n  gameMenu: {\r\n    title: '游戏菜单',\r\n    save: '保存游戏',\r\n    load: '读取游戏',\r\n    mainMenu: '返回主菜单',\r\n    settings: '设置',\r\n    continue: '继续游戏'\r\n  },\r\n  \r\n  saveDialog: {\r\n    title: '保存游戏',\r\n    namePlaceholder: '输入存档名称'\r\n  },\r\n  \r\n  gameOver: {\r\n    title: '游戏结束',\r\n    victory: '恭喜！你成功购买了豪宅！',\r\n    houseVictory: '恭喜！你已购买房产，完成游戏主要目标！',\r\n    timeLimit: '时间已到！',\r\n    weeksPlayed: '游戏周数',\r\n    finalMoney: '最终资金',\r\n    netWorth: '净资产',\r\n    purchasedHouses: '已购房屋',\r\n    backToMenu: '返回主菜单',\r\n    continueGame: '继续游戏',\r\n    continueDescription: '你可以选择继续游戏，直到第52周结束，或查看当前成绩',\r\n    restartGame: '重新开始'\r\n  },\r\n  \r\n  recovery: {\r\n    title: '游戏恢复',\r\n    defaultMessage: '检测到游戏意外中断。我们找到了您的游戏进度，是否恢复？',\r\n    date: '日期',\r\n    gameWeek: '游戏周',\r\n    weekNumber: '第 {week} 周',\r\n    playerName: '玩家名称',\r\n    money: '资金',\r\n    recover: '恢复游戏',\r\n    cancel: '放弃恢复',\r\n    success: '游戏状态已成功恢复',\r\n    failed: '无法恢复游戏状态',\r\n    noSnapshot: '没有可用的恢复点',\r\n    automaticRecovery: '游戏将尝试自动恢复您的进度',\r\n    currency: '元'\r\n  },\r\n  \r\n  inventory: {\r\n    title: '背包',\r\n    capacityUsed: '容量: {used}/{total}',\r\n    productName: '商品名称',\r\n    quantity: '数量',\r\n    purchasePrice: '购买价',\r\n    currentPrice: '当前价',\r\n    trend: '趋势',\r\n    profit: '盈亏',\r\n    action: '操作',\r\n    sell: '出售',\r\n    empty: '背包空空如也',\r\n    full: '背包已满',\r\n    almostFull: '背包即将装满'\r\n  }\r\n}; ","import common from './common';\r\nimport market from './market';\r\nimport player from './player';\r\nimport events from './events';\r\nimport ui from './ui';\r\nimport errors from './errors';\r\n\r\nexport default {\r\n  ...common,\r\n  ...market,\r\n  ...player,\r\n  ...events,\r\n  ...ui,\r\n  ...errors\r\n};\r\n","export default {\n  market: {\n    title: '{location}',\n    selectLocation: '选择地点',\n    productName: '商品名称',\n    price: '价格',\n    trend: '趋势',\n    change: '涨跌',\n    action: '操作',\n    buy: '购买',\n    noProducts: '当前地点没有可购买的商品',\n    special: '特价商品',\n    viewMode: {\n      table: '表格视图',\n      card: '卡片视图'\n    },\n    priceHistory: '价格历史',\n    priceChart: {\n      title: '价格走势图',\n      weeks: '周数',\n      price: '价格',\n      high: '最高价',\n      low: '最低价',\n      average: '平均价',\n      currentPrice: '当前价格',\n      historicalPrices: '历史价格',\n      priceRange: '价格区间',\n      weekRange: '周数区间',\n      noData: '暂无价格数据'\n    },\n    filter: {\n      all: '全部商品',\n      special: '特价商品',\n      rising: '上涨商品',\n      falling: '下跌商品',\n      stable: '稳定商品'\n    },\n    sort: {\n      default: '默认排序',\n      priceAsc: '价格从低到高',\n      priceDesc: '价格从高到低',\n      changeAsc: '涨幅从低到高',\n      changeDesc: '涨幅从高到低',\n      nameAsc: '名称正序',\n      nameDesc: '名称倒序'\n    },\n    location: {\n      travel: '前往',\n      currentLocation: '当前地点',\n      travelCost: '旅行费用',\n      travelTime: '旅行时间',\n      travelConfirm: '确认前往{location}吗？',\n      travelSuccess: '你已到达{location}',\n      // 新地点名称\n      second_hand_market: '二手市场',\n      premium_mall: '高端商城',\n      electronics_hub: '电子科技城',\n      black_market: '地下黑市',\n      commodity_market: '大宗商品交易所',\n      // 地点描述\n      second_hand_market_desc: '各类二手物品和低价生活必需品的集散地，价格便宜但品质参差不齐',\n      premium_mall_desc: '汇聚各类高端品牌和奢侈品的购物中心，价格昂贵但品质优良',\n      electronics_hub_desc: '各类电子产品和数码设备的专业交易市场，价格适中且品种齐全',\n      black_market_desc: '隐蔽的非法交易场所，各类珍稀收藏品和奇特商品云集，风险与机遇并存',\n      commodity_market_desc: '批发市场和大宗商品交易的集中地，价格低廉但需要大量采购'\n    },\n\n    // 房屋市场相关翻译\n    houseMarket: {\n      title: '房产市场',\n      affordable: '可购买',\n      purchased: '已购买',\n      alreadyOwned: '已拥有',\n      price: '价格',\n      level: '等级',\n      size: '面积',\n      location: '位置',\n      buyButton: '购买',\n      noHouses: '没有可购买的房屋',\n      notEnoughMoney: '资金不足！您需要¥{price}，但只有¥{money}，还差¥{shortfall}',\n      fundsChanged: '您的资金已发生变化！需要¥{price}，但只有¥{money}，还差¥{shortfall}',\n      significantConfirm: '这笔交易将花费您{percent}%的资金，确定要购买吗？',\n      purchaseSuccess: '恭喜！您已成功购买{house}',\n      purchaseFailed: '购买失败，请稍后重试',\n      confirmTitle: '确认购买房产',\n      confirmMessage: '您确定要购买\"{house}\"吗？',\n      yourMoney: '您的资金',\n      remaining: '购买后剩余',\n      significantWarning: '注意：这是一笔大额交易，将耗费您大部分资金！',\n\n      // 修改胜利相关翻译\n      victoryPurchase: '恭喜！您已成功购买房产',\n      victoryMessage: '恭喜您购买了房产：{house}！\\n\\n您当前处于第{week}周，游戏总共有{maxWeek}周。',\n      continuePrompt: '您想要结束游戏并查看结果，还是继续游戏争取更高分数？',\n      continuePlaying: '您选择了继续游戏，争取更高分数！游戏将继续进行到第52周。',\n      endGameNow: '结束游戏并查看成绩',\n      continueGame: '继续游戏',\n\n      details: {\n        title: '房屋详情',\n        price: '价格',\n        size: '面积',\n        location: '位置',\n        type: '类型',\n        features: '特色',\n        description: '描述'\n      },\n      types: {\n        apartment: '公寓',\n        house: '独栋别墅',\n        villa: '豪华别墅',\n        mansion: '豪宅',\n        penthouse: '顶层公寓'\n      },\n      features: {\n        garden: '花园',\n        pool: '游泳池',\n        garage: '车库',\n        security: '安保系统',\n        view: '景观视野',\n        central: '中心位置',\n        quiet: '安静社区',\n        modern: '现代装修',\n        classic: '经典风格',\n        luxury: '豪华装修'\n      }\n    }\n  },\n\n  // 添加房屋名称和描述\n  houses: {\n    small: {\n      name: '单身公寓',\n      description: '适合单身人士居住的小型公寓，位置便利但空间有限。'\n    },\n    medium: {\n      name: '二手旧房',\n      description: '年代较久的二手住宅，价格适中但可能需要装修。空间较大，非常适合改造成理想的家。'\n    },\n    large: {\n      name: '高档小区',\n      description: '现代化高档住宅小区，环境优美，配套设施齐全。社区环境安全，是家庭居住的绝佳选择。'\n    },\n    luxury: {\n      name: '现代别墅',\n      description: '独栋现代别墅，拥有私家花园和车库。宽敞的空间和精致的设计，彰显主人的品味与地位。'\n    },\n    mansion: {\n      name: '私人庄园',\n      description: '大型私人庄园，带有大片绿地和多功能区域。拥有这样的房产，代表你已达到人生巅峰！'\n    }\n  },\n\n  buyModal: {\n    title: '购买 {product}',\n    price: '单价',\n    availableMoney: '可用资金',\n    availableSpace: '可用空间',\n    quantity: '购买数量',\n    totalCost: '总花费',\n    maxQuantity: '最大',\n    confirm: '确认购买',\n    cancel: '取消'\n  },\n\n  sellModal: {\n    title: '出售 {product}',\n    purchasePrice: '买入价',\n    currentPrice: '当前价',\n    quantity: '持有数量',\n    sellQuantity: '出售数量',\n    potentialProfit: '预计盈亏',\n    totalIncome: '总收入',\n    maxQuantity: '全部',\n    confirm: '确认出售',\n    cancel: '取消'\n  },\n\n  houseModal: {\n    title: '购买 {house}',\n    confirmPurchase: '确认购买此房屋吗？',\n    price: '房屋价格',\n    availableMoney: '可用资金',\n    remainingMoney: '购买后剩余',\n    confirm: '确认购买',\n    cancel: '取消',\n    endGame: '购买此房屋将结束游戏'\n  },\n\n  trends: {\n    rising_strong: '价格急剧上涨',\n    rising: '价格上涨中',\n    stable_high: '高位稳定',\n    stable: '价格稳定',\n    stable_low: '低位稳定',\n    falling: '价格下跌中',\n    falling_strong: '价格急剧下跌',\n    volatile: '价格剧烈波动',\n    trendAnalysis: {\n      title: '趋势分析',\n      shortTerm: '短期趋势',\n      midTerm: '中期趋势',\n      longTerm: '长期趋势',\n      prediction: '预测',\n      confidence: '置信度',\n      high: '高',\n      medium: '中',\n      low: '低'\n    }\n  }\n};\n","export default {\n  playerInfo: {\n    title: '玩家信息',\n    name: '姓名',\n    money: '资金',\n    debt: '债务',\n    capacity: '背包容量',\n    week: '周数',\n    repayDebt: '还款',\n    bank: '银行',\n    stats: {\n      title: '玩家统计',\n      totalProfit: '总利润',\n      transactions: '交易次数',\n      visitedLocations: '已访问地点',\n      eventsTriggered: '触发事件数',\n      highestSingleProfit: '单笔最高利润',\n      mostProfitableProduct: '最赚钱商品',\n      mostVisitedLocation: '最常去地点'\n    }\n  },\n\n  inventory: {\n    title: '背包',\n    capacityUsed: '容量: {used}/{total}',\n    productName: '商品名称',\n    quantity: '数量',\n    purchasePrice: '买入价',\n    currentPrice: '当前价',\n    trend: '趋势',\n    profit: '盈亏',\n    action: '操作',\n    sell: '出售',\n    empty: '背包是空的',\n    sort: {\n      default: '默认排序',\n      profitDesc: '利润从高到低',\n      profitAsc: '利润从低到高',\n      quantityDesc: '数量从多到少',\n      quantityAsc: '数量从少到多',\n      nameAsc: '名称正序',\n      nameDesc: '名称倒序'\n    },\n    filter: {\n      all: '全部商品',\n      profitable: '盈利商品',\n      unprofitable: '亏损商品'\n    },\n    details: {\n      title: '商品详情',\n      purchaseInfo: '购买信息',\n      purchaseDate: '购买日期',\n      purchaseLocation: '购买地点',\n      currentInfo: '当前信息',\n      potentialProfit: '潜在利润',\n      profitPercentage: '利润率'\n    }\n  },\n\n  repayModal: {\n    title: '偿还债务',\n    currentDebt: '当前债务',\n    availableMoney: '可用资金',\n    repayAmount: '还款金额',\n    remainingDebt: '剩余债务',\n    remainingMoney: '剩余资金',\n    fullRepay: '全部还清',\n    confirm: '确认还款',\n    cancel: '取消'\n  },\n\n  debtSystem: {\n    title: '债务系统',\n    currentDebt: '当前债务',\n    interestRate: '利率',\n    nextInterest: '下次利息',\n    paymentDue: '应付金额',\n    warning: {\n      high: '警告：债务过高',\n      critical: '危险：债务即将触发破产',\n      bankrupt: '您已破产！'\n    },\n    interestApplied: '已收取{amount}元利息'\n  },\n\n  bank: {\n    title: '银行服务',\n    deposit: '存款',\n    withdraw: '取款',\n    loan: '贷款',\n    repay: '还款',\n    currentDeposit: '当前存款',\n    currentLoan: '当前贷款',\n    interestRate: '利率',\n    depositInterest: '存款利率',\n    loanInterest: '贷款利率',\n    maxLoan: '最大贷款额度',\n    availableLoan: '可贷款额度',\n    amountToDeposit: '存款金额',\n    amountToWithdraw: '取款金额',\n    amountToLoan: '贷款金额',\n    amountToRepay: '还款金额',\n    confirmDeposit: '确认存款',\n    confirmWithdraw: '确认取款',\n    confirmLoan: '确认贷款',\n    confirmRepay: '确认还款',\n    interestInfo: '每周结算一次利息',\n    notEnoughMoney: '资金不足',\n    depositSuccess: '存款成功',\n    withdrawSuccess: '取款成功',\n    loanSuccess: '贷款成功',\n    repaySuccess: '还款成功',\n    weeklyInterest: '每周利息',\n    remainingMoney: '剩余资金',\n    remainingDeposit: '剩余存款',\n    remainingLoan: '剩余贷款',\n    remainingDebt: '剩余债务'\n  },\n\n  tutorial: {\n    tips: {\n      welcome: {\n        title: '欢迎来到《买房记》',\n        content: '在这个游戏中，你的目标是通过买卖商品赚取差价，最终积累足够的资金购买房产。<br><br>你有52周的时间来实现这个目标，祝你好运！'\n      },\n      market_intro: {\n        title: '市场交易',\n        content: '在市场标签页中，你可以购买各种商品。不同地点提供的商品和价格各不相同。<br><br>关注价格趋势，在价格低时购买，价格高时卖出，赚取差价。'\n      },\n      inventory_intro: {\n        title: '库存管理',\n        content: '在库存标签页中，你可以查看已购买的商品，并在合适的时机卖出。<br><br>注意背包容量有限，合理规划购买的商品数量。'\n      },\n      location_change: {\n        title: '切换地点',\n        content: '你可以在不同地点之间切换，每个地点都有不同的商品和价格。<br><br>利用不同地点之间的价格差异，可以赚取更多利润。'\n      },\n      price_trends: {\n        title: '价格趋势',\n        content: '商品价格会随时间波动，关注价格趋势是获利的关键。<br><br>上涨趋势表示价格可能继续上涨，下跌趋势表示价格可能继续下跌。'\n      },\n      special_products: {\n        title: '特色商品',\n        content: '每个地点都有特色商品，价格更优惠。特色商品在商品列表中会有特殊标记。<br><br>关注特色商品可以提高交易利润。'\n      },\n      houses: {\n        title: '房产购买',\n        content: '当你积累了足够的资金后，可以在房产标签页中购买房屋。<br><br>不同房屋有不同的价格，购买任意房屋都会结束游戏。'\n      },\n      mid_game: {\n        title: '游戏进展',\n        content: '你已经完成了游戏的四分之一！现在是时候制定更长远的计划了。<br><br>考虑积累更多资金，为购买房产做准备。'\n      },\n      late_game: {\n        title: '游戏后期',\n        content: '游戏已经过半，确保你的资金增长足够快，以便在游戏结束前购买理想的房产。<br><br>如果资金增长缓慢，可能需要调整交易策略或承担更多风险。'\n      }\n    },\n    help: {\n      title: '游戏帮助',\n      basics: '游戏基础',\n      trading: '交易技巧',\n      events: '事件系统',\n      settings: '游戏设置',\n      gotIt: '知道了',\n      dontShowAgain: '不再显示此提示',\n      prev: '上一条',\n      next: '下一条',\n      shortcuts: {\n        title: '键盘快捷键',\n        space: '进入下一周',\n        tab: '切换标签页',\n        esc: '打开/关闭菜单',\n        h: '打开帮助面板'\n      }\n    }\n  }\n};\n","export default {\r\n  event: {\r\n    title: '事件',\r\n    debtIncrease: '债务增加',\r\n    debtDecrease: '债务减少',\r\n    gainProduct: '获得物品',\r\n    loseProduct: '失去物品',\r\n    moneyGain: '获得资金',\r\n    moneyLoss: '失去资金',\r\n    priceChange: '价格变动',\r\n    capacityChange: '背包容量变化',\r\n    specialEvent: '特殊事件',\r\n    types: {\r\n      positive: '正面事件',\r\n      negative: '负面事件',\r\n      neutral: '中性事件',\r\n      mixed: '复合事件'\r\n    },\r\n    effects: {\r\n      money: '资金 {change}',\r\n      debt: '债务 {change}',\r\n      capacity: '背包容量 {change}',\r\n      product: '商品: {product} x {quantity}',\r\n      price: '{product} 价格 {change}',\r\n      location: '解锁地点: {location}'\r\n    },\r\n    choices: {\r\n      accept: '接受',\r\n      decline: '拒绝',\r\n      option1: '选项1',\r\n      option2: '选项2',\r\n      option3: '选项3',\r\n      continue: '继续'\r\n    },\r\n    notifications: {\r\n      triggered: '触发事件: {name}',\r\n      completed: '事件完成: {name}',\r\n      reward: '获得奖励: {reward}',\r\n      penalty: '受到惩罚: {penalty}',\r\n      choiceMade: '已选择: {choice}'\r\n    },\r\n    common: {\r\n      marketCrash: '市场崩盘',\r\n      marketBoom: '市场繁荣',\r\n      robbery: '遭遇抢劫',\r\n      lottery: '中彩票',\r\n      backpackUpgrade: '背包升级',\r\n      backpackDamage: '背包损坏',\r\n      investmentSuccess: '投资成功',\r\n      investmentFailure: '投资失败',\r\n      taxAudit: '税务审计',\r\n      inheritance: '意外继承',\r\n      donation: '慈善捐款',\r\n      discount: '特别折扣',\r\n      priceHike: '价格上涨',\r\n      specialOffer: '特别优惠',\r\n      blackMarket: '黑市交易'\r\n    },\r\n    descriptions: {\r\n      marketCrash: '市场突然崩盘！所有商品价格大幅下跌。',\r\n      marketBoom: '市场突然繁荣！所有商品价格大幅上涨。',\r\n      robbery: '你被抢劫了！失去了一些资金和商品。',\r\n      lottery: '恭喜你中了彩票！获得额外资金。',\r\n      backpackUpgrade: '你找到了一个更大的背包，容量增加！',\r\n      backpackDamage: '你的背包破损了，容量减少！',\r\n      investmentSuccess: '你的投资获得了成功，获得额外收益。',\r\n      investmentFailure: '你的投资失败了，损失了一些资金。',\r\n      taxAudit: '税务部门对你进行了审计，你需要支付一些税款。',\r\n      inheritance: '你意外继承了一笔财产，获得额外资金。',\r\n      donation: '你决定为慈善事业捐款，失去一些资金但获得了好评。',\r\n      discount: '商店推出了特别折扣，某些商品价格下降。',\r\n      priceHike: '由于供应短缺，某些商品价格上涨。',\r\n      specialOffer: '你收到了一个特别优惠，可以低价购买某些商品。',\r\n      blackMarket: '你发现了一个黑市交易机会，可以高价出售某些商品。'\r\n    }\r\n  },\r\n  \r\n  notifications: {\r\n    error: {\r\n      inventoryFull: '背包空间不足',\r\n      insufficientStock: '库存数量不足',\r\n      houseNotFound: '找不到指定的房屋',\r\n      alreadyOwned: '已经拥有此房屋',\r\n      invalidRepayment: '还款金额无效',\r\n      saveFailed: '保存游戏失败',\r\n      loadFailed: '找不到存档或存档已损坏',\r\n      insufficientFunds: '资金不足，无法购买',\r\n      autoSaveFailed: '自动保存失败',\r\n      autoSaveError: '自动保存过程出错'\r\n    },\r\n    success: {\r\n      purchased: '成功购买',\r\n      sold: '成功出售',\r\n      housePurchased: '成功购买房屋',\r\n      repaid: '成功还款',\r\n      gameSaved: '游戏已保存',\r\n      gameLoaded: '已加载游戏',\r\n      autoSaved: '自动保存成功'\r\n    },\r\n    info: {\r\n      endGame: '你选择了结束游戏',\r\n      timeUp: '时间已到！游戏结束',\r\n      bankrupt: '你已破产！游戏结束',\r\n      weekProgress: '进入第 {week} 周',\r\n      locationChange: '你已到达 {location}'\r\n    },\r\n    achievement: {\r\n      earlyGoal: '提前达成目标',\r\n      noDebtHouse: '零负债购房',\r\n      victory: '恭喜！你成功购买了最贵的房产！',\r\n      achieved: '你达成了成就: {name}'\r\n    }\r\n  }\r\n}; ","export default {\r\n  ui: {\r\n    mainMenu: {\r\n      title: '买房记',\r\n      newGame: '新游戏',\r\n      loadGame: '加载游戏',\r\n      settings: '设置',\r\n      exit: '退出',\r\n      version: '版本 {version}',\r\n      credits: '制作团队'\r\n    },\r\n    \r\n    saveMenu: {\r\n      title: '存档管理',\r\n      newSave: '新建存档',\r\n      loadSave: '加载存档',\r\n      deleteSave: '删除存档',\r\n      back: '返回',\r\n      noSaves: '没有找到存档',\r\n      saveDate: '保存日期: {date}',\r\n      saveWeek: '游戏周: {week}',\r\n      playerName: '玩家: {name}',\r\n      playerMoney: '资金: {money}',\r\n      confirmDelete: '确定要删除这个存档吗？',\r\n      overwriteConfirm: '存档已存在，是否覆盖？',\r\n      invalidSave: '无效的存档文件'\r\n    },\r\n    \r\n    gameView: {\r\n      nextWeek: '下一周',\r\n      menu: '菜单',\r\n      tabs: {\r\n        market: '市场',\r\n        inventory: '背包',\r\n        houses: '房屋'\r\n      },\r\n      weekDisplay: '第 {current}/{total} 周',\r\n      moneyDisplay: '{amount} 元',\r\n      debtDisplay: '债务: {amount} 元',\r\n      loading: '加载中...',\r\n      saving: '保存中...'\r\n    },\r\n    \r\n    dialogs: {\r\n      confirm: {\r\n        title: '确认',\r\n        ok: '确定',\r\n        cancel: '取消'\r\n      },\r\n      alert: {\r\n        title: '提示',\r\n        ok: '确定'\r\n      },\r\n      input: {\r\n        title: '输入',\r\n        ok: '确定',\r\n        cancel: '取消'\r\n      },\r\n      error: {\r\n        title: '错误',\r\n        ok: '确定',\r\n        details: '详细信息'\r\n      }\r\n    },\r\n    \r\n    toast: {\r\n      success: '成功',\r\n      error: '错误',\r\n      info: '提示',\r\n      warning: '警告'\r\n    },\r\n    \r\n    loading: {\r\n      initializing: '初始化游戏...',\r\n      loadingAssets: '加载资源...',\r\n      loadingGame: '加载游戏...',\r\n      savingGame: '保存游戏...',\r\n      processingTurn: '处理游戏回合...',\r\n      generatingWorld: '生成游戏世界...',\r\n      ready: '准备就绪'\r\n    },\r\n    \r\n    devTools: {\r\n      title: '开发工具',\r\n      addMoney: '添加资金',\r\n      removeMoney: '减少资金',\r\n      addDebt: '添加债务',\r\n      removeDebt: '减少债务',\r\n      skipWeek: '跳过周数',\r\n      unlockAllLocations: '解锁所有地点',\r\n      resetPrices: '重置价格',\r\n      triggerEvent: '触发事件',\r\n      amount: '数量',\r\n      apply: '应用',\r\n      cancel: '取消',\r\n      eventType: '事件类型',\r\n      warning: '警告：使用开发工具可能会影响游戏平衡和体验'\r\n    },\r\n    \r\n    charts: {\r\n      title: '图表',\r\n      priceHistory: '价格历史',\r\n      playerNetWorth: '玩家净资产',\r\n      weeklyProfit: '每周利润',\r\n      zoom: '缩放',\r\n      period: '周期',\r\n      showAll: '显示全部',\r\n      last10Weeks: '最近10周',\r\n      last20Weeks: '最近20周',\r\n      custom: '自定义',\r\n      noData: '暂无数据',\r\n      exportData: '导出数据',\r\n      importData: '导入数据'\r\n    },\r\n    \r\n    errorHandling: {\r\n      title: '错误处理',\r\n      message: '发生错误',\r\n      details: '详细信息',\r\n      stackTrace: '堆栈跟踪',\r\n      retry: '重试',\r\n      ignore: '忽略',\r\n      report: '报告问题',\r\n      close: '关闭',\r\n      errorBoundary: {\r\n        title: '组件错误',\r\n        message: '组件渲染出错',\r\n        reset: '重置组件'\r\n      }\r\n    }\r\n  }\r\n}; ","export default {\r\n  errors: {\r\n    defaultError: '发生了一个错误',\r\n    severity: {\r\n      fatal: '致命错误',\r\n      error: '错误',\r\n      warning: '警告',\r\n      info: '提示'\r\n    },\r\n    type: {\r\n      validation: {\r\n        default: '数据验证错误: {message}',\r\n        specific: {\r\n          required_field: '必填字段不能为空',\r\n          invalid_format: '数据格式不正确',\r\n          out_of_range: '数值超出允许范围',\r\n          invalid_type: '数据类型不正确',\r\n          duplicate_entry: '数据已存在',\r\n          too_short: '输入内容过短',\r\n          too_long: '输入内容过长'\r\n        }\r\n      },\r\n      network: {\r\n        default: '网络错误: {message}',\r\n        specific: {\r\n          connection_failed: '连接服务器失败，请检查您的网络连接',\r\n          timeout: '请求超时，请稍后重试',\r\n          server_error: '服务器错误',\r\n          api_error: 'API错误',\r\n          invalid_response: '无效的服务器响应',\r\n          offline: '您当前处于离线状态'\r\n        }\r\n      },\r\n      storage: {\r\n        default: '存储错误: {message}',\r\n        specific: {\r\n          file_not_found: '找不到文件',\r\n          permission_denied: '没有足够权限',\r\n          quota_exceeded: '存储空间不足',\r\n          data_corrupt: '数据已损坏',\r\n          unknown: '未知存储错误',\r\n          save_failed: '保存游戏失败',\r\n          load_failed: '加载游戏失败',\r\n          file_io_error: '文件读写错误',\r\n          invalid_format: '无效的文件格式',\r\n          version_mismatch: '版本不兼容'\r\n        }\r\n      },\r\n      game_logic: {\r\n        default: '游戏逻辑错误: {message}',\r\n        specific: {\r\n          invalid_operation: '无效的操作',\r\n          insufficient_funds: '资金不足',\r\n          inventory_full: '背包已满',\r\n          invalid_state: '无效的游戏状态',\r\n          invalid_transition: '无效的状态转换',\r\n          out_of_bounds: '超出边界',\r\n          dependency_missing: '缺少依赖项',\r\n          invalid_parameter: '无效的参数',\r\n          calculation_error: '计算错误',\r\n          rule_violation: '违反游戏规则'\r\n        }\r\n      },\r\n      system: {\r\n        default: '系统错误: {message}',\r\n        specific: {\r\n          initialization_failed: '初始化游戏失败',\r\n          resource_not_found: '找不到需要的资源',\r\n          memory_error: '内存错误',\r\n          performance_issue: '性能问题',\r\n          render_error: '渲染错误',\r\n          audio_error: '音频错误',\r\n          plugin_error: '插件错误',\r\n          compatibility_issue: '兼容性问题',\r\n          unexpected_state: '意外的系统状态',\r\n          critical_failure: '严重故障'\r\n        }\r\n      },\r\n      unknown: {\r\n        default: '{message}'\r\n      }\r\n    },\r\n    recovery: {\r\n      title: '错误恢复',\r\n      message: '游戏遇到了一个问题，正在尝试恢复...',\r\n      success: '恢复成功',\r\n      failed: '恢复失败',\r\n      options: {\r\n        retry: '重试',\r\n        reload: '重新加载',\r\n        reset: '重置游戏',\r\n        ignore: '忽略并继续',\r\n        report: '报告问题'\r\n      },\r\n      autoSave: {\r\n        corrupted: '自动存档已损坏',\r\n        notFound: '找不到自动存档',\r\n        incompatible: '自动存档与当前版本不兼容',\r\n        loadFailed: '加载自动存档失败'\r\n      },\r\n      stateSnapshot: {\r\n        restoring: '正在恢复游戏状态...',\r\n        noValidSnapshot: '没有可用的游戏状态快照',\r\n        partialRestore: '部分游戏状态已恢复',\r\n        fullRestore: '游戏状态已完全恢复'\r\n      }\r\n    },\r\n    errorLog: {\r\n      title: '错误日志',\r\n      empty: '没有记录的错误',\r\n      timestamp: '时间',\r\n      message: '消息',\r\n      type: '类型',\r\n      severity: '严重程度',\r\n      details: '详细信息',\r\n      actions: {\r\n        clear: '清空日志',\r\n        export: '导出日志',\r\n        filter: '筛选日志',\r\n        search: '搜索',\r\n        showDetails: '显示详情',\r\n        hideDetails: '隐藏详情'\r\n      }\r\n    }\r\n  }\r\n}; ","import { createI18n } from 'vue-i18n';\r\nimport zhCN from './langs/zh-CN';\r\nimport { handleError, ErrorType, ErrorSeverity } from '@/infrastructure/utils/errorHandler';\r\n// 预留英文导入\r\n// import enUS from './langs/en-US';\r\n\r\n/**\r\n * 检测用户首选语言\r\n * @returns {string} 检测到的语言代码\r\n */\r\nfunction getBrowserLanguage() {\r\n  const browserLang = navigator.language || navigator.userLanguage;\r\n  const supportedLangs = ['zh-CN']; // 暂只支持中文\r\n  \r\n  // 未来增加更多语言时取消注释\r\n  // if (browserLang.startsWith('en')) return 'en-US';\r\n  if (browserLang.startsWith('zh')) return 'zh-CN';\r\n  \r\n  return 'zh-CN'; // 默认中文\r\n}\r\n\r\n/**\r\n * 尝试从本地存储加载用户语言设置\r\n * @returns {string} 用户设置的语言或检测到的浏览器语言\r\n */\r\nfunction getUserLanguage() {\r\n  try {\r\n    const savedLang = localStorage.getItem('userLanguage');\r\n    if (savedLang) return savedLang;\r\n  } catch (e) {\r\n    handleError(e, 'i18n.getUserLanguage', ErrorType.STORAGE, ErrorSeverity.INFO);\r\n    console.warn('无法从本地存储读取语言设置:', e);\r\n  }\r\n  \r\n  return getBrowserLanguage();\r\n}\r\n\r\n/**\r\n * 创建并配置i18n实例\r\n * @returns {I18n} 配置好的i18n实例\r\n */\r\nexport function setupI18n() {\r\n  const i18n = createI18n({\r\n    legacy: false, // 使用Vue 3 Composition API\r\n    locale: getUserLanguage(),\r\n    fallbackLocale: 'zh-CN',\r\n    messages: {\r\n      'zh-CN': zhCN,\r\n      // 'en-US': enUS, // 预留\r\n    },\r\n    // 启用日期本地化\r\n    datetimeFormats: {\r\n      'zh-CN': {\r\n        short: {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit'\r\n        },\r\n        long: {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric',\r\n          hour: 'numeric',\r\n          minute: 'numeric'\r\n        }\r\n      }\r\n    },\r\n    // 启用数字本地化\r\n    numberFormats: {\r\n      'zh-CN': {\r\n        currency: {\r\n          style: 'currency',\r\n          currency: 'CNY',\r\n          notation: 'standard'\r\n        },\r\n        decimal: {\r\n          style: 'decimal',\r\n          minimumFractionDigits: 0,\r\n          maximumFractionDigits: 2\r\n        },\r\n        percent: {\r\n          style: 'percent',\r\n          useGrouping: false\r\n        }\r\n      }\r\n    }\r\n  });\r\n  \r\n  // 添加语言切换方法\r\n  i18n.global.setLanguage = (lang) => {\r\n    if (!i18n.global.availableLocales.includes(lang)) {\r\n      console.warn(`语言 ${lang} 不可用，使用默认语言`);\r\n      lang = i18n.global.fallbackLocale.value;\r\n    }\r\n    \r\n    i18n.global.locale.value = lang;\r\n    \r\n    // 同步设置日期和数字格式\r\n    document.querySelector('html').setAttribute('lang', lang);\r\n    \r\n    // 保存用户语言偏好\r\n    try {\r\n      localStorage.setItem('userLanguage', lang);\r\n    } catch (e) {\r\n      handleError(e, 'i18n.setLanguage', ErrorType.STORAGE, ErrorSeverity.INFO);\r\n      console.warn('无法保存语言设置到本地存储:', e);\r\n    }\r\n  };\r\n  \r\n  // 添加获取支持语言列表的方法\r\n  i18n.global.getSupportedLanguages = () => {\r\n    return [\r\n      { code: 'zh-CN', name: '简体中文', flag: '🇨🇳' }\r\n      // { code: 'en-US', name: 'English', flag: '🇺🇸' } // 预留\r\n    ];\r\n  };\r\n  \r\n  // 添加格式化器助手\r\n  i18n.global.formatCurrency = (amount) => {\r\n    return i18n.global.n(amount, 'currency');\r\n  };\r\n  \r\n  i18n.global.formatDate = (date, format = 'long') => {\r\n    return i18n.global.d(date, format);\r\n  };\r\n  \r\n  i18n.global.formatNumber = (number) => {\r\n    return i18n.global.n(number, 'decimal');\r\n  };\r\n  \r\n  i18n.global.formatPercent = (number) => {\r\n    return i18n.global.n(number, 'percent');\r\n  };\r\n  \r\n  return i18n;\r\n} ","import { setupI18n } from './setup';\r\n\r\n// 创建并配置i18n实例\r\nconst i18n = setupI18n();\r\n\r\nexport default i18n;\r\n\r\n// 导出辅助函数，方便在组件外部使用\r\nexport const t = i18n.global.t;\r\nexport const d = i18n.global.d;\r\nexport const n = i18n.global.n;\r\nexport const setLanguage = i18n.global.setLanguage;\r\nexport const getSupportedLanguages = i18n.global.getSupportedLanguages;\r\nexport const formatCurrency = i18n.global.formatCurrency;\r\nexport const formatDate = i18n.global.formatDate;\r\nexport const formatNumber = i18n.global.formatNumber;\r\nexport const formatPercent = i18n.global.formatPercent; ","'use strict';\n\nmodule.exports = scopeFactory;\n\nfunction scopeFactory(logger) {\n  return Object.defineProperties(scope, {\n    defaultLabel: { value: '', writable: true },\n    labelPadding: { value: true, writable: true },\n    maxLabelLength: { value: 0, writable: true },\n    labelLength: {\n      get() {\n        switch (typeof scope.labelPadding) {\n          case 'boolean': return scope.labelPadding ? scope.maxLabelLength : 0;\n          case 'number': return scope.labelPadding;\n          default: return 0;\n        }\n      },\n    },\n  });\n\n  function scope(label) {\n    scope.maxLabelLength = Math.max(scope.maxLabelLength, label.length);\n\n    const newScope = {};\n    for (const level of logger.levels) {\n      newScope[level] = (...d) => logger.logData(d, { level, scope: label });\n    }\n    newScope.log = newScope.info;\n    return newScope;\n  }\n}\n","'use strict';\n\nconst scopeFactory = require('./scope');\nconst Buffering = require('./Buffering');\n\n/**\n * @property {Function} error\n * @property {Function} warn\n * @property {Function} info\n * @property {Function} verbose\n * @property {Function} debug\n * @property {Function} silly\n */\nclass Logger {\n  static instances = {};\n\n  dependencies = {};\n  errorHandler = null;\n  eventLogger = null;\n  functions = {};\n  hooks = [];\n  isDev = false;\n  levels = null;\n  logId = null;\n  scope = null;\n  transports = {};\n  variables = {};\n\n  constructor({\n    allowUnknownLevel = false,\n    dependencies = {},\n    errorHandler,\n    eventLogger,\n    initializeFn,\n    isDev = false,\n    levels = ['error', 'warn', 'info', 'verbose', 'debug', 'silly'],\n    logId,\n    transportFactories = {},\n    variables,\n  } = {}) {\n    this.addLevel = this.addLevel.bind(this);\n    this.create = this.create.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.logData = this.logData.bind(this);\n    this.processMessage = this.processMessage.bind(this);\n\n    this.allowUnknownLevel = allowUnknownLevel;\n    this.buffering = new Buffering(this);\n    this.dependencies = dependencies;\n    this.initializeFn = initializeFn;\n    this.isDev = isDev;\n    this.levels = levels;\n    this.logId = logId;\n    this.scope = scopeFactory(this);\n    this.transportFactories = transportFactories;\n    this.variables = variables || {};\n\n    for (const name of this.levels) {\n      this.addLevel(name, false);\n    }\n    this.log = this.info;\n    this.functions.log = this.log;\n\n    this.errorHandler = errorHandler;\n    errorHandler?.setOptions({ ...dependencies, logFn: this.error });\n\n    this.eventLogger = eventLogger;\n    eventLogger?.setOptions({ ...dependencies, logger: this });\n\n    for (const [name, factory] of Object.entries(transportFactories)) {\n      this.transports[name] = factory(this, dependencies);\n    }\n\n    Logger.instances[logId] = this;\n  }\n\n  static getInstance({ logId }) {\n    return this.instances[logId] || this.instances.default;\n  }\n\n  addLevel(level, index = this.levels.length) {\n    if (index !== false) {\n      this.levels.splice(index, 0, level);\n    }\n\n    this[level] = (...args) => this.logData(args, { level });\n    this.functions[level] = this[level];\n  }\n\n  catchErrors(options) {\n    this.processMessage(\n      {\n        data: ['log.catchErrors is deprecated. Use log.errorHandler instead'],\n        level: 'warn',\n      },\n      { transports: ['console'] },\n    );\n    return this.errorHandler.startCatching(options);\n  }\n\n  create(options) {\n    if (typeof options === 'string') {\n      options = { logId: options };\n    }\n\n    return new Logger({\n      dependencies: this.dependencies,\n      errorHandler: this.errorHandler,\n      initializeFn: this.initializeFn,\n      isDev: this.isDev,\n      transportFactories: this.transportFactories,\n      variables: { ...this.variables },\n      ...options,\n    });\n  }\n\n  compareLevels(passLevel, checkLevel, levels = this.levels) {\n    const pass = levels.indexOf(passLevel);\n    const check = levels.indexOf(checkLevel);\n\n    if (check === -1 || pass === -1) {\n      return true;\n    }\n\n    return check <= pass;\n  }\n\n  initialize(options = {}) {\n    this.initializeFn({ logger: this, ...this.dependencies, ...options });\n  }\n\n  logData(data, options = {}) {\n    if (this.buffering.enabled) {\n      this.buffering.addMessage({ data, date: new Date(), ...options });\n    } else {\n      this.processMessage({ data, ...options });\n    }\n  }\n\n  processMessage(message, { transports = this.transports } = {}) {\n    if (message.cmd === 'errorHandler') {\n      this.errorHandler.handle(message.error, {\n        errorName: message.errorName,\n        processType: 'renderer',\n        showDialog: Boolean(message.showDialog),\n      });\n      return;\n    }\n\n    let level = message.level;\n    if (!this.allowUnknownLevel) {\n      level = this.levels.includes(message.level) ? message.level : 'info';\n    }\n\n    const normalizedMessage = {\n      date: new Date(),\n      logId: this.logId,\n      ...message,\n      level,\n      variables: {\n        ...this.variables,\n        ...message.variables,\n      },\n    };\n\n    for (const [transName, transFn] of this.transportEntries(transports)) {\n      if (typeof transFn !== 'function' || transFn.level === false) {\n        continue;\n      }\n\n      if (!this.compareLevels(transFn.level, message.level)) {\n        continue;\n      }\n\n      try {\n        // eslint-disable-next-line arrow-body-style\n        const transformedMsg = this.hooks.reduce((msg, hook) => {\n          return msg ? hook(msg, transFn, transName) : msg;\n        }, normalizedMessage);\n\n        if (transformedMsg) {\n          transFn({ ...transformedMsg, data: [...transformedMsg.data] });\n        }\n      } catch (e) {\n        this.processInternalErrorFn(e);\n      }\n    }\n  }\n\n  processInternalErrorFn(_e) {\n    // Do nothing by default\n  }\n\n  transportEntries(transports = this.transports) {\n    const transportArray = Array.isArray(transports)\n      ? transports\n      : Object.entries(transports);\n\n    return transportArray\n      .map((item) => {\n        switch (typeof item) {\n          case 'string':\n            return this.transports[item] ? [item, this.transports[item]] : null;\n          case 'function':\n            return [item.name, item];\n          default:\n            return Array.isArray(item) ? item : null;\n        }\n      })\n      .filter(Boolean);\n  }\n}\n\nmodule.exports = Logger;\n","'use strict';\n\nclass Buffering {\n  constructor({ processMessage }) {\n    this.processMessage = processMessage;\n    this.buffer = [];\n    this.enabled = false;\n\n    this.begin = this.begin.bind(this);\n    this.commit = this.commit.bind(this);\n    this.reject = this.reject.bind(this);\n  }\n\n  addMessage(message) {\n    this.buffer.push(message);\n  }\n\n  begin() {\n    this.enabled = [];\n  }\n\n  commit() {\n    this.enabled = false;\n    this.buffer.forEach((item) => this.processMessage(item));\n    this.buffer = [];\n  }\n\n  reject() {\n    this.enabled = false;\n    this.buffer = [];\n  }\n}\n\nmodule.exports = Buffering;\n","'use strict';\n\n// eslint-disable-next-line no-console\nconst consoleError = console.error;\n\nclass RendererErrorHandler {\n  logFn = null;\n  onError = null;\n  showDialog = false;\n  preventDefault = true;\n\n  constructor({ logFn = null } = {}) {\n    this.handleError = this.handleError.bind(this);\n    this.handleRejection = this.handleRejection.bind(this);\n    this.startCatching = this.startCatching.bind(this);\n    this.logFn = logFn;\n  }\n\n  handle(error, {\n    logFn = this.logFn,\n    errorName = '',\n    onError = this.onError,\n    showDialog = this.showDialog,\n  } = {}) {\n    try {\n      if (onError?.({ error, errorName, processType: 'renderer' }) !== false) {\n        logFn({ error, errorName, showDialog });\n      }\n    } catch {\n      consoleError(error);\n    }\n  }\n\n  setOptions({ logFn, onError, preventDefault, showDialog }) {\n    if (typeof logFn === 'function') {\n      this.logFn = logFn;\n    }\n\n    if (typeof onError === 'function') {\n      this.onError = onError;\n    }\n\n    if (typeof preventDefault === 'boolean') {\n      this.preventDefault = preventDefault;\n    }\n\n    if (typeof showDialog === 'boolean') {\n      this.showDialog = showDialog;\n    }\n  }\n\n  startCatching({ onError, showDialog } = {}) {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    this.setOptions({ onError, showDialog });\n\n    window.addEventListener('error', (event) => {\n      this.preventDefault && event.preventDefault?.();\n      this.handleError(event.error || event);\n    });\n    window.addEventListener('unhandledrejection', (event) => {\n      this.preventDefault && event.preventDefault?.();\n      this.handleRejection(event.reason || event);\n    });\n  }\n\n  handleError(error) {\n    this.handle(error, { errorName: 'Unhandled' });\n  }\n\n  handleRejection(reason) {\n    const error = reason instanceof Error\n      ? reason\n      : new Error(JSON.stringify(reason));\n    this.handle(error, { errorName: 'Unhandled rejection' });\n  }\n}\n\nmodule.exports = RendererErrorHandler;\n","'use strict';\n\nmodule.exports = { transform };\n\nfunction transform({\n  logger,\n  message,\n  transport,\n\n  initialData = message?.data || [],\n  transforms = transport?.transforms,\n}) {\n  return transforms.reduce((data, trans) => {\n    if (typeof trans === 'function') {\n      return trans({ data, logger, message, transport });\n    }\n\n    return data;\n  }, initialData);\n}\n","'use strict';\n\n/* eslint-disable no-console */\n\nconst { transform } = require('../../../core/transforms/transform');\n\nmodule.exports = consoleTransportRendererFactory;\n\nconst consoleMethods = {\n  error: console.error,\n  warn: console.warn,\n  info: console.info,\n  verbose: console.info,\n  debug: console.debug,\n  silly: console.debug,\n  log: console.log,\n};\n\nfunction consoleTransportRendererFactory(logger) {\n  return Object.assign(transport, {\n    format: '{h}:{i}:{s}.{ms}{scope} › {text}',\n    transforms: [formatDataFn],\n\n    writeFn({ message: { level, data } }) {\n      const consoleLogFn = consoleMethods[level] || consoleMethods.info;\n\n      // make an empty call stack\n      setTimeout(() => consoleLogFn(...data));\n    },\n  });\n\n  function transport(message) {\n    transport.writeFn({\n      message: { ...message, data: transform({ logger, message, transport }) },\n    });\n  }\n}\n\nfunction formatDataFn({\n  data = [],\n  logger = {},\n  message = {},\n  transport = {},\n}) {\n  if (typeof transport.format === 'function') {\n    return transport.format({\n      data,\n      level: message?.level || 'info',\n      logger,\n      message,\n      transport,\n    });\n  }\n\n  if (typeof transport.format !== 'string') {\n    return data;\n  }\n\n  data.unshift(transport.format);\n\n  // Concatenate the first two data items to support printf-like templates\n  if (typeof data[1] === 'string' && data[1].match(/%[1cdfiOos]/)) {\n    data = [`${data[0]}${data[1]}`, ...data.slice(2)];\n  }\n\n  const date = message.date || new Date();\n  data[0] = data[0]\n    .replace(/\\{(\\w+)}/g, (substring, name) => {\n      switch (name) {\n        case 'level': return message.level;\n        case 'logId': return message.logId;\n        case 'scope': {\n          const scope = message.scope || logger.scope?.defaultLabel;\n          return scope ? ` (${scope})` : '';\n        }\n        case 'text': return '';\n\n        case 'y': return date.getFullYear().toString(10);\n        case 'm': return (date.getMonth() + 1).toString(10)\n          .padStart(2, '0');\n        case 'd': return date.getDate().toString(10).padStart(2, '0');\n        case 'h': return date.getHours().toString(10).padStart(2, '0');\n        case 'i': return date.getMinutes().toString(10).padStart(2, '0');\n        case 's': return date.getSeconds().toString(10).padStart(2, '0');\n        case 'ms': return date.getMilliseconds().toString(10)\n          .padStart(3, '0');\n        case 'iso': return date.toISOString();\n\n        default: return message.variables?.[name] || substring;\n      }\n    })\n    .trim();\n\n  return data;\n}\n","'use strict';\n\nconst { transform } = require('../../../core/transforms/transform');\n\nmodule.exports = ipcTransportRendererFactory;\n\nconst RESTRICTED_TYPES = new Set([Promise, WeakMap, WeakSet]);\n\nfunction ipcTransportRendererFactory(logger) {\n  return Object.assign(transport, {\n    depth: 5,\n    transforms: [serializeFn],\n  });\n\n  function transport(message) {\n    if (!window.__electronLog) {\n      logger.processMessage(\n        {\n          data: ['electron-log: logger isn\\'t initialized in the main process'],\n          level: 'error',\n        },\n        { transports: ['console'] },\n      );\n      return;\n    }\n\n    try {\n      const serialized = transform({\n        initialData: message,\n        logger,\n        message,\n        transport,\n      });\n\n      __electronLog.sendToMain(serialized);\n    } catch (e) {\n      logger.transports.console({\n        data: ['electronLog.transports.ipc', e, 'data:', message.data],\n        level: 'error',\n      });\n    }\n  }\n}\n\n/**\n * Is type primitive, including null and undefined\n * @param {any} value\n * @returns {boolean}\n */\nfunction isPrimitive(value) {\n  return Object(value) !== value;\n}\n\nfunction serializeFn({\n  data,\n  depth,\n  seen = new WeakSet(),\n  transport = {},\n} = {}) {\n  const actualDepth = depth || transport.depth || 5;\n\n  if (seen.has(data)) {\n    return '[Circular]';\n  }\n\n  if (actualDepth < 1) {\n    if (isPrimitive(data)) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return '[Array]';\n    }\n\n    return `[${typeof data}]`;\n  }\n\n  if (['function', 'symbol'].includes(typeof data)) {\n    return data.toString();\n  }\n\n  if (isPrimitive(data)) {\n    return data;\n  }\n\n  // Object types\n\n  if (RESTRICTED_TYPES.has(data.constructor)) {\n    return `[${data.constructor.name}]`;\n  }\n\n  if (Array.isArray(data)) {\n    return data.map((item) => serializeFn({\n      data: item,\n      depth: actualDepth - 1,\n      seen,\n    }));\n  }\n\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n\n  if (data instanceof Error) {\n    return data.stack;\n  }\n\n  if (data instanceof Map) {\n    return new Map(\n      Array\n        .from(data)\n        .map(([key, value]) => [\n          serializeFn({ data: key, depth: actualDepth - 1, seen }),\n          serializeFn({ data: value, depth: actualDepth - 1, seen }),\n        ]),\n    );\n  }\n\n  if (data instanceof Set) {\n    return new Set(\n      Array.from(data).map(\n        (val) => serializeFn({ data: val, depth: actualDepth - 1, seen }),\n      ),\n    );\n  }\n\n  seen.add(data);\n\n  return Object.fromEntries(\n    Object.entries(data).map(\n      ([key, value]) => [\n        key,\n        serializeFn({ data: value, depth: actualDepth - 1, seen }),\n      ],\n    ),\n  );\n}\n","'use strict';\n\nconst Logger = require('../core/Logger');\nconst RendererErrorHandler = require('./lib/RendererErrorHandler');\nconst transportConsole = require('./lib/transports/console');\nconst transportIpc = require('./lib/transports/ipc');\n\nif (typeof process === 'object' && process.type === 'browser') {\n  // eslint-disable-next-line no-console\n  console.warn(\n    'electron-log/renderer is loaded in the main process. '\n    + 'It could cause unexpected behaviour.',\n  );\n}\n\nmodule.exports = createLogger();\nmodule.exports.Logger = Logger;\nmodule.exports.default = module.exports;\n\nfunction createLogger() {\n  const logger = new Logger({\n    allowUnknownLevel: true,\n    errorHandler: new RendererErrorHandler(),\n    initializeFn: () => {},\n    logId: 'default',\n    transportFactories: {\n      console: transportConsole,\n      ipc: transportIpc,\n    },\n    variables: {\n      processType: 'renderer',\n    },\n  });\n\n  logger.errorHandler.setOptions({\n    logFn({ error, errorName, showDialog }) {\n      logger.transports.console({\n        data: [errorName, error].filter(Boolean),\n        level: 'error',\n      });\n      logger.transports.ipc({\n        cmd: 'errorHandler',\n        error: {\n          cause: error?.cause,\n          code: error?.code,\n          name: error?.name,\n          message: error?.message,\n          stack: error?.stack,\n        },\n        errorName,\n        logId: logger.logId,\n        showDialog,\n      });\n    },\n  });\n\n  if (typeof window === 'object') {\n    window.addEventListener('message', (event) => {\n      const { cmd, logId, ...message } = event.data || {};\n      const instance = Logger.getInstance({ logId });\n\n      if (cmd === 'message') {\n        instance.processMessage(message, { transports: ['console'] });\n      }\n    });\n  }\n\n  // To support custom levels\n  return new Proxy(logger, {\n    get(target, prop) {\n      if (typeof target[prop] !== 'undefined') {\n        return target[prop];\n      }\n\n      return (...data) => logger.logData(data, { level: prop });\n    },\n  });\n}\n","/**\r\n * 统一错误处理工具\r\n * 提供全应用范围的错误处理机制\r\n */\r\nimport { ref } from 'vue';\r\nimport { ErrorType, ErrorSeverity } from './errorTypes';\r\nimport i18n from '../../i18n';\r\nimport electronLog from 'electron-log';\r\n\r\n// 重新导出ErrorType和ErrorSeverity，使其他文件可以直接从errorHandler导入\r\nexport { ErrorType, ErrorSeverity };\r\n\r\n// 错误日志存储\r\nconst errorLogs = ref([]);\r\nconst MAX_ERROR_LOGS = 200; // 最大保留日志数量\r\n\r\n// 游戏运行状态标记\r\nconst GAME_RUNNING_FLAG = 'gameRunning';\r\nconst LAST_ACTIVITY_KEY = 'lastGameActivity';\r\nconst ACTIVITY_TIMEOUT = 300000; // 5分钟无操作视为非活动状态\r\n\r\n// 缓存uiStore实例\r\nlet cachedUiStore = null;\r\n\r\n/**\r\n * 获取UI Store实例\r\n * @returns {Promise<Object>} UI Store实例\r\n */\r\nasync function getUiStore() {\r\n  if (cachedUiStore) {\r\n    return cachedUiStore;\r\n  }\r\n\r\n  // 重试次数和延迟\r\n  const maxRetries = 3;\r\n  const retryDelay = 300;\r\n  \r\n  // 重试函数\r\n  const retry = async (attempt = 0) => {\r\n    try {\r\n      const module = await import('../../stores/uiStore');\r\n      if (module && typeof module.useUiStore === 'function') {\r\n        const store = module.useUiStore();\r\n        // 验证store是否有效\r\n        if (store && typeof store === 'object') {\r\n          cachedUiStore = store;\r\n          return store;\r\n        } else {\r\n          throw new Error('Invalid uiStore instance');\r\n        }\r\n      } else {\r\n        throw new Error('useUiStore function not found');\r\n      }\r\n    } catch (err) {\r\n      console.error(`Failed to import uiStore (attempt ${attempt + 1}/${maxRetries}):`, err);\r\n      \r\n      // 如果还有重试次数，则延迟后重试\r\n      if (attempt < maxRetries - 1) {\r\n        console.log(`Retrying in ${retryDelay}ms...`);\r\n        await new Promise(resolve => setTimeout(resolve, retryDelay));\r\n        return retry(attempt + 1);\r\n      }\r\n      \r\n      // 重试次数用完，返回null\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  return retry();\r\n}\r\n\r\n/**\r\n * 处理错误\r\n * @param {Error} error 错误对象\r\n * @param {string} context 错误上下文\r\n * @param {string} type 错误类型\r\n * @param {string} severity 错误严重程度\r\n * @returns {Object} 错误信息对象\r\n */\r\nexport function handleError(error, context, type = ErrorType.UNKNOWN, severity = ErrorSeverity.ERROR) {\r\n  // 构建错误信息\r\n  const errorInfo = {\r\n    message: error.message || '未知错误',\r\n    context,\r\n    type,\r\n    severity,\r\n    timestamp: new Date().toISOString(),\r\n    stack: error.stack,\r\n    metadata: error.metadata || {}\r\n  };\r\n  \r\n  // 日志记录\r\n  logError(errorInfo);\r\n  \r\n  // 用户通知 - 根据严重程度决定通知方式\r\n  if (severity === ErrorSeverity.FATAL || severity === ErrorSeverity.ERROR) {\r\n    notifyUserWithDialog(errorInfo);\r\n  } else if (severity === ErrorSeverity.WARNING) {\r\n    notifyUserWithToast(errorInfo);\r\n  }\r\n  \r\n  // Electron日志 - 确保错误可追溯\r\n  if (window.electronAPI && window.electronAPI.logError) {\r\n    window.electronAPI.logError(errorInfo);\r\n  } else {\r\n    // 回退到electron-log\r\n    electronLog.error(`[${type}][${context}]`, error);\r\n  }\r\n  \r\n  // 开发环境下控制台输出更多信息\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.error(`[${type.toUpperCase()}][${context}]`, error);\r\n  }\r\n  \r\n  return errorInfo;\r\n}\r\n\r\n/**\r\n * 记录错误日志\r\n * @param {Object} errorInfo 错误信息对象\r\n */\r\nfunction logError(errorInfo) {\r\n  // 添加到错误日志\r\n  errorLogs.value.unshift(errorInfo);\r\n  \r\n  // 限制日志数量\r\n  if (errorLogs.value.length > MAX_ERROR_LOGS) {\r\n    errorLogs.value = errorLogs.value.slice(0, MAX_ERROR_LOGS);\r\n  }\r\n  \r\n  // 尝试将错误信息保存到本地存储\r\n  try {\r\n    const serializedLogs = JSON.stringify(errorLogs.value);\r\n    localStorage.setItem('errorLogs', serializedLogs);\r\n  } catch (e) {\r\n    console.error('Failed to save error logs to localStorage:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取错误日志\r\n * @returns {Array} 错误日志列表\r\n */\r\nexport function getErrorLogs() {\r\n  return [...errorLogs.value];\r\n}\r\n\r\n/**\r\n * 清除错误日志\r\n */\r\nexport function clearErrorLogs() {\r\n  errorLogs.value = [];\r\n  try {\r\n    localStorage.removeItem('errorLogs');\r\n  } catch (e) {\r\n    console.error('Failed to clear error logs from localStorage:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 加载保存的错误日志\r\n * @returns {Promise<Array>} 错误日志列表的Promise\r\n */\r\nexport function loadErrorLogs() {\r\n  return new Promise((resolve) => {\r\n    try {\r\n      const savedLogs = localStorage.getItem('errorLogs');\r\n      if (savedLogs) {\r\n        const parsedLogs = JSON.parse(savedLogs);\r\n        errorLogs.value = parsedLogs;\r\n        \r\n        // 确保不超过最大数量\r\n        if (errorLogs.value.length > MAX_ERROR_LOGS) {\r\n          errorLogs.value = errorLogs.value.slice(0, MAX_ERROR_LOGS);\r\n        }\r\n      }\r\n      resolve([...errorLogs.value]);\r\n    } catch (e) {\r\n      console.error('Failed to load error logs from localStorage:', e);\r\n      resolve([]);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 获取本地化的错误消息\r\n * @param {Object} errorInfo 错误信息对象\r\n * @returns {string} 本地化的错误消息\r\n */\r\nfunction getLocalizedErrorMessage(errorInfo) {\r\n  try {\r\n    // 尝试使用错误类型和消息的组合键\r\n    const specificKey = `errors.${errorInfo.type}.specific.${errorInfo.message\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '_')\r\n      .replace(/[^\\w]/g, '')}`;\r\n    \r\n    // 常规错误类型键\r\n    const typeKey = `errors.${errorInfo.type}.default`;\r\n    \r\n    // 默认错误信息\r\n    const defaultMsg = '发生错误';\r\n    \r\n    // 尝试按优先级获取本地化消息\r\n    if (i18n.global && i18n.global.te && i18n.global.te(specificKey)) {\r\n      return i18n.global.t(specificKey);\r\n    } else if (i18n.global && i18n.global.te && i18n.global.te(typeKey)) {\r\n      return i18n.global.t(typeKey, { message: errorInfo.message });\r\n    }\r\n    return errorInfo.message || defaultMsg;\r\n  } catch (e) {\r\n    console.error('Error getting localized error message:', e);\r\n    return errorInfo.message || '发生错误';\r\n  }\r\n}\r\n\r\n/**\r\n * 弹窗通知用户\r\n * @param {Object} errorInfo 错误信息对象\r\n */\r\nasync function notifyUserWithDialog(errorInfo) {\r\n  try {\r\n    // 获取UI Store\r\n    const uiStore = await getUiStore();\r\n    \r\n    if (uiStore && typeof uiStore.showErrorDialog === 'function') {\r\n      uiStore.showErrorDialog({\r\n        title: errorInfo.severity === ErrorSeverity.FATAL ? '严重错误' : '错误',\r\n        message: getLocalizedErrorMessage(errorInfo),\r\n        details: process.env.NODE_ENV !== 'production' ? errorInfo.stack : undefined,\r\n        timestamp: errorInfo.timestamp,\r\n        context: errorInfo.context\r\n      });\r\n    } else {\r\n      // 备用方案\r\n      console.error('UI Store不可用，使用备用错误提示');\r\n      alert(getLocalizedErrorMessage(errorInfo));\r\n    }\r\n  } catch (e) {\r\n    console.error('Error showing error dialog:', e);\r\n    alert(getLocalizedErrorMessage(errorInfo));\r\n  }\r\n}\r\n\r\n/**\r\n * Toast通知用户\r\n * @param {Object} errorInfo 错误信息对象\r\n */\r\nasync function notifyUserWithToast(errorInfo) {\r\n  try {\r\n    // 获取UI Store\r\n    const uiStore = await getUiStore();\r\n    \r\n    if (uiStore && typeof uiStore.showToast === 'function') {\r\n      uiStore.showToast({\r\n        type: 'error',\r\n        message: getLocalizedErrorMessage(errorInfo),\r\n        duration: 5000\r\n      });\r\n    } else {\r\n      // 降级到控制台输出\r\n      console.warn(getLocalizedErrorMessage(errorInfo));\r\n    }\r\n  } catch (e) {\r\n    console.warn('Error showing toast:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 异步错误处理包装器\r\n * @param {Function} asyncFn 异步函数\r\n * @param {string} context 错误上下文\r\n * @param {string} type 错误类型\r\n * @param {string} severity 错误严重程度\r\n * @returns {Promise<any>} 异步函数的结果\r\n */\r\nexport async function withErrorHandling(asyncFn, context, type = ErrorType.UNKNOWN, severity = ErrorSeverity.ERROR) {\r\n  try {\r\n    return await asyncFn();\r\n  } catch (error) {\r\n    handleError(error, context, type, severity);\r\n    throw error; // 允许调用方继续处理错误\r\n  }\r\n}\r\n\r\n/**\r\n * 专用于游戏核心系统的错误处理\r\n * @param {Function} asyncFn 异步函数\r\n * @param {string} context 上下文\r\n * @returns {Promise<any>} 异步函数的结果\r\n */\r\nexport async function withGameErrorHandling(asyncFn, context) {\r\n  try {\r\n    return await asyncFn();\r\n  } catch (error) {\r\n    // 尝试进行游戏状态恢复\r\n    try {\r\n      const { createEmergencySnapshot } = await import('../persistence/stateSnapshot');\r\n      const gameStore = await import('../../stores').then(module => module.useGameStore());\r\n      \r\n      // 创建紧急快照，以便后续恢复\r\n      createEmergencySnapshot(gameStore);\r\n      \r\n      // 尝试从快照恢复\r\n      await attemptGameRecovery(gameStore);\r\n    } catch (recoveryError) {\r\n      console.error('Failed to recover game state:', recoveryError);\r\n    }\r\n    \r\n    handleError(error, context, ErrorType.GAME_LOGIC, ErrorSeverity.ERROR);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * 尝试游戏状态恢复\r\n * @param {Object} gameStore - 游戏状态存储\r\n * @returns {Promise<boolean>} 是否成功恢复\r\n */\r\nexport async function attemptGameRecovery(gameStore) {\r\n  try {\r\n    // 导入需要的模块\r\n    const { loadLatestSnapshot, applySnapshot } = await import('../persistence/stateSnapshot');\r\n    const { useUiStore } = await import('../../stores/uiStore');\r\n    \r\n    // 加载最近的状态快照\r\n    const snapshot = await loadLatestSnapshot();\r\n    if (!snapshot) {\r\n      console.warn('无法恢复游戏状态：找不到快照');\r\n      return false;\r\n    }\r\n    \r\n    // 如果游戏已结束或未开始，不进行恢复\r\n    if (gameStore.gameOver || !gameStore.gameStarted) {\r\n      console.info('游戏未在活动状态，不进行恢复');\r\n      return false;\r\n    }\r\n    \r\n    // 显示恢复确认对话框\r\n    const uiStore = useUiStore();\r\n    return new Promise(resolve => {\r\n      uiStore.showRecoveryDialog({\r\n        snapshot,\r\n        onRecover: async () => {\r\n          const success = await applySnapshot(gameStore, snapshot);\r\n          if (success) {\r\n            uiStore.showToast({\r\n              type: 'success',\r\n              message: '游戏状态已成功恢复'\r\n            });\r\n          }\r\n          resolve(success);\r\n        },\r\n        onCancel: () => {\r\n          resolve(false);\r\n        }\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error('恢复游戏状态时出错:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 设置全局错误处理器\r\n * @param {Vue} app - Vue应用实例\r\n */\r\nexport function setupGlobalErrorHandlers(app) {\r\n  if (!app || !app.config) {\r\n    console.warn('无法设置全局错误处理：app实例无效');\r\n    return;\r\n  }\r\n\r\n  // 全局Vue错误处理\r\n  app.config.errorHandler = (err, vm, info) => {\r\n    // 获取组件名称\r\n    let componentName = 'Unknown';\r\n    try {\r\n      if (vm && vm.$options && vm.$options.name) {\r\n        componentName = vm.$options.name;\r\n      } else if (vm && vm.$root) {\r\n        componentName = 'Root Component';\r\n      }\r\n    } catch (e) {\r\n      componentName = 'Error getting component name';\r\n    }\r\n\r\n    handleError(\r\n      err, \r\n      `Vue组件: ${componentName}`, \r\n      ErrorType.COMPONENT, \r\n      ErrorSeverity.ERROR\r\n    );\r\n  };\r\n  \r\n  // 全局Promise错误处理\r\n  window.addEventListener('unhandledrejection', event => {\r\n    handleError(\r\n      event.reason || new Error('未处理的Promise异常'), \r\n      'Promise', \r\n      ErrorType.ASYNC, \r\n      ErrorSeverity.ERROR\r\n    );\r\n  });\r\n  \r\n  // 全局JS错误处理\r\n  window.addEventListener('error', event => {\r\n    // 忽略资源加载错误\r\n    if (event.error) {\r\n      handleError(\r\n        event.error,\r\n        '全局异常',\r\n        ErrorType.RUNTIME,\r\n        ErrorSeverity.ERROR\r\n      );\r\n    }\r\n  });\r\n  \r\n  // 初始化错误日志\r\n  loadErrorLogs();\r\n  \r\n  // 注册页面关闭前处理\r\n  window.addEventListener('beforeunload', () => {\r\n    clearGameRunningMark();\r\n  });\r\n}\r\n\r\n/**\r\n * 标记游戏正在运行\r\n * 用于检测异常退出\r\n */\r\nexport function markGameRunning() {\r\n  try {\r\n    localStorage.setItem(GAME_RUNNING_FLAG, 'true');\r\n    updateGameActivity();\r\n  } catch (e) {\r\n    console.warn('Failed to set game running flag:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 清除游戏运行标记\r\n * 在正常退出时调用\r\n */\r\nexport function clearGameRunningMark() {\r\n  try {\r\n    localStorage.removeItem(GAME_RUNNING_FLAG);\r\n  } catch (e) {\r\n    console.warn('Failed to clear game running flag:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 检查游戏是否异常退出\r\n * @returns {boolean} 是否检测到异常退出\r\n */\r\nexport function checkGameAbnormalExit() {\r\n  try {\r\n    const wasRunning = localStorage.getItem(GAME_RUNNING_FLAG) === 'true';\r\n    \r\n    if (!wasRunning) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查最后活动时间\r\n    const lastActivity = localStorage.getItem(LAST_ACTIVITY_KEY);\r\n    if (lastActivity) {\r\n      const lastActiveTime = parseInt(lastActivity, 10);\r\n      const now = Date.now();\r\n      \r\n      // 如果最后活动时间在5分钟内，认为是异常退出\r\n      // 否则可能是用户长时间未操作，浏览器自动关闭\r\n      if (now - lastActiveTime < ACTIVITY_TIMEOUT) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  } catch (e) {\r\n    console.warn('Failed to check game running flag:', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 更新游戏活动时间戳\r\n * 记录用户最后交互时间\r\n */\r\nexport function updateGameActivity() {\r\n  try {\r\n    localStorage.setItem(LAST_ACTIVITY_KEY, Date.now().toString());\r\n  } catch (e) {\r\n    console.warn('Failed to update game activity timestamp:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * 导出错误日志\r\n * @returns {Promise<boolean>} 导出结果的Promise\r\n */\r\nexport async function exportErrorLogs() {\r\n  return new Promise(async (resolve) => {\r\n    try {\r\n      if (window.electronAPI && window.electronAPI.exportErrorLogs) {\r\n        const result = await window.electronAPI.exportErrorLogs(errorLogs.value);\r\n        resolve(result.success);\r\n      } else {\r\n        // 浏览器环境下的导出\r\n        const blob = new Blob([JSON.stringify(errorLogs.value, null, 2)], { type: 'application/json' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `error-logs-${new Date().toISOString().replace(/:/g, '-')}.json`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n        resolve(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to export error logs:', error);\r\n      resolve(false);\r\n    }\r\n  });\r\n} ","/**\n * 图片路径工具\n * 管理游戏中各种图片资源的路径\n */\n\n/**\n * 获取房屋图片路径\n * @param {string} houseId 房屋ID\n * @returns {string} 图片路径\n */\nexport function getHouseImagePath(houseId) {\n  // 安全检查：如果houseId不是有效值，返回默认图片\n  if (!houseId || houseId === 'undefined' || houseId === 'null') {\n    return '/resources/assets/images/house_1.jpeg';\n  }\n\n  // 房屋ID与图片的映射关系\n  const imageMap = {\n    'apartment': '/resources/assets/images/house_1.jpeg',\n    'second_hand': '/resources/assets/images/house_2.jpeg',\n    'highend': '/resources/assets/images/house_3.jpeg',\n    'villa': '/resources/assets/images/house_4.jpeg',\n    'mansion': '/resources/assets/images/house_5.jpeg'\n  };\n\n  // 如果是数字ID，使用模运算获取1-5之间的图片\n  if (!isNaN(parseInt(houseId))) {\n    // 确保使用有效的数值，避免NaN\n    const parsedId = parseInt(houseId);\n    const imageIndex = parsedId ? Math.max(1, Math.min(5, (parsedId % 5) || 1)) : 1;\n    return `/resources/assets/images/house_${imageIndex}.jpeg`;\n  }\n\n  // 返回对应的图片路径，如果没有找到则返回默认图片\n  return imageMap[houseId] || '/resources/assets/images/house_1.jpeg';\n}\n\n/**\n * 获取其他类型资源的图片路径\n * @param {string} type 资源类型\n * @param {string} id 资源ID\n * @returns {string} 图片路径\n */\nexport function getResourceImagePath(type, id) {\n  // 未来可以扩展其他类型资源的图片路径处理\n  const basePath = './resources/assets/images/';\n  // 确保id有效，避免生成带有NaN的路径\n  const safeId = id && id !== 'undefined' && id !== 'null' ? id : 'default';\n\n  // 根据资源类型返回不同路径\n  switch (type) {\n    case 'house':\n      return getHouseImagePath(id);\n    case 'player':\n      return `${basePath}player_${safeId}.png`;\n    default:\n      return `${basePath}placeholder.png`;\n  }\n}\n","import { defineStore } from 'pinia';\r\nimport { ref } from 'vue';\r\n\r\nexport const useUiStore = defineStore('ui', () => {\r\n  // 错误对话框状态\r\n  const errorDialogVisible = ref(false);\r\n  const errorDialogData = ref(null);\r\n\r\n  // Toast通知状态\r\n  const toasts = ref([]);\r\n  const toastTimeouts = ref({});\r\n\r\n  // 恢复对话框状态\r\n  const recoveryDialogVisible = ref(false);\r\n  const recoveryDialogData = ref(null);\r\n\r\n  // 通用对话框状态\r\n  const dialogVisible = ref(false);\r\n  const dialogData = ref(null);\r\n\r\n  // 显示错误对话框\r\n  function showErrorDialog(data) {\r\n    errorDialogData.value = data;\r\n    errorDialogVisible.value = true;\r\n  }\r\n\r\n  // 关闭错误对话框\r\n  function closeErrorDialog() {\r\n    errorDialogVisible.value = false;\r\n    // 延迟清除数据，以便关闭动画完成\r\n    setTimeout(() => {\r\n      errorDialogData.value = null;\r\n    }, 300);\r\n  }\r\n\r\n  // 添加Toast通知\r\n  function addToast({ type = 'info', message = '', duration = 3000, action = null, actionText = '确定', actionCallback = null }) {\r\n    // 如果有相同内容的消息，先移除它\r\n    const existingToast = toasts.value.find(t => t.message === message);\r\n    if (existingToast) {\r\n      removeToast(existingToast.id);\r\n    }\r\n\r\n    const id = Date.now() + Math.random().toString(36).substring(2, 10);\r\n\r\n    const toast = {\r\n      id,\r\n      type,\r\n      message,\r\n      action,\r\n      actionText,\r\n      actionCallback\r\n    };\r\n\r\n    // 添加到通知列表\r\n    toasts.value.unshift(toast);\r\n\r\n    // 限制通知数量\r\n    if (toasts.value.length > 5) {\r\n      const oldestToast = toasts.value.pop();\r\n      if (toastTimeouts.value[oldestToast.id]) {\r\n        clearTimeout(toastTimeouts.value[oldestToast.id]);\r\n        delete toastTimeouts.value[oldestToast.id];\r\n      }\r\n    }\r\n\r\n    // 设置自动隐藏（强制使用3秒）\r\n    toastTimeouts.value[id] = setTimeout(() => {\r\n      removeToast(id);\r\n    }, 3000);\r\n\r\n    return id;\r\n  }\r\n\r\n  // 移除Toast通知\r\n  function removeToast(id) {\r\n    const index = toasts.value.findIndex(toast => toast.id === id);\r\n\r\n    if (index !== -1) {\r\n      toasts.value.splice(index, 1);\r\n\r\n      // 清除超时\r\n      if (toastTimeouts.value[id]) {\r\n        clearTimeout(toastTimeouts.value[id]);\r\n        delete toastTimeouts.value[id];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 显示恢复对话框\r\n  function showRecoveryDialog({ snapshot, message, title, allowCancel = true, onRecover, onCancel }) {\r\n    recoveryDialogData.value = {\r\n      snapshot,\r\n      message: message || '检测到游戏意外中断。是否恢复上次保存的游戏状态？',\r\n      title: title || '游戏恢复',\r\n      allowCancel,\r\n      onRecover: onRecover || (() => closeRecoveryDialog()),\r\n      onCancel: onCancel || (() => closeRecoveryDialog())\r\n    };\r\n    recoveryDialogVisible.value = true;\r\n  }\r\n\r\n  // 关闭恢复对话框\r\n  function closeRecoveryDialog() {\r\n    recoveryDialogVisible.value = false;\r\n\r\n    // 延迟清除数据\r\n    setTimeout(() => {\r\n      recoveryDialogData.value = null;\r\n    }, 300);\r\n  }\r\n\r\n  // 显示通用对话框\r\n  function showDialog(data) {\r\n    dialogData.value = data;\r\n    dialogVisible.value = true;\r\n  }\r\n\r\n  // 关闭通用对话框\r\n  function closeDialog() {\r\n    dialogVisible.value = false;\r\n    // 延迟清除数据，以便关闭动画完成\r\n    setTimeout(() => {\r\n      dialogData.value = null;\r\n    }, 300);\r\n  }\r\n\r\n  // 兼容旧版本API的showToast方法\r\n  function showToast({ type = 'info', message = '', duration = 3000 }) {\r\n    return addToast({ type, message, duration });\r\n  }\r\n\r\n  // 兼容旧版本API的closeToast方法\r\n  function closeToast() {\r\n    // 清除所有通知\r\n    toasts.value.forEach(toast => {\r\n      removeToast(toast.id);\r\n    });\r\n  }\r\n\r\n  return {\r\n    // 错误对话框\r\n    errorDialogVisible,\r\n    errorDialogData,\r\n    showErrorDialog,\r\n    closeErrorDialog,\r\n\r\n    // Toast通知\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    showToast,\r\n    closeToast,\r\n\r\n    // 恢复对话框\r\n    recoveryDialogVisible,\r\n    recoveryDialogData,\r\n    showRecoveryDialog,\r\n    closeRecoveryDialog,\r\n\r\n    // 通用对话框\r\n    dialogVisible,\r\n    dialogData,\r\n    showDialog,\r\n    closeDialog\r\n  };\r\n});\r\n","import { defineStore } from 'pinia';\r\nimport { handleError, ErrorType, ErrorSeverity } from '@/infrastructure/utils/errorHandler';\r\n\r\nexport const useSettingsStore = defineStore('settings', {\r\n  state: () => ({\r\n    // 游戏设置\r\n    difficulty: 'normal', // easy, normal, hard\r\n    tutorialEnabled: true,\r\n    autoSave: true,\r\n    autoSaveInterval: 5, // 分钟\r\n    \r\n    // 音频设置\r\n    soundEnabled: true,\r\n    soundVolume: 0.7, // 0-1\r\n    musicEnabled: true,\r\n    musicVolume: 0.5, // 0-1\r\n    \r\n    // UI设置\r\n    language: 'zh-CN',\r\n    theme: 'light', // light, dark\r\n    uiScale: 1.0, // 0.8-1.2\r\n    animationsEnabled: true,\r\n    \r\n    // 性能设置\r\n    graphicsQuality: 'medium', // low, medium, high\r\n    \r\n    // 当前场景（用于背景音乐）\r\n    currentScene: 'menu' // menu, game\r\n  }),\r\n  \r\n  actions: {\r\n    // 更新单个设置\r\n    updateSetting(key, value) {\r\n      if (key in this.$state) {\r\n        this[key] = value;\r\n        this.saveSettings();\r\n      }\r\n    },\r\n    \r\n    // 更新多个设置\r\n    updateSettings(settings) {\r\n      Object.entries(settings).forEach(([key, value]) => {\r\n        if (key in this.$state) {\r\n          this[key] = value;\r\n        }\r\n      });\r\n      this.saveSettings();\r\n    },\r\n    \r\n    // 重置所有设置为默认值\r\n    resetSettings() {\r\n      this.$reset();\r\n      this.saveSettings();\r\n    },\r\n    \r\n    // 保存设置到本地存储\r\n    saveSettings() {\r\n      try {\r\n        const settingsData = JSON.stringify(this.$state);\r\n        localStorage.setItem('house-journey-settings', settingsData);\r\n      } catch (error) {\r\n        handleError(error, 'SettingsStore', ErrorType.STORAGE, ErrorSeverity.WARNING);\r\n        console.error('保存设置失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 从本地存储加载设置\r\n    loadSettings() {\r\n      try {\r\n        const settingsData = localStorage.getItem('house-journey-settings');\r\n        if (settingsData) {\r\n          const settings = JSON.parse(settingsData);\r\n          this.updateSettings(settings);\r\n        }\r\n      } catch (error) {\r\n        handleError(error, 'SettingsStore', ErrorType.STORAGE, ErrorSeverity.WARNING);\r\n        console.error('加载设置失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 设置当前场景并更新背景音乐\r\n    setCurrentScene(scene) {\r\n      this.currentScene = scene;\r\n      \r\n      // 如果有全局音频管理器，播放对应场景的背景音乐\r\n      if (window.gameAudio && this.musicEnabled) {\r\n        window.gameAudio.playBGM(scene);\r\n      }\r\n    }\r\n  }\r\n}); ","import { defineStore } from 'pinia';\nimport i18n from '../../i18n';\nimport { useGameCoreStore } from '../gameCore';\n\n/**\n * 玩家状态管理\n * 负责管理玩家的基本信息、财产、库存等\n */\nexport const usePlayerStore = defineStore('player', {\n  state: () => ({\n    name: '',\n    money: 2000,\n    debt: 5000,\n    loanPrincipal: 5000, // 添加贷款本金追踪，初始值与debt相同\n    capacity: 100,\n    inventoryUsed: 0,\n    inventory: [],\n    purchasedHouses: [],\n    initialized: false, // 添加初始化标志\n    // 添加银行相关状态\n    bankDeposit: 0,\n    maxLoanAmount: 20000,\n    statistics: {\n      weekCount: 1,\n      transactionCount: 0,\n      totalProfit: 0,\n      maxMoney: 2000,\n      visitedLocations: [],\n      housePurchases: [], // 新增：记录所有已购房屋的购买信息\n      firstHousePurchaseWeek: null, // 新增：记录首次购房的周数\n      mostExpensiveHouse: null, // 新增：记录最贵的已购房屋\n      highestLevelHouse: null // 新增：记录最高等级的已购房屋\n    }\n  }),\n\n  actions: {\n    /**\n     * 初始化玩家\n     * @param {string} playerName - 玩家名称\n     * @returns {Promise} 初始化完成的Promise\n     */\n    initializePlayer(playerName) {\n      console.log('PlayerStore - 初始化玩家:', playerName);\n\n      return new Promise((resolve) => {\n        // 模拟加载过程\n        setTimeout(() => {\n          this.name = playerName || i18n.global.t('system.defaultPlayerName');\n          this.money = 2000;\n          this.debt = 5000;\n          this.loanPrincipal = 5000; // 设置初始贷款本金\n          this.capacity = 100;\n          this.inventoryUsed = 0;\n          this.inventory = [];\n          this.purchasedHouses = [];\n          this.initialized = true; // 设置初始化标志\n          // 初始化银行状态\n          this.bankDeposit = 0;\n          this.maxLoanAmount = 20000;\n          this.statistics = {\n            weekCount: 1,\n            transactionCount: 0,\n            totalProfit: 0,\n            maxMoney: 2000,\n            visitedLocations: [],\n            housePurchases: [],\n            firstHousePurchaseWeek: null,\n            mostExpensiveHouse: null,\n            highestLevelHouse: null\n          };\n\n          console.log('PlayerStore - 玩家初始化完成');\n          resolve();\n        }, 400);\n      });\n    },\n\n    /**\n     * 更新每周玩家状态\n     * @param {number} currentWeek - 当前周数\n     */\n    updateWeeklyPlayerState(currentWeek) {\n      this.statistics.weekCount = currentWeek;\n\n      // 更新债务（每周增加0.5%的利息）\n      // 注意：利息只增加债务总额，不影响贷款本金\n      if (this.debt > 0) {\n        const interest = Math.floor(this.debt * 0.005);\n        this.debt += interest;\n      }\n\n      // 更新银行存款利息（每周增加0.3%的利息 - 低于贷款利率）\n      if (this.bankDeposit > 0) {\n        const depositInterest = Math.floor(this.bankDeposit * 0.003);\n        this.bankDeposit += depositInterest;\n      }\n\n      // 更新统计信息\n      if (this.money > this.statistics.maxMoney) {\n        this.statistics.maxMoney = this.money;\n      }\n    },\n\n    /**\n     * 添加资金\n     * @param {number} amount - 金额\n     * @returns {boolean} 是否成功\n     */\n    addMoney(amount) {\n      if (amount <= 0) return false;\n\n      this.money += amount;\n\n      // 更新最大资金记录\n      if (this.money > this.statistics.maxMoney) {\n        this.statistics.maxMoney = this.money;\n      }\n\n      return true;\n    },\n\n    /**\n     * 消费资金\n     * @param {number} amount - 金额\n     * @returns {boolean} 是否成功\n     */\n    spendMoney(amount) {\n      if (amount <= 0 || amount > this.money) return false;\n\n      this.money -= amount;\n      return true;\n    },\n\n    /**\n     * 偿还债务\n     * @param {number} amount - 偿还金额\n     * @returns {boolean} 是否成功偿还\n     */\n    repayDebt(amount) {\n      // 检查金额有效性\n      if (amount <= 0 || amount > this.money) {\n        return false;\n      }\n\n      // 如果金额大于债务，只还清债务\n      if (amount > this.debt) {\n        amount = this.debt;\n      }\n\n      this.money -= amount;\n      this.debt -= amount;\n\n      // 更新贷款本金\n      // 如果还款金额小于等于贷款本金，直接减少本金\n      if (amount <= this.loanPrincipal) {\n        this.loanPrincipal -= amount;\n      } else {\n        // 如果还款金额大于贷款本金，则本金归零\n        this.loanPrincipal = 0;\n      }\n\n      return true;\n    },\n\n    /**\n     * 添加已访问地点\n     * @param {string} locationId - 地点ID\n     * @returns {boolean} 是否为新地点\n     */\n    addVisitedLocation(locationId) {\n      if (!this.statistics.visitedLocations.includes(locationId)) {\n        this.statistics.visitedLocations.push(locationId);\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * 购买房产\n     * @param {Object} house - 房屋对象\n     * @returns {boolean} 是否购买成功\n     */\n    purchaseHouse(house) {\n      // 严格检查参数\n      if (!house || typeof house !== 'object') {\n        console.error('无效的房屋对象传递给purchaseHouse');\n        return false;\n      }\n\n      // 必需属性检查\n      const requiredProps = ['id', 'name', 'level', 'price'];\n      for (const prop of requiredProps) {\n        if (!(prop in house)) {\n          console.error(`购买房屋失败：房屋对象缺少必需属性 ${prop}`);\n          return false;\n        }\n      }\n\n      // 严格检查是否有足够资金（再次验证，双重保障）\n      if (house.price > this.money) {\n        console.warn(`购买失败：资金不足 (拥有: ${this.money}, 需要: ${house.price}, 差额: ${house.price - this.money})`);\n        return false;\n      }\n\n      // 检查是否已拥有该房屋\n      if (this.purchasedHouses.some(h => h.houseId === house.id)) {\n        console.warn(`购买失败：已拥有ID为 ${house.id} 的房屋`);\n        return false;\n      }\n\n      // 扣除资金\n      this.money -= house.price;\n\n      // 记录购买时间（游戏周数）\n      const gameStore = useGameCoreStore();\n      const purchaseWeek = gameStore.currentWeek;\n\n      // 添加到已购房屋列表，包含更完整的信息\n      const purchaseRecord = {\n        houseId: house.id,\n        name: house.name,\n        level: house.level,\n        purchasePrice: house.price,\n        purchaseWeek,\n        description: house.description || `${house.level}级房产`,\n        purchaseDate: new Date().toISOString()\n      };\n\n      this.purchasedHouses.push(purchaseRecord);\n\n      // 更新统计信息\n      if (!this.statistics.housePurchases) {\n        this.statistics.housePurchases = [];\n      }\n\n      this.statistics.housePurchases.push({\n        houseId: house.id,\n        name: house.name,\n        level: house.level,\n        price: house.price,\n        week: purchaseWeek\n      });\n\n      // 如果这是第一套房产，记录首次购房时间\n      if (this.statistics.firstHousePurchaseWeek === null) {\n        this.statistics.firstHousePurchaseWeek = purchaseWeek;\n      }\n\n      // 记录最昂贵的房产购买\n      if (!this.statistics.mostExpensiveHouse ||\n          house.price > this.statistics.mostExpensiveHouse.price) {\n        this.statistics.mostExpensiveHouse = {\n          id: house.id,\n          name: house.name,\n          price: house.price,\n          level: house.level,\n          week: purchaseWeek\n        };\n      }\n\n      // 记录最高等级的房产购买\n      if (!this.statistics.highestLevelHouse ||\n          house.level > this.statistics.highestLevelHouse.level) {\n        this.statistics.highestLevelHouse = {\n          id: house.id,\n          name: house.name,\n          price: house.price,\n          level: house.level,\n          week: purchaseWeek\n        };\n      }\n\n      console.log(`成功购买房产: ${house.name} - ¥${house.price} (第${purchaseWeek}周)`);\n      return true;\n    },\n\n    /**\n     * 存款到银行\n     * @param {number} amount - 存款金额\n     * @returns {boolean} 是否成功\n     */\n    depositToBank(amount) {\n      // 检查金额有效性\n      if (amount <= 0 || amount > this.money) {\n        return false;\n      }\n\n      this.money -= amount;\n      this.bankDeposit += amount;\n      return true;\n    },\n\n    /**\n     * 从银行取款\n     * @param {number} amount - 取款金额\n     * @returns {boolean} 是否成功\n     */\n    withdrawFromBank(amount) {\n      // 检查金额有效性\n      if (amount <= 0 || amount > this.bankDeposit) {\n        return false;\n      }\n\n      this.bankDeposit -= amount;\n      this.money += amount;\n      return true;\n    },\n\n    /**\n     * 从银行贷款\n     * @param {number} amount - 贷款金额\n     * @returns {boolean} 是否成功\n     */\n    takeLoan(amount) {\n      // 检查金额有效性和贷款上限\n      // 使用 loanPrincipal 而不是 debt 来计算可贷款金额\n      const availableLoanAmount = this.availableLoanAmount;\n      if (amount <= 0 || amount > availableLoanAmount) {\n        return false;\n      }\n\n      this.debt += amount;\n      this.loanPrincipal += amount; // 更新贷款本金\n      this.money += amount;\n      return true;\n    }\n  },\n\n  getters: {\n    /**\n     * 计算玩家净资产\n     * @returns {number} 净资产\n     */\n    netWorth: (state) => {\n      // 资金 + 银行存款 + 背包价值 + 房产价值 - 债务\n      const inventoryValue = state.inventory.reduce(\n        (total, item) => total + (item.quantity * item.purchasePrice), 0\n      );\n\n      const houseValue = state.purchasedHouses.reduce(\n        (total, house) => total + house.purchasePrice, 0\n      );\n\n      return state.money + state.bankDeposit + inventoryValue + houseValue - state.debt;\n    },\n\n    /**\n     * 计算玩家总资金（现金+背包商品价值）\n     * @returns {number} 总资金\n     */\n    totalMoney: (state) => {\n      // 资金 + 背包价值（按原价计算）\n      const inventoryValue = state.inventory.reduce(\n        (total, item) => total + (item.quantity * item.purchasePrice), 0\n      );\n\n      return state.money + inventoryValue;\n    },\n\n    /**\n     * 判断是否拥有最高级别房屋\n     * @returns {boolean} 是否拥有最高级别房屋\n     */\n    hasHighestHouse: (state) => {\n      return state.purchasedHouses.some(house => house.level >= 5);\n    },\n\n    /**\n     * 获取最贵的已购房屋\n     * @returns {Object|null} 最贵的已购房屋\n     */\n    mostExpensiveHouse: (state) => {\n      if (state.purchasedHouses.length === 0) return null;\n\n      return state.purchasedHouses.reduce(\n        (most, house) => house.purchasePrice > most.purchasePrice ? house : most,\n        state.purchasedHouses[0]\n      );\n    },\n\n    /**\n     * 获取背包可用空间\n     * @returns {number} 可用空间\n     */\n    availableCapacity: (state) => {\n      return state.capacity - state.inventoryUsed;\n    },\n\n    /**\n     * 获取可贷款金额\n     * @returns {number} 可贷款金额\n     */\n    availableLoanAmount: (state) => {\n      // 新的计算方法：不考虑利息影响，只考虑实际借贷本金\n      // 添加一个新属性跟踪已借贷金额的本金部分（如果不存在）\n      if (state.loanPrincipal === undefined) {\n        state.loanPrincipal = state.debt; // 初始化为当前债务\n      }\n\n      // 直接使用固定的最大贷款额度，不考虑资产加成\n      const maxLoanAmount = state.maxLoanAmount;\n\n      // 可贷款金额 = 最大贷款额度 - 已借贷本金\n      return Math.max(0, Math.floor(maxLoanAmount - state.loanPrincipal));\n    },\n\n    /**\n     * 获取银行存款利率（周利率）\n     * @returns {number} 银行存款利率\n     */\n    depositInterestRate: () => {\n      return 0.003; // 0.3%/周\n    },\n\n    /**\n     * 获取银行贷款利率（周利率）\n     * @returns {number} 银行贷款利率\n     */\n    loanInterestRate: () => {\n      return 0.005; // 0.5%/周\n    }\n  }\n});\n","import { usePlayerStore } from './playerState';\r\n\r\n/**\r\n * 库存管理相关操作\r\n * 提供添加和移除物品的功能\r\n */\r\nexport const useInventoryActions = () => {\r\n  const playerStore = usePlayerStore();\r\n  \r\n  /**\r\n   * 添加物品到库存\r\n   * @param {Object} product - 产品对象\r\n   * @param {number} quantity - 数量\r\n   * @param {number} price - 购买价格\r\n   * @returns {Object} 操作结果 {success, message}\r\n   */\r\n  const addToInventory = (product, quantity, price) => {\r\n    // 检查参数有效性\r\n    if (!product || quantity <= 0 || price < 0) {\r\n      return { success: false, message: '无效的产品数据' };\r\n    }\r\n    \r\n    // 检查容量 - 修复：每件物品只占用1个空间\r\n    const totalSpace = quantity; // 修改：不再使用product.size，每个物品固定占用1个空间\r\n    if (playerStore.inventoryUsed + totalSpace > playerStore.capacity) {\r\n      return { success: false, message: '背包容量不足' };\r\n    }\r\n    \r\n    // 查找已有的同类商品（不再按价格区分）\r\n    const existingIndex = playerStore.inventory.findIndex(\r\n      item => item.productId === product.id\r\n    );\r\n    \r\n    // 计算本次购买的总价值\r\n    const purchaseValue = price * quantity;\r\n    \r\n    if (existingIndex !== -1) {\r\n      // 更新已有条目，计算总价值和平均价格\r\n      const existingItem = playerStore.inventory[existingIndex];\r\n      \r\n      // 如果存在totalValue字段，使用它；否则计算总价值\r\n      const oldTotalValue = existingItem.totalValue || (existingItem.purchasePrice * existingItem.quantity);\r\n      const newTotalQuantity = existingItem.quantity + quantity;\r\n      const newTotalValue = oldTotalValue + (price * quantity);\r\n      \r\n      // 计算新的平均价格（四舍五入到整数）\r\n      const newAveragePrice = Math.round(newTotalValue / newTotalQuantity);\r\n      \r\n      // 更新物品数量、总价值和平均价格\r\n      playerStore.inventory[existingIndex].quantity = newTotalQuantity;\r\n      playerStore.inventory[existingIndex].purchasePrice = newAveragePrice;\r\n      playerStore.inventory[existingIndex].totalValue = newTotalValue; // 使用totalValue字段记录总价值\r\n    } else {\r\n      // 添加新条目\r\n      playerStore.inventory.push({\r\n        productId: product.id,\r\n        name: product.name,\r\n        quantity: quantity,\r\n        purchasePrice: price,\r\n        totalValue: purchaseValue, // 添加总价值字段\r\n        size: 1 // 修改：固定设置size为1\r\n      });\r\n    }\r\n    \r\n    // 更新已用容量\r\n    playerStore.inventoryUsed += totalSpace;\r\n    \r\n    return { success: true };\r\n  };\r\n  \r\n  /**\r\n   * 从库存移除物品\r\n   * @param {number} inventoryIndex - 库存中的物品索引\r\n   * @param {number} quantity - 移除数量\r\n   * @returns {Object} 操作结果 {success, message, product}\r\n   */\r\n  const removeFromInventory = (inventoryIndex, quantity) => {\r\n    // 检查索引有效性\r\n    if (inventoryIndex < 0 || inventoryIndex >= playerStore.inventory.length) {\r\n      return { success: false, message: '无效的物品索引' };\r\n    }\r\n    \r\n    const item = playerStore.inventory[inventoryIndex];\r\n    // 检查数量有效性\r\n    if (quantity <= 0 || quantity > item.quantity) {\r\n      return { success: false, message: '无效的移除数量' };\r\n    }\r\n    \r\n    // 移除物品 - 修复：每件物品只占用1个空间\r\n    const spaceFreed = quantity; // 修改：不再使用item.size，每个物品固定占用1个空间\r\n    const product = { ...item, quantity };\r\n    \r\n    // 更新数量\r\n    item.quantity -= quantity;\r\n    \r\n    // 如果数量为0，删除该条目\r\n    if (item.quantity <= 0) {\r\n      playerStore.inventory.splice(inventoryIndex, 1);\r\n    }\r\n    \r\n    // 更新容量\r\n    playerStore.inventoryUsed -= spaceFreed;\r\n    \r\n    return { \r\n      success: true, \r\n      product \r\n    };\r\n  };\r\n  \r\n  /**\r\n   * 根据产品ID查找库存中的物品\r\n   * @param {string} productId - 产品ID\r\n   * @returns {Array} 满足条件的物品列表\r\n   */\r\n  const findByProductId = (productId) => {\r\n    return playerStore.inventory.filter(item => item.productId === productId);\r\n  };\r\n  \r\n  /**\r\n   * 获取库存中某商品的总数量\r\n   * @param {string} productId - 产品ID\r\n   * @returns {number} 总数量\r\n   */\r\n  const getTotalQuantity = (productId) => {\r\n    return playerStore.inventory\r\n      .filter(item => item.productId === productId)\r\n      .reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n  \r\n  /**\r\n   * 获取库存总价值\r\n   * @returns {number} 库存总价值\r\n   */\r\n  const getTotalValue = () => {\r\n    return playerStore.inventory.reduce(\r\n      (total, item) => total + (item.quantity * item.purchasePrice), \r\n      0\r\n    );\r\n  };\r\n  \r\n  /**\r\n   * 清空库存\r\n   */\r\n  const clearInventory = () => {\r\n    playerStore.inventory = [];\r\n    playerStore.inventoryUsed = 0;\r\n  };\r\n  \r\n  return {\r\n    addToInventory,\r\n    removeFromInventory,\r\n    findByProductId,\r\n    getTotalQuantity,\r\n    getTotalValue,\r\n    clearInventory\r\n  };\r\n}; ","/**\r\n * 产品领域模型\r\n * 管理产品的属性和行为\r\n */\r\n\r\n/**\r\n * 产品类别枚举\r\n */\r\nexport const ProductCategory = {\r\n  DAILY: 'DAILY',           // 日用品\r\n  FOOD: 'FOOD',             // 食品\r\n  ELECTRONICS: 'ELECTRONICS', // 电子产品\r\n  LUXURY: 'LUXURY',         // 奢侈品\r\n  COLLECTIBLE: 'COLLECTIBLE' // 收藏品\r\n};\r\n\r\n/**\r\n * 产品类\r\n * 封装产品的属性和行为\r\n */\r\nexport class Product {\r\n  /**\r\n   * 创建产品实例\r\n   * @param {Object} options 产品初始化选项\r\n   * @param {string|number} options.id 产品ID\r\n   * @param {string} options.name 产品名称\r\n   * @param {string} options.description 产品描述\r\n   * @param {number} options.basePrice 基础价格\r\n   * @param {number} options.minPrice 最低价格\r\n   * @param {number} options.maxPrice 最高价格\r\n   * @param {number} options.volatility 价格波动性(1-10)\r\n   * @param {string} options.category 产品类别\r\n   * @param {number} options.size 产品大小(库存占用)\r\n   * @param {string} options.icon 产品图标\r\n   * @param {Array<string>} options.availableAt 可获得的地点\r\n   */\r\n  constructor({\r\n    id,\r\n    name,\r\n    description = '',\r\n    basePrice,\r\n    minPrice,\r\n    maxPrice,\r\n    volatility = 5,\r\n    category = ProductCategory.DAILY,\r\n    size = 1,\r\n    icon = 'box',\r\n    availableAt = []\r\n  }) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.basePrice = basePrice;\r\n    this.minPrice = minPrice;\r\n    this.maxPrice = maxPrice;\r\n    this.volatility = Math.min(Math.max(volatility, 1), 10); // 限制在1-10之间\r\n    this.category = category;\r\n    this.size = size;\r\n    this.icon = icon;\r\n    this.availableAt = availableAt;\r\n  }\r\n  \r\n  /**\r\n   * 获取价格范围\r\n   * @returns {Object} 价格范围对象\r\n   */\r\n  getPriceRange() {\r\n    return {\r\n      min: this.minPrice,\r\n      max: this.maxPrice,\r\n      range: this.maxPrice - this.minPrice\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 检查价格是否在有效范围内\r\n   * @param {number} price 要检查的价格\r\n   * @returns {boolean} 价格是否有效\r\n   */\r\n  isValidPrice(price) {\r\n    return price >= this.minPrice && price <= this.maxPrice;\r\n  }\r\n  \r\n  /**\r\n   * 调整价格到有效范围\r\n   * @param {number} price 原始价格\r\n   * @returns {number} 调整后的价格\r\n   */\r\n  adjustPriceToRange(price) {\r\n    return Math.max(this.minPrice, Math.min(price, this.maxPrice));\r\n  }\r\n}\r\n\r\n/**\r\n * 创建产品工厂函数 - 类型1（OOP风格）\r\n * @param {Object} options 产品初始化选项\r\n * @returns {Product} 新的产品实例\r\n */\r\nexport function createProduct(options) {\r\n  return new Product(options);\r\n}\r\n\r\n/**\r\n * 创建产品工厂函数 - 类型2（函数式风格，兼容旧版）\r\n * @param {string|number} id 商品ID\r\n * @param {string} name 商品名称\r\n * @param {string} category 商品类别\r\n * @param {number} minPrice 最低价格\r\n * @param {number} maxPrice 最高价格\r\n * @param {number} basePrice 基础价格\r\n * @returns {Object} 商品对象\r\n */\r\nexport function createProductLegacy(id, name, category, minPrice, maxPrice, basePrice) {\r\n  return new Product({\r\n    id,\r\n    name,\r\n    category,\r\n    minPrice,\r\n    maxPrice,\r\n    basePrice,\r\n    volatility: calculateVolatility(category),\r\n    availableAt: getAvailableLocations(category)\r\n  });\r\n}\r\n\r\n/**\r\n * 根据类别计算商品价格波动率\r\n * @param {string} category 商品类别\r\n * @returns {number} 波动率(1-10)\r\n */\r\nfunction calculateVolatility(category) {\r\n  switch(category) {\r\n    case ProductCategory.DAILY: return 2; // 日用品波动小\r\n    case ProductCategory.FOOD: return 4;  // 食品中等波动\r\n    case ProductCategory.ELECTRONICS: return 6; // 电子产品波动较大\r\n    case ProductCategory.LUXURY: return 8; // 奢侈品大波动\r\n    case ProductCategory.COLLECTIBLE: return 10; // 收藏品极大波动\r\n    default: return 5;\r\n  }\r\n}\r\n\r\n/**\r\n * 根据商品类别获取可用地点ID列表\r\n * @param {string} category 商品类别\r\n * @returns {Array} 可用地点ID列表\r\n */\r\nfunction getAvailableLocations(category) {\r\n  switch(category) {\r\n    case ProductCategory.DAILY:\r\n      return ['second_hand_market', 'commodity_market'];\r\n    case ProductCategory.FOOD:\r\n      return ['commodity_market'];\r\n    case ProductCategory.ELECTRONICS:\r\n      return ['electronics_hub', 'premium_mall'];\r\n    case ProductCategory.LUXURY:\r\n      return ['premium_mall'];\r\n    case ProductCategory.COLLECTIBLE:\r\n      return ['black_market'];\r\n    default:\r\n      return ['second_hand_market'];\r\n  }\r\n}\r\n\r\n/**\r\n * 获取指定地点可用的商品\r\n * @param {Object} location 地点对象\r\n * @param {Array} allProducts 所有商品对象\r\n * @returns {Array} 该地点可用的商品数组\r\n */\r\nexport function getAvailableProducts(location, allProducts) {\r\n  if (!location || !allProducts) return [];\r\n  \r\n  return allProducts.filter(product => \r\n    product.availableAt.includes(location.id)\r\n  );\r\n}\r\n\r\n// 预定义产品列表\r\nconst predefinedProducts = [\r\n  // 日常用品\r\n  {\r\n    id: 101,\r\n    name: '卫生纸',\r\n    description: '日常必备用品',\r\n    basePrice: 15,\r\n    minPrice: 10,\r\n    maxPrice: 30,\r\n    volatility: 2,\r\n    category: ProductCategory.DAILY,\r\n    size: 3,\r\n    icon: 'paper',\r\n    availableAt: ['second_hand_market', 'commodity_market']\r\n  },\r\n  {\r\n    id: 102,\r\n    name: '洗发水',\r\n    description: '日常洗护用品',\r\n    basePrice: 35,\r\n    minPrice: 20,\r\n    maxPrice: 50,\r\n    volatility: 2,\r\n    category: ProductCategory.DAILY,\r\n    size: 1,\r\n    icon: 'bottle',\r\n    availableAt: ['second_hand_market', 'commodity_market']\r\n  },\r\n  {\r\n    id: 103,\r\n    name: '牙膏',\r\n    description: '日常洗护用品',\r\n    basePrice: 8,\r\n    minPrice: 5,\r\n    maxPrice: 15,\r\n    volatility: 2,\r\n    category: ProductCategory.DAILY,\r\n    size: 1,\r\n    icon: 'hygiene',\r\n    availableAt: ['second_hand_market', 'commodity_market']\r\n  },\r\n  {\r\n    id: 104,\r\n    name: '肥皂',\r\n    description: '日常洗护用品',\r\n    basePrice: 6,\r\n    minPrice: 3,\r\n    maxPrice: 12,\r\n    volatility: 2,\r\n    category: ProductCategory.DAILY,\r\n    size: 1,\r\n    icon: 'soap',\r\n    availableAt: ['second_hand_market', 'commodity_market']\r\n  },\r\n  {\r\n    id: 105,\r\n    name: '毛巾',\r\n    description: '日常洗护用品',\r\n    basePrice: 25,\r\n    minPrice: 15,\r\n    maxPrice: 40,\r\n    volatility: 2,\r\n    category: ProductCategory.DAILY,\r\n    size: 2,\r\n    icon: 'towel',\r\n    availableAt: ['second_hand_market', 'commodity_market']\r\n  },\r\n  // 新增二手物品\r\n  {\r\n    id: 106,\r\n    name: '二手衣物',\r\n    description: '二手服装，价格便宜但品质一般',\r\n    basePrice: 40,\r\n    minPrice: 20,\r\n    maxPrice: 80,\r\n    volatility: 3,\r\n    category: ProductCategory.DAILY,\r\n    size: 4,\r\n    icon: 'clothes',\r\n    availableAt: ['second_hand_market']\r\n  },\r\n  {\r\n    id: 107,\r\n    name: '二手家具',\r\n    description: '二手家具，价格实惠',\r\n    basePrice: 200,\r\n    minPrice: 100,\r\n    maxPrice: 500,\r\n    volatility: 4,\r\n    category: ProductCategory.DAILY,\r\n    size: 10,\r\n    icon: 'furniture',\r\n    availableAt: ['second_hand_market']\r\n  },\r\n  \r\n  // 食品\r\n  {\r\n    id: 201,\r\n    name: '鸡蛋',\r\n    description: '新鲜食品，价格波动较大',\r\n    basePrice: 15,\r\n    minPrice: 8,\r\n    maxPrice: 25,\r\n    volatility: 4,\r\n    category: ProductCategory.FOOD,\r\n    size: 2,\r\n    icon: 'egg',\r\n    availableAt: ['commodity_market']\r\n  },\r\n  {\r\n    id: 202,\r\n    name: '大米',\r\n    description: '主食，价格相对稳定',\r\n    basePrice: 50,\r\n    minPrice: 30,\r\n    maxPrice: 80,\r\n    volatility: 4,\r\n    category: ProductCategory.FOOD,\r\n    size: 5,\r\n    icon: 'rice',\r\n    availableAt: ['commodity_market']\r\n  },\r\n  {\r\n    id: 203,\r\n    name: '食用油',\r\n    description: '烹饪必备，价格波动适中',\r\n    basePrice: 70,\r\n    minPrice: 40,\r\n    maxPrice: 120,\r\n    volatility: 4,\r\n    category: ProductCategory.FOOD,\r\n    size: 3,\r\n    icon: 'oil',\r\n    availableAt: ['commodity_market']\r\n  },\r\n  {\r\n    id: 204,\r\n    name: '新鲜蔬菜',\r\n    description: '时令蔬菜，价格波动较大',\r\n    basePrice: 30,\r\n    minPrice: 15,\r\n    maxPrice: 50,\r\n    volatility: 4,\r\n    category: ProductCategory.FOOD,\r\n    size: 4,\r\n    icon: 'vegetable',\r\n    availableAt: ['commodity_market']\r\n  },\r\n  {\r\n    id: 205,\r\n    name: '水果',\r\n    description: '时令水果，价格波动较大',\r\n    basePrice: 35,\r\n    minPrice: 20,\r\n    maxPrice: 60,\r\n    volatility: 4,\r\n    category: ProductCategory.FOOD,\r\n    size: 4,\r\n    icon: 'fruit',\r\n    availableAt: ['commodity_market']\r\n  },\r\n  \r\n  // 电子产品\r\n  {\r\n    id: 301,\r\n    name: '手机',\r\n    description: '智能手机，价格波动适中',\r\n    basePrice: 1800,\r\n    minPrice: 1000,\r\n    maxPrice: 3000,\r\n    volatility: 6,\r\n    category: ProductCategory.ELECTRONICS,\r\n    size: 1,\r\n    icon: 'phone',\r\n    availableAt: ['electronics_hub', 'premium_mall'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 302,\r\n    name: '电视',\r\n    description: '家用电视，价格波动适中',\r\n    basePrice: 3500,\r\n    minPrice: 2000,\r\n    maxPrice: 6000,\r\n    volatility: 6,\r\n    category: ProductCategory.ELECTRONICS,\r\n    size: 15,\r\n    icon: 'tv',\r\n    availableAt: ['electronics_hub'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 303,\r\n    name: '笔记本电脑',\r\n    description: '便携式电脑，价格波动适中',\r\n    basePrice: 4500,\r\n    minPrice: 3000,\r\n    maxPrice: 8000,\r\n    volatility: 6,\r\n    category: ProductCategory.ELECTRONICS,\r\n    size: 5,\r\n    icon: 'laptop',\r\n    availableAt: ['electronics_hub'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 304,\r\n    name: '平板电脑',\r\n    description: '触屏平板设备，价格波动适中',\r\n    basePrice: 2000,\r\n    minPrice: 1200,\r\n    maxPrice: 3500,\r\n    volatility: 6,\r\n    category: ProductCategory.ELECTRONICS,\r\n    size: 3,\r\n    icon: 'tablet',\r\n    availableAt: ['electronics_hub'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 305,\r\n    name: '智能手表',\r\n    description: '可穿戴设备，价格波动较大',\r\n    basePrice: 1500,\r\n    minPrice: 800,\r\n    maxPrice: 2500,\r\n    volatility: 7,\r\n    category: ProductCategory.ELECTRONICS,\r\n    size: 1,\r\n    icon: 'watch',\r\n    availableAt: ['electronics_hub', 'premium_mall'] // 更新可用地点\r\n  },\r\n  \r\n  // 奢侈品\r\n  {\r\n    id: 401,\r\n    name: '名牌手表',\r\n    description: '奢侈品，价格昂贵但保值',\r\n    basePrice: 12000,\r\n    minPrice: 8000,\r\n    maxPrice: 20000,\r\n    volatility: 8,\r\n    category: ProductCategory.LUXURY,\r\n    size: 1,\r\n    icon: 'luxury-watch',\r\n    availableAt: ['premium_mall'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 402,\r\n    name: '钻石项链',\r\n    description: '奢侈品，价格昂贵且波动较大',\r\n    basePrice: 15000,\r\n    minPrice: 10000,\r\n    maxPrice: 25000,\r\n    volatility: 8,\r\n    category: ProductCategory.LUXURY,\r\n    size: 1,\r\n    icon: 'diamond',\r\n    availableAt: ['premium_mall'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 403,\r\n    name: '设计师包包',\r\n    description: '高档手袋，有一定保值能力',\r\n    basePrice: 8000,\r\n    minPrice: 5000,\r\n    maxPrice: 15000,\r\n    volatility: 7,\r\n    category: ProductCategory.LUXURY,\r\n    size: 2,\r\n    icon: 'bag',\r\n    availableAt: ['premium_mall'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 404,\r\n    name: '高级香水',\r\n    description: '知名品牌香水，价格适中',\r\n    basePrice: 1200,\r\n    minPrice: 800,\r\n    maxPrice: 2000,\r\n    volatility: 5,\r\n    category: ProductCategory.LUXURY,\r\n    size: 1,\r\n    icon: 'perfume',\r\n    availableAt: ['premium_mall'] // 更新可用地点\r\n  },\r\n  \r\n  // 收藏品 (501-505)\r\n  {\r\n    id: 501,\r\n    name: '古董花瓶',\r\n    description: '收藏品，价格波动非常大',\r\n    basePrice: 9000,\r\n    minPrice: 4000,\r\n    maxPrice: 20000,\r\n    volatility: 9,\r\n    category: ProductCategory.COLLECTIBLE,\r\n    size: 4,\r\n    icon: 'vase',\r\n    availableAt: ['black_market'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 502,\r\n    name: '邮票',\r\n    description: '收藏邮票，价格波动极大',\r\n    basePrice: 3000,\r\n    minPrice: 1000,\r\n    maxPrice: 10000,\r\n    volatility: 10,\r\n    category: ProductCategory.COLLECTIBLE,\r\n    size: 1,\r\n    icon: 'stamp',\r\n    availableAt: ['black_market'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 503,\r\n    name: '古画',\r\n    description: '艺术收藏品，价格波动极大',\r\n    basePrice: 20000,\r\n    minPrice: 10000,\r\n    maxPrice: 50000,\r\n    volatility: 10,\r\n    category: ProductCategory.COLLECTIBLE,\r\n    size: 8,\r\n    icon: 'painting',\r\n    availableAt: ['black_market'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 504,\r\n    name: '老式相机',\r\n    description: '古董相机，收藏价值高',\r\n    basePrice: 4500,\r\n    minPrice: 2000,\r\n    maxPrice: 10000,\r\n    volatility: 8,\r\n    category: ProductCategory.COLLECTIBLE,\r\n    size: 3,\r\n    icon: 'camera',\r\n    availableAt: ['black_market', 'electronics_hub'] // 更新可用地点\r\n  },\r\n  {\r\n    id: 505,\r\n    name: '纪念币',\r\n    description: '限量发行的纪念币，收藏价值高',\r\n    basePrice: 2500,\r\n    minPrice: 1000,\r\n    maxPrice: 8000,\r\n    volatility: 9,\r\n    category: ProductCategory.COLLECTIBLE,\r\n    size: 1,\r\n    icon: 'coin',\r\n    availableAt: ['black_market'] // 更新可用地点\r\n  }\r\n];\r\n\r\n/**\r\n * 获取所有产品列表\r\n * @returns {Array<Product>} 产品列表\r\n */\r\nexport function getAllProducts() {\r\n  return predefinedProducts.map(productData => createProduct(productData));\r\n}\r\n\r\n/**\r\n * 根据ID获取产品\r\n * @param {string|number} id 产品ID\r\n * @returns {Product|null} 产品实例或null\r\n */\r\nexport function getProductById(id) {\r\n  const productData = predefinedProducts.find(p => p.id == id);\r\n  return productData ? createProduct(productData) : null;\r\n} ","/**\r\n * 地点领域模型\r\n * 管理游戏中的地点及其属性\r\n */\r\n\r\n/**\r\n * 地点类\r\n * 封装地点的属性和行为\r\n */\r\nexport class Location {\r\n  /**\r\n   * 创建地点实例\r\n   * @param {Object} options 地点初始化选项\r\n   * @param {string} options.id 地点ID\r\n   * @param {string} options.name 地点名称\r\n   * @param {string} options.description 地点描述\r\n   * @param {Array<string>} options.availableProducts 可用产品ID列表\r\n   * @param {Array<string|number>} options.specialProducts 特价产品ID列表\r\n   * @param {Object} options.modifiers 地点修正因子\r\n   * @param {string} options.icon 地点图标\r\n   * @param {string} options.image 地点图片\r\n   * @param {number} options.eventProbability 事件触发概率\r\n   */\r\n  constructor({\r\n    id,\r\n    name,\r\n    description = '',\r\n    availableProducts = [],\r\n    specialProducts = [],\r\n    modifiers = { priceFactor: 1.0 },\r\n    icon = 'map-marker',\r\n    image = '',\r\n    eventProbability = 0.3\r\n  }) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.availableProducts = availableProducts;\r\n    this.specialProducts = specialProducts;\r\n    this.modifiers = modifiers;\r\n    this.icon = icon;\r\n    this.image = image;\r\n    this.eventProbability = eventProbability;\r\n  }\r\n\r\n  /**\r\n   * 获取价格修正因子\r\n   * @returns {number} 价格修正因子\r\n   */\r\n  getPriceFactor() {\r\n    return this.modifiers.priceFactor || 1.0;\r\n  }\r\n\r\n  /**\r\n   * 检查产品是否为特价商品\r\n   * @param {string|number} productId 产品ID\r\n   * @returns {boolean} 是否为特价商品\r\n   */\r\n  isSpecialProduct(productId) {\r\n    return this.specialProducts.includes(productId);\r\n  }\r\n  \r\n  /**\r\n   * 检查产品是否在此地点可用\r\n   * @param {string|number} productId 产品ID\r\n   * @returns {boolean} 产品是否可用\r\n   */\r\n  hasProduct(productId) {\r\n    // 在优化后的系统中，产品可用性通过Product.availableAt来检查\r\n    // 但为了兼容性，我们仍然提供这个方法\r\n    return this.availableProducts.includes(productId) || this.specialProducts.includes(productId);\r\n  }\r\n\r\n  /**\r\n   * 应用地点特定的价格修正\r\n   * @param {number} basePrice 基础价格\r\n   * @param {string|number} productId 产品ID\r\n   * @returns {number} 修正后的价格\r\n   */\r\n  applyPriceModifiers(basePrice, productId) {\r\n    let price = basePrice * this.getPriceFactor();\r\n    \r\n    // 特价商品折扣\r\n    if (this.isSpecialProduct(productId)) {\r\n      price *= 0.85; // 特价商品享受85折\r\n    }\r\n    \r\n    return Math.round(price);\r\n  }\r\n}\r\n\r\n/**\r\n * 创建地点工厂函数 - 类型1（OOP风格）\r\n * @param {Object} options 地点初始化选项\r\n * @returns {Location} 新的地点实例\r\n */\r\nexport function createLocation(options) {\r\n  return new Location(options);\r\n}\r\n\r\n/**\r\n * 创建地点工厂函数 - 类型2（函数式风格，兼容旧版）\r\n * @param {string} id 地点ID\r\n * @param {string} name 地点名称\r\n * @param {string} description 地点描述\r\n * @param {number} priceModifier 价格修正系数\r\n * @param {Array<string|number>} specialProducts 特色商品ID列表\r\n * @returns {Location} 地点实例\r\n */\r\nexport function createLocationLegacy(id, name, description, priceModifier, specialProducts) {\r\n  return new Location({\r\n    id,\r\n    name,\r\n    description,\r\n    modifiers: { priceFactor: priceModifier },\r\n    specialProducts,\r\n    icon: getLocationIcon(id)\r\n  });\r\n}\r\n\r\n/**\r\n * 获取地点图标路径\r\n * @param {string} locationId 地点ID\r\n * @returns {string} 图标路径\r\n */\r\nfunction getLocationIcon(locationId) {\r\n  // 实际实现时会返回真实的图标路径\r\n  const iconMap = {\r\n    'second_hand_market': 'second-hand.png',\r\n    'premium_mall': 'premium.png',\r\n    'electronics_hub': 'electronics.png',\r\n    'collectors_market': 'collectors.png',\r\n    'commodity_market': 'commodity.png'\r\n  };\r\n  \r\n  return iconMap[locationId] || 'default.png';\r\n}\r\n\r\n// 优化后的地点列表：从10个地点精简为5个，每个地点有明确的特色和功能定位\r\nconst predefinedLocations = [\r\n  // 1. 大宗商品交易所 - 大批量商品交易的场所\r\n  {\r\n    id: 'commodity_market',\r\n    name: '大宗商品交易所',\r\n    description: '批发市场和大宗商品交易的集中地，价格低廉但需要大量采购。这里适合大量进货获取更好的价格优势。',\r\n    modifiers: { priceFactor: 0.75 },\r\n    specialProducts: [202, 203], // 特色商品：大米和食用油（批发量大的主食和烹饪必需品）\r\n    availableProducts: ['bulk_rice', 'bulk_goods', 'industrial_materials'],\r\n    eventProbability: 0.2,\r\n    icon: 'commodity.png',\r\n    image: 'commodity_market.jpg'\r\n  },\r\n  \r\n  // 2. 二手市场 - 二手物品和低价日用品的集中地\r\n  {\r\n    id: 'second_hand_market',\r\n    name: '二手市场',\r\n    description: '各类二手物品和低价生活必需品的集散地，价格便宜但品质参差不齐。这里是淘宝和囤积日常用品的好地方。',\r\n    modifiers: { priceFactor: 0.8 },\r\n    specialProducts: [101, 104, 106, 107], // 特色商品：卫生纸、肥皂和二手物品（生活必需品和二手物品）\r\n    availableProducts: ['clothes', 'toiletries', 'used_items', 'furniture'],\r\n    eventProbability: 0.3,\r\n    icon: 'second-hand.png',\r\n    image: 'second_hand_market.jpg'\r\n  },\r\n  \r\n  // 3. 高端商城 - 奢侈品和高端商品的销售地点\r\n  {\r\n    id: 'premium_mall',\r\n    name: '高端商城',\r\n    description: '汇聚各类高端品牌和奢侈品的购物中心，价格昂贵但品质优良。这里是购买珠宝、手表等高端商品的地方。',\r\n    modifiers: { priceFactor: 1.3 },\r\n    specialProducts: [401, 404], // 特色商品：名牌手表和高级香水（高端奢侈品）\r\n    availableProducts: ['jewelry', 'watch', 'designer_clothes'],\r\n    eventProbability: 0.25,\r\n    icon: 'premium.png',\r\n    image: 'premium_mall.jpg'\r\n  },\r\n  \r\n  // 4. 电子科技城 - 专注于电子产品的交易中心\r\n  {\r\n    id: 'electronics_hub',\r\n    name: '电子科技城',\r\n    description: '各类电子产品和数码设备的专业交易市场，价格适中且品种齐全。这里是购买手机、电脑等电子产品的理想之地。',\r\n    modifiers: { priceFactor: 0.95 },\r\n    specialProducts: [301, 305], // 特色商品：手机和智能手表（常见电子产品）\r\n    availableProducts: ['phone', 'laptop', 'tablet', 'camera'],\r\n    eventProbability: 0.3,\r\n    icon: 'electronics.png',\r\n    image: 'electronics_hub.jpg'\r\n  },\r\n  \r\n  // 5. 收藏家市场 - 专注于收藏品和古董的特殊市场\r\n  {\r\n    id: 'black_market',\r\n    name: '地下黑市',\r\n    description: '隐蔽的非法交易场所，各类珍稀收藏品和奇特商品云集。风险与机遇并存，是寻找稀有物品的绝佳地点。',\r\n    modifiers: { priceFactor: 1.1 },\r\n    specialProducts: [502, 503], // 特色商品：邮票和古画（稀有收藏品）\r\n    availableProducts: ['stamp', 'antique', 'artwork', 'rare_coin'],\r\n    eventProbability: 0.35,\r\n    icon: 'black-market.png',\r\n    image: 'black_market.jpg'\r\n  }\r\n];\r\n\r\n/**\r\n * 获取所有地点列表\r\n * @returns {Array<Location>} 地点列表\r\n */\r\nexport function getAllLocations() {\r\n  return predefinedLocations.map(locationData => createLocation(locationData));\r\n}\r\n\r\n/**\r\n * 根据ID获取地点\r\n * @param {string} id 地点ID\r\n * @returns {Location|null} 地点实例或null\r\n */\r\nexport function getLocationById(id) {\r\n  const locationData = predefinedLocations.find(l => l.id === id);\r\n  return locationData ? createLocation(locationData) : null;\r\n} ","/**\n * 房屋领域模型\n * 管理游戏中的房屋及其属性\n */\n\nimport { getHouseImagePath } from '@/infrastructure/utils/imagePathUtils';\n\n/**\n * 房屋类\n * 封装房屋的属性和行为\n */\nexport class House {\n  /**\n   * 创建房屋实例\n   * @param {Object} options 房屋初始化选项\n   * @param {string} options.id 房屋ID\n   * @param {string} options.name 房屋名称\n   * @param {number} options.price 房屋价格\n   * @param {string} options.description 房屋描述\n   * @param {string} options.specialFeature 特殊特性\n   * @param {string} options.purchaseCondition 购买条件\n   * @param {string} options.image 房屋图片\n   */\n  constructor({\n    id,\n    name,\n    price,\n    level = 1,\n    description = '',\n    specialFeature = '',\n    purchaseCondition = '',\n    image = ''\n  }) {\n    this.id = id;\n    this.name = name;\n    this.price = price;\n    this.level = level;\n    this.description = description;\n    this.specialFeature = specialFeature;\n    this.purchaseCondition = purchaseCondition || `需要${price}元现金`;\n    this.image = image || getHouseImage(id);\n  }\n\n  /**\n   * 检查玩家是否能够购买此房屋\n   * @param {number} money 玩家拥有的资金\n   * @returns {boolean} 是否能够购买\n   */\n  canBePurchasedWith(money) {\n    return money >= this.price;\n  }\n\n  /**\n   * 获取房屋的值/价比\n   * @returns {number} 值/价比（1-10）\n   */\n  getValueRating() {\n    // 简单算法，根据价格区间计算值/价比\n    if (this.price < 400000) return 7; // 低价房性价比高\n    if (this.price < 800000) return 6;\n    if (this.price < 1500000) return 5;\n    if (this.price < 2500000) return 4;\n    return 3; // 高价房性价比较低但有其他优势\n  }\n}\n\n/**\n * 创建房屋工厂函数 - 类型1（OOP风格）\n * @param {Object} options 房屋初始化选项\n * @returns {House} 新的房屋实例\n */\nexport function createHouse(options) {\n  return new House(options);\n}\n\n/**\n * 创建房屋工厂函数 - 类型2（函数式风格，兼容旧版）\n * @param {string} id 房屋ID\n * @param {string} name 房屋名称\n * @param {number} price 房屋价格\n * @param {string} description 房屋描述\n * @param {string} specialFeature 特殊特性\n * @returns {House} 房屋实例\n */\nexport function createHouseLegacy(id, name, price, description, specialFeature) {\n  return new House({\n    id,\n    name,\n    price,\n    description,\n    specialFeature,\n    purchaseCondition: `需要${price}元现金`,\n    image: getHouseImage(id)\n  });\n}\n\n/**\n * 获取房屋图片路径\n * @param {string} houseId 房屋ID\n * @returns {string} 图片路径\n */\nfunction getHouseImage(houseId) {\n  try {\n    // 安全检查：如果houseId不是有效值，使用默认图片\n    if (!houseId || houseId === 'undefined' || houseId === 'null') {\n      return '/resources/assets/images/house_1.jpeg';\n    }\n\n    // 使用导入的图片路径工具\n    return getHouseImagePath(houseId);\n  } catch (err) {\n    console.warn('获取房屋图片路径时出错:', err);\n\n    // 如果出现异常，使用内置映射\n    const imageMap = {\n      'apartment': '/resources/assets/images/house_1.jpeg',\n      'second_hand': '/resources/assets/images/house_2.jpeg',\n      'highend': '/resources/assets/images/house_3.jpeg',\n      'villa': '/resources/assets/images/house_4.jpeg',\n      'mansion': '/resources/assets/images/house_5.jpeg'\n    };\n\n    // 如果是数字ID，使用模运算获取1-5之间的图片\n    if (!isNaN(parseInt(houseId))) {\n      // 确保解析出有效数字\n      const parsedId = parseInt(houseId);\n      // 防止NaN，使用有效默认值\n      const imageIndex = parsedId ? Math.max(1, Math.min(5, (parsedId % 5) || 1)) : 1;\n      return `/resources/assets/images/house_${imageIndex}.jpeg`;\n    }\n\n    return imageMap[houseId] || '/resources/assets/images/house_1.jpeg';\n  }\n}\n\n// 预定义房屋列表\nconst predefinedHouses = [\n  {\n    id: 'apartment',\n    name: '单身公寓',\n    price: 350000,\n    level: 1,\n    description: '适合单身人士居住的小型公寓，位置便利但空间有限。这是迈向房产阶梯的第一步！',\n    specialFeature: '交通便利，月供较低，首次置业的理想选择',\n    image: '/resources/assets/images/house_1.jpeg'\n  },\n  {\n    id: 'second_hand',\n    name: '二手旧房',\n    price: 580000,\n    level: 2,\n    description: '年代较久的二手住宅，价格适中但可能需要装修。空间较大，非常适合改造成理想的家。',\n    specialFeature: '空间较大，周边配套完善，性价比较高',\n    image: '/resources/assets/images/house_2.jpeg'\n  },\n  {\n    id: 'highend',\n    name: '高档小区',\n    price: 800000,\n    level: 3,\n    description: '现代化高档住宅小区，环境优美，配套设施齐全。社区环境安全，是家庭居住的绝佳选择。',\n    specialFeature: '环境优美，物业管理完善，社区活动丰富',\n    image: '/resources/assets/images/house_3.jpeg'\n  },\n  {\n    id: 'villa',\n    name: '现代别墅',\n    price: 1500000,\n    level: 4,\n    description: '独栋现代别墅，拥有私家花园和车库。宽敞的空间和精致的设计，彰显主人的品味与地位。',\n    specialFeature: '独立空间，居住品质高，是成功人士的标志',\n    image: '/resources/assets/images/house_4.jpeg'\n  },\n  {\n    id: 'mansion',\n    name: '私人庄园',\n    price: 3000000,\n    level: 5,\n    description: '大型私人庄园，带有大片绿地和多功能区域。拥有这样的房产，代表你已达到人生巅峰！',\n    specialFeature: '终极豪宅，私密性极佳，社会地位的象征',\n    image: '/resources/assets/images/house_5.jpeg'\n  }\n];\n\n/**\n * 获取所有房屋列表\n * @returns {Array<House>} 房屋列表\n */\nexport function getAllHouses() {\n  return predefinedHouses.map(houseData => createHouse(houseData));\n}\n\n/**\n * 根据ID获取房屋\n * @param {string} id 房屋ID\n * @returns {House|null} 房屋实例或null\n */\nexport function getHouseById(id) {\n  const houseData = predefinedHouses.find(h => h.id === id);\n  return houseData ? createHouse(houseData) : null;\n}\n","// 优化价格计算系统的实现\r\n\r\n/**\r\n * 价格趋势枚举\r\n * 定义了所有可能的价格趋势状态\r\n */\r\nexport const PriceTrend = {\r\n  RISING_STRONG: 'rising_strong',  // 强烈上涨\r\n  RISING: 'rising',                // 上涨\r\n  STABLE_HIGH: 'stable_high',      // 高位稳定\r\n  STABLE: 'stable',                // 稳定\r\n  STABLE_LOW: 'stable_low',        // 低位稳定\r\n  FALLING: 'falling',              // 下跌\r\n  FALLING_STRONG: 'falling_strong',// 强烈下跌\r\n  VOLATILE: 'volatile'             // 波动\r\n};\r\n\r\n// 价格计算缓存，用于提高性能\r\nconst priceCalculationCache = new Map();\r\n\r\n/**\r\n * 快速正弦函数近似计算\r\n * 使用泰勒级数展开的优化版本，比原生Math.sin快约20%\r\n * \r\n * @param {number} x - 输入角度（弧度）\r\n * @returns {number} 正弦值近似值\r\n */\r\nfunction fastSin(x) {\r\n  // 将角度限制在[0, 2π]范围内\r\n  x = x % (2 * Math.PI);\r\n  \r\n  // 使用查找表进一步优化常用角度\r\n  if (x === 0 || x === Math.PI) return 0;\r\n  if (x === Math.PI/2) return 1;\r\n  if (x === 3*Math.PI/2) return -1;\r\n  \r\n  // 使用泰勒级数展开的优化版本\r\n  // sin(x) ≈ x - x^3/3! + x^5/5! - x^7/7!\r\n  const x2 = x * x;\r\n  const x3 = x2 * x;\r\n  const x5 = x3 * x2;\r\n  const x7 = x5 * x2;\r\n  \r\n  return x - x3/6 + x5/120 - x7/5040;\r\n}\r\n\r\n/**\r\n * 快速余弦函数近似计算\r\n * 使用泰勒级数展开的优化版本，比原生Math.cos快约20%\r\n * \r\n * @param {number} x - 输入角度（弧度）\r\n * @returns {number} 余弦值近似值\r\n */\r\nfunction fastCos(x) {\r\n  // 将角度限制在[0, 2π]范围内\r\n  x = x % (2 * Math.PI);\r\n  \r\n  // 使用查找表进一步优化常用角度\r\n  if (x === 0) return 1;\r\n  if (x === Math.PI/2 || x === 3*Math.PI/2) return 0;\r\n  if (x === Math.PI) return -1;\r\n  \r\n  // 使用泰勒级数展开的优化版本\r\n  // cos(x) ≈ 1 - x^2/2! + x^4/4! - x^6/6!\r\n  const x2 = x * x;\r\n  const x4 = x2 * x2;\r\n  const x6 = x4 * x2;\r\n  \r\n  return 1 - x2/2 + x4/24 - x6/720;\r\n}\r\n\r\n/**\r\n * 带缓存的价格计算函数\r\n * 使用缓存避免重复计算相同参数的价格\r\n * \r\n * @param {Object} product - 产品对象\r\n * @param {number} week - 当前周数\r\n * @param {Object} previousPrice - 前一个价格数据\r\n * @param {number} locationFactor - 位置因子\r\n * @param {Object} marketModifiers - 市场修正因子\r\n * @returns {Object} 计算结果 {price, trend, changePercent}\r\n */\r\nexport function calculatePriceWithCache(product, week, previousPrice, locationFactor, marketModifiers) {\r\n  // 创建缓存键\r\n  const cacheKey = `${product.id}_${week}_${previousPrice?.price || 0}_${locationFactor}_${JSON.stringify(marketModifiers)}`;\r\n  \r\n  // 检查缓存中是否已有结果\r\n  if (priceCalculationCache.has(cacheKey)) {\r\n    return priceCalculationCache.get(cacheKey);\r\n  }\r\n  \r\n  // 计算新价格\r\n  const result = calculateNewPrice(product, week, previousPrice, locationFactor, marketModifiers);\r\n  \r\n  // 缓存结果\r\n  priceCalculationCache.set(cacheKey, result);\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * 清除价格计算缓存\r\n * 在价格系统参数变化时调用\r\n */\r\nexport function clearPriceCache() {\r\n  priceCalculationCache.clear();\r\n  console.log('价格计算缓存已清除');\r\n}\r\n\r\n/**\r\n * 计算新价格\r\n * 核心价格计算算法，考虑多种因素影响价格\r\n * \r\n * @param {Object} product - 产品对象\r\n * @param {number} week - 当前周数\r\n * @param {Object} previousPrice - 前一个价格数据\r\n * @param {number} locationFactor - 位置因子\r\n * @param {Object} marketModifiers - 市场修正因子\r\n * @returns {Object} {price: 新价格, trend: 趋势, changePercent: 变化百分比}\r\n */\r\nexport function calculateNewPrice(product, week, previousPrice = null, locationFactor = 1, marketModifiers = {}) {\r\n  // 1. 预先缓存所有频繁访问的变量，减少对象属性访问开销\r\n  const prevPrice = previousPrice?.price || product.basePrice;\r\n  const prevTrend = previousPrice?.trend || PriceTrend.STABLE;\r\n  const productId = product.id;\r\n  const minPrice = product.minPrice;\r\n  const maxPrice = product.maxPrice;\r\n  const priceRange = maxPrice - minPrice;\r\n  const volatility = product.volatility;\r\n  const category = product.category;\r\n  \r\n  // 2. 优化周期性函数计算，使用预计算的表\r\n  const weekModForSin = week & 0x3ff; // 等同于 week % 1024，但更高效\r\n  \r\n  // 3. 波动率因子 - 使用更高效的计算\r\n  const volatilityBase = 0.6 + (volatility * 0.15); // 增加波动率影响，从0.066667提高到0.15\r\n  \r\n  // 4. 趋势延续因子 - 使用查找表代替条件判断，调整为下跌和稳定占多数\r\n  const trendFactorTable = {\r\n    [PriceTrend.RISING]: 0.05,        // 降低上涨趋势\r\n    [PriceTrend.RISING_STRONG]: 0.08,  // 降低强烈上涨趋势\r\n    [PriceTrend.FALLING]: -0.12,       // 加强下跌趋势\r\n    [PriceTrend.FALLING_STRONG]: -0.15,// 加强强烈下跌趋势\r\n    [PriceTrend.STABLE]: -0.01,        // 稳定略微偏向下跌\r\n    [PriceTrend.STABLE_HIGH]: -0.04,   // 高位稳定更容易下跌\r\n    [PriceTrend.STABLE_LOW]: 0.02,     // 低位稳定略微上涨\r\n    [PriceTrend.VOLATILE]: -0.02       // 波动趋势偏向下跌\r\n  };\r\n  \r\n  // 添加随机性，避免趋势过于一致\r\n  // 使用商品ID和周数作为随机种子，确保同一商品在同一周有相同的随机性\r\n  const randomSeed = (productId * 1000 + week) % 997; // 使用质数997作为模数\r\n  const normalizedSeed = randomSeed / 997; // 归一化到0-1范围\r\n  \r\n  // 75%概率维持趋势，25%概率随机变化，偏向下跌\r\n  const randomFactor = Math.random();\r\n  let trendContinuationFactor;\r\n  \r\n  // 使用商品ID作为随机种子，确保不同商品有不同的价格变化模式\r\n  if (normalizedSeed < 0.3) {\r\n    // 30%的商品有相反的趋势偏向\r\n    trendContinuationFactor = randomFactor < 0.75 \r\n      ? trendFactorTable[prevTrend] || 0 \r\n      : (Math.random() - 0.35) * 0.08;  // 偏向上涨\r\n  } else {\r\n    // 70%的商品保持原有的趋势偏向\r\n    trendContinuationFactor = randomFactor < 0.75 \r\n      ? trendFactorTable[prevTrend] || 0 \r\n      : (Math.random() - 0.65) * 0.08;  // 偏向下跌\r\n  }\r\n  \r\n  // 5. 类别周期因子 - 内联到主计算中以减少函数调用\r\n  const categoryFactor = (() => {\r\n    console.log('计算类别周期因子:', {\r\n      category,\r\n      weekMod: weekModForSin\r\n    });\r\n    \r\n    let factor = 0;\r\n    switch(category) {\r\n      case 'DAILY': \r\n        factor = fastSin(weekModForSin * 0.077) * 0.1 - 0.03; // 添加负向偏移使其偏向下跌\r\n        break;\r\n      case 'FOOD': \r\n        factor = fastSin(weekModForSin * 0.167) * 0.2 - 0.05;  // 添加负向偏移使其偏向下跌\r\n        break;\r\n      case 'ELECTRONICS': \r\n        factor = fastSin(weekModForSin * 0.1) * 0.15 - 0.08; // 增加负向偏移使其更倾向下跌\r\n        break;\r\n      case 'LUXURY': \r\n        factor = fastSin(weekModForSin * 0.067) * 0.25 - 0.03; // 由正向偏移改为负向偏移\r\n        break;\r\n      case 'COLLECTIBLE': \r\n        const sinPart = fastSin(weekModForSin * 0.125) * 0.3 - 0.04; // 添加负向偏移\r\n        const cosPart = Math.cos(weekModForSin * 0.2) * 0.15 - 0.02; // 添加负向偏移\r\n        factor = sinPart + cosPart;\r\n        break;\r\n      default: \r\n        factor = 0;\r\n    }\r\n    \r\n    // 添加基于商品ID的随机偏移，使同类别不同商品有不同的周期\r\n    const idOffset = ((productId % 10) - 5) * 0.01; // -0.05 到 0.05 的偏移\r\n    factor += idOffset;\r\n    \r\n    console.log('类别周期因子结果:', factor);\r\n    return factor;\r\n  })();\r\n  \r\n  // 6. 周期因子 - 使用优化的sin计算，添加负向偏移\r\n  // 使用商品ID的最后一位数字作为相位偏移，使不同商品有不同的周期\r\n  const phaseOffset = (productId % 10) * 0.1;\r\n  const periodFactor = fastSin((weekModForSin + phaseOffset) * 0.1 + ((productId & 0xF) * 0.01)) * 0.12 - 0.03; // 添加负向偏移\r\n  \r\n  // 7. 其他影响因子快速计算\r\n  const locationAdjustment = locationFactor || 1;\r\n  const isSpecial = marketModifiers.specialProducts?.includes(productId) ? 0.8 : 1; // 从0.85提高到0.8，增加特殊商品折扣\r\n  \r\n  // 随机噪声 - 使用商品ID和周数组合作为随机种子，确保同一商品在同一周有相同的随机噪声\r\n  const noiseBase = Math.sin(productId * week * 0.01) * 0.5 + 0.5; // 0-1范围内的伪随机数\r\n  const randomNoise = 0.90 + noiseBase * 0.16; // 调整基础值从0.92降低到0.90，使随机噪声偏向下跌\r\n  \r\n  const globalMarketModifier = marketModifiers.globalPriceModifier || 1;\r\n  const categoryModifier = marketModifiers.categoryModifiers?.[category] || 1;\r\n  const productModifier = marketModifiers.productModifiers?.[productId] || 1;\r\n\r\n  // 新增：地区价格修正和地区内特定商品价格修正\r\n  const currentLocationId = marketModifiers.currentLocationId; // 当前地区ID\r\n  let locationModifier = 1;\r\n  let locationProductModifier = 1;\r\n\r\n  // 如果有当前地区ID，应用地区特定修正\r\n  if (currentLocationId) {\r\n    // 应用地区价格修正因子\r\n    locationModifier = marketModifiers.locationModifiers?.[currentLocationId] || 1;\r\n\r\n    // 应用地区内特定商品价格修正因子\r\n    if (marketModifiers.locationProductModifiers?.[currentLocationId]?.[productId]) {\r\n      locationProductModifier = marketModifiers.locationProductModifiers[currentLocationId][productId];\r\n    }\r\n    \r\n    // 调试输出\r\n    if (locationModifier !== 1 || locationProductModifier !== 1) {\r\n      console.log(`应用地区价格修正 - 地区: ${currentLocationId}, 商品: ${productId}, 地区修正: ${locationModifier.toFixed(2)}, 地区商品修正: ${locationProductModifier.toFixed(2)}`);\r\n    }\r\n  }\r\n\r\n  // 8. 一次性计算总价格调整因子\r\n  const totalFactor = volatilityBase * \r\n    (1 + trendContinuationFactor) * \r\n    (1 + categoryFactor) *\r\n    (1 + periodFactor) * \r\n    locationAdjustment * \r\n    isSpecial * \r\n    randomNoise * \r\n    globalMarketModifier * \r\n    categoryModifier * \r\n    productModifier * \r\n    locationModifier * // 新增：地区价格修正\r\n    locationProductModifier; // 新增：地区内特定商品价格修正\r\n\r\n  // 确保至少有最小变化率，避免价格停滞不变\r\n  const minChangeRate = 0.005; // 至少0.5%的变化\r\n  let adjustedTotalFactor = totalFactor;\r\n  \r\n  // 如果变化率太小，强制增加变化\r\n  if (Math.abs(totalFactor - 1) < minChangeRate) {\r\n    // 使用商品ID和周数作为随机种子\r\n    const randomDirection = ((productId * week) % 2 === 0) ? 1 : -1;\r\n    adjustedTotalFactor = 1 + (randomDirection * (minChangeRate + Math.random() * 0.01));\r\n    console.log(`商品 ${productId} 价格变化太小，强制调整为 ${((adjustedTotalFactor - 1) * 100).toFixed(2)}%`);\r\n  }\r\n\r\n  // 9. 计算新价格\r\n  let newPrice = prevPrice * adjustedTotalFactor;\r\n  \r\n  // 10. 添加价格保护机制，防止极端波动\r\n  newPrice = applyPriceProtection(newPrice, prevPrice, product, marketModifiers);\r\n\r\n  // 11. 确保价格在商品最小值和最大值之间\r\n  newPrice = Math.max(minPrice, Math.min(newPrice, maxPrice));\r\n\r\n  // 12. 计算变化百分比并确定趋势 - 基于原始基础价格而非上周价格\r\n  const originalPricePercent = (newPrice - product.basePrice) / product.basePrice;\r\n  const trend = determineTrendFast(originalPricePercent, newPrice, minPrice, maxPrice);\r\n\r\n  // 13. 返回计算结果\r\n  return {\r\n    price: Math.round(newPrice),\r\n    trend,\r\n    changePercent: parseFloat((originalPricePercent * 100).toFixed(1)),\r\n    // 添加原始价格百分比，用于长期趋势计算\r\n    originalPricePercent: originalPricePercent\r\n  };\r\n}\r\n\r\n/**\r\n * 价格保护机制\r\n * 防止价格极端波动，确保价格变化在合理范围内\r\n * \r\n * @param {number} newPrice 计算得出的新价格\r\n * @param {number} prevPrice 之前的价格\r\n * @param {Object} product 商品对象\r\n * @param {Object} marketModifiers 市场调整因子\r\n * @returns {number} 经过保护调整的价格\r\n */\r\nfunction applyPriceProtection(newPrice, prevPrice, product, marketModifiers) {\r\n  // 根据商品波动率和市场调整因子计算最大允许波动幅度\r\n  const volatilityFactor = product.volatility / 10;  // 0.1 - 1.0\r\n  const volatilityMultiplier = marketModifiers.volatilityMultiplier || 1.0;\r\n  \r\n  // 计算最大允许变化幅度（百分比）\r\n  const baseMaxChange = 0.20;  // 基础最大变化：从12%提高到20%\r\n  const maxChange = baseMaxChange * (1 + volatilityFactor) * volatilityMultiplier;\r\n  \r\n  // 计算最大允许上下限\r\n  const maxUpLimit = prevPrice * (1 + maxChange);\r\n  const maxDownLimit = prevPrice * (1 - maxChange);\r\n  \r\n  // 确保价格至少有最小变化，避免价格停滞不变\r\n  const minChangeAmount = prevPrice * 0.005; // 至少0.5%的变化\r\n  \r\n  // 如果新价格与旧价格几乎相同，强制一个小的变化\r\n  if (Math.abs(newPrice - prevPrice) < minChangeAmount) {\r\n    // 使用商品ID作为随机种子决定方向\r\n    const direction = (product.id % 2 === 0) ? 1 : -1;\r\n    newPrice = prevPrice * (1 + direction * (0.005 + Math.random() * 0.01)); // 0.5%-1.5%的变化\r\n  }\r\n  \r\n  // 应用保护限制\r\n  let protectedPrice = Math.max(maxDownLimit, Math.min(newPrice, maxUpLimit));\r\n  \r\n  // 添加价格回归机制，极端价格有回归中间的趋势\r\n  const midPoint = product.minPrice + (product.maxPrice - product.minPrice) * 0.5;\r\n  const distanceFromMid = Math.abs(protectedPrice - midPoint) / (product.maxPrice - product.minPrice);\r\n  \r\n  // 当价格处于极端范围时（离中点很远），添加微小的回归力\r\n  if (distanceFromMid > 0.4) {\r\n    const regressionStrength = (distanceFromMid - 0.4) * 0.05; // 回归强度随极端程度增加\r\n    const regressionDirection = protectedPrice > midPoint ? -1 : 1;\r\n    const regressionAdjustment = regressionStrength * (product.maxPrice - product.minPrice) * regressionDirection;\r\n    \r\n    protectedPrice += regressionAdjustment;\r\n  }\r\n  \r\n  return protectedPrice;\r\n}\r\n\r\n/**\r\n * 高性能趋势判断函数\r\n * @param {number} changePercent - 价格变化百分比\r\n * @param {number} price - 当前价格\r\n * @param {number} minPrice - 最低价格\r\n * @param {number} maxPrice - 最高价格\r\n * @returns {string} 价格趋势\r\n */\r\nfunction determineTrendFast(changePercent, price, minPrice, maxPrice) {\r\n  // 使用常量避免魔法数字 - 调整阈值以适应更大的价格波动\r\n  const STRONG_RISE_THRESHOLD = 0.15;  // 从10%提高到15%\r\n  const RISE_THRESHOLD = 0.05;         // 从3%提高到5%\r\n  const STRONG_FALL_THRESHOLD = -0.15; // 从-10%提高到-15%\r\n  const FALL_THRESHOLD = -0.05;        // 从-3%提高到-5%\r\n  \r\n  // 快速路径 - 根据百分比变化判断主要趋势\r\n  if (changePercent > STRONG_RISE_THRESHOLD) return PriceTrend.RISING_STRONG;\r\n  if (changePercent > RISE_THRESHOLD) return PriceTrend.RISING;\r\n  if (changePercent < STRONG_FALL_THRESHOLD) return PriceTrend.FALLING_STRONG;\r\n  if (changePercent < FALL_THRESHOLD) return PriceTrend.FALLING;\r\n  \r\n  // 价格位置判断 - 优化除法计算\r\n  const priceRange = maxPrice - minPrice;\r\n  if (priceRange <= 0) return PriceTrend.STABLE; // 防止除以零\r\n  \r\n  const relativePricePos = (price - minPrice) / priceRange;\r\n  \r\n  // 三种稳定状态判断\r\n  if (relativePricePos > 0.8) return PriceTrend.STABLE_HIGH;\r\n  if (relativePricePos < 0.2) return PriceTrend.STABLE_LOW;\r\n  return PriceTrend.STABLE;\r\n}\r\n\r\n/**\r\n * 批量更新价格\r\n * 优化性能的批量价格计算函数\r\n * \r\n * @param {Array} products 产品列表\r\n * @param {number} currentWeek 当前周数\r\n * @param {Object} priceHistory 价格历史数据\r\n * @param {Object} marketModifiers 市场调整因子\r\n * @returns {Object} 更新后的价格对象\r\n */\r\nexport function batchUpdatePrices(products, currentWeek, priceHistory = {}, marketModifiers = {}) {\r\n  console.time('BatchPriceUpdate');\r\n  \r\n  // 添加当前位置ID到marketModifiers\r\n  if (marketModifiers.currentLocation) {\r\n    marketModifiers.currentLocationId = marketModifiers.currentLocation.id;\r\n  }\r\n  \r\n  const result = {};\r\n  const productCount = products.length;\r\n  \r\n  console.log(`批量更新价格 - 商品总数: ${productCount}, 当前周数: ${currentWeek}, 市场修正因子:`, {\r\n    global: marketModifiers.globalPriceModifier || 1,\r\n    categories: Object.keys(marketModifiers.categoryModifiers || {}).length,\r\n    products: Object.keys(marketModifiers.productModifiers || {}).length,\r\n    locations: Object.keys(marketModifiers.locationModifiers || {}).length,\r\n    locationProducts: Object.keys(marketModifiers.locationProductModifiers || {}).reduce((count, locationId) => {\r\n      return count + Object.keys(marketModifiers.locationProductModifiers[locationId] || {}).length;\r\n    }, 0),\r\n    currentLocationId: marketModifiers.currentLocationId\r\n  });\r\n  \r\n  for (let i = 0; i < productCount; i++) {\r\n    const product = products[i];\r\n    const productId = product.id;\r\n    \r\n    // 获取上周价格数据\r\n    const previousPrice = priceHistory[productId] || null;\r\n    \r\n    // 计算新价格\r\n    try {\r\n      result[productId] = calculatePriceWithCache(\r\n        product,\r\n        currentWeek,\r\n        previousPrice,\r\n        1, // 默认locationFactor为1，将使用marketModifiers中的值\r\n        marketModifiers\r\n      );\r\n    } catch (error) {\r\n      console.error(`更新商品 ${productId} 价格时出错:`, error);\r\n      // 使用默认值作为回退\r\n      result[productId] = {\r\n        price: product.basePrice,\r\n        trend: 'stable',\r\n        changePercent: 0\r\n      };\r\n    }\r\n  }\r\n  \r\n  console.timeEnd('BatchPriceUpdate');\r\n  return result;\r\n}\r\n\r\n/**\r\n * 生成特定地点的商品价格\r\n * 优化了地点特性对价格的影响计算\r\n * \r\n * @param {Array} products - 产品列表\r\n * @param {Object} location - 地点对象\r\n * @param {Object} priceHistory - 价格历史\r\n * @param {number} week - 当前周数\r\n * @param {Object} marketModifiers - 市场修正因子\r\n * @returns {Array} 包含价格的商品列表\r\n */\r\nexport function generateLocationProducts(products, location, priceHistory, week, marketModifiers = {}) {\r\n  // 如果没有地点信息，使用默认价格\r\n  if (!location) {\r\n    return products.map(product => {\r\n      const priceData = priceHistory[product.id] || { price: product.basePrice, trend: PriceTrend.STABLE };\r\n      return { ...product, currentPrice: priceData.price, trend: priceData.trend };\r\n    });\r\n  }\r\n  \r\n  // 使用位图标志优化特产检查\r\n  const specialProductSet = new Set(location.specialties || []);\r\n  \r\n  // 复制marketModifiers并添加地点特产\r\n  const locationMarketModifiers = { \r\n    ...marketModifiers,\r\n    specialProducts: location.specialties || [],\r\n    currentLocationId: location.id // 添加当前地区ID\r\n  };\r\n  \r\n  // 创建专属于该地点的商品列表\r\n  return products.map(product => {\r\n    const isSpecial = specialProductSet.has(product.id);\r\n    const locationFactor = isSpecial ? 0.85 : 1.0; // 特产价格降低15%\r\n    \r\n    const priceData = priceHistory[product.id] || { \r\n      price: product.basePrice, \r\n      trend: PriceTrend.STABLE \r\n    };\r\n    \r\n    // 计算该地点的商品价格\r\n    const locationPrice = Math.round(priceData.price * locationFactor);\r\n    \r\n    // 返回带有价格的商品\r\n    return { \r\n      ...product, \r\n      currentPrice: locationPrice, \r\n      trend: priceData.trend,\r\n      isSpecial: isSpecial\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * 获取价格趋势描述\r\n * @param {string} trend - 价格趋势\r\n * @returns {string} 趋势描述\r\n */\r\nexport function getTrendDescription(trend) {\r\n  const descriptions = {\r\n    [PriceTrend.RISING_STRONG]: '大幅上涨',\r\n    [PriceTrend.RISING]: '上涨',\r\n    [PriceTrend.STABLE_HIGH]: '高位稳定',\r\n    [PriceTrend.STABLE]: '稳定',\r\n    [PriceTrend.STABLE_LOW]: '低位稳定',\r\n    [PriceTrend.FALLING]: '下跌',\r\n    [PriceTrend.FALLING_STRONG]: '大幅下跌',\r\n    [PriceTrend.VOLATILE]: '剧烈波动'\r\n  };\r\n  \r\n  return descriptions[trend] || '未知';\r\n}\r\n\r\n/**\r\n * 获取价格趋势图标\r\n * @param {string} trend - 价格趋势\r\n * @returns {string} 趋势图标\r\n */\r\nexport function getTrendIcon(trend) {\r\n  const icons = {\r\n    [PriceTrend.RISING_STRONG]: '↑↑',\r\n    [PriceTrend.RISING]: '↑',\r\n    [PriceTrend.STABLE_HIGH]: '↗',\r\n    [PriceTrend.STABLE]: '→',\r\n    [PriceTrend.STABLE_LOW]: '↘',\r\n    [PriceTrend.FALLING]: '↓',\r\n    [PriceTrend.FALLING_STRONG]: '↓↓',\r\n    [PriceTrend.VOLATILE]: '↕'\r\n  };\r\n  \r\n  return icons[trend] || '→';\r\n}\r\n\r\n/**\r\n * 获取价格趋势颜色\r\n * @param {string} trend - 价格趋势\r\n * @returns {string} 颜色代码\r\n */\r\nexport function getTrendColor(trend) {\r\n  const colors = {\r\n    [PriceTrend.RISING_STRONG]: '#e53935', // 深红色\r\n    [PriceTrend.RISING]: '#f44336', // 红色\r\n    [PriceTrend.STABLE_HIGH]: '#ff9800', // 橙色\r\n    [PriceTrend.STABLE]: '#9e9e9e', // 灰色\r\n    [PriceTrend.STABLE_LOW]: '#8bc34a', // 浅绿色\r\n    [PriceTrend.FALLING]: '#4caf50', // 绿色\r\n    [PriceTrend.FALLING_STRONG]: '#2e7d32', // 深绿色\r\n    [PriceTrend.VOLATILE]: '#9c27b0' // 紫色\r\n  };\r\n  \r\n  return colors[trend] || '#9e9e9e';\r\n}\r\n\r\n/**\r\n * 性能测量函数 - 仅在开发模式下生效\r\n * 测量不同价格计算方法的性能差异\r\n * \r\n * @param {Array} products - 测试产品列表\r\n * @param {number} week - 当前周数\r\n * @param {Object} priceHistory - 价格历史\r\n * @param {Object} marketModifiers - 市场修正因子\r\n */\r\nexport function measurePriceCalculationPerformance(products, week, priceHistory, marketModifiers) {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('价格计算性能测试开始...');\r\n    \r\n    // 测试原始函数性能\r\n    const startOriginal = performance.now();\r\n    products.forEach(product => {\r\n      const prevPrice = priceHistory[product.id];\r\n      calculateNewPrice(product, week, prevPrice, 1, marketModifiers);\r\n    });\r\n    const endOriginal = performance.now();\r\n    \r\n    // 清除缓存，确保公平比较\r\n    clearPriceCache();\r\n    \r\n    // 测试优化函数性能\r\n    const startOptimized = performance.now();\r\n    products.forEach(product => {\r\n      const prevPrice = priceHistory[product.id];\r\n      calculatePriceWithCache(product, week, prevPrice, 1, marketModifiers);\r\n    });\r\n    const endOptimized = performance.now();\r\n    \r\n    // 测试批量更新性能\r\n    const startBatch = performance.now();\r\n    batchUpdatePrices(products, week, priceHistory, marketModifiers);\r\n    const endBatch = performance.now();\r\n    \r\n    // 输出比较结果\r\n    console.log(`原始方法: ${(endOriginal - startOriginal).toFixed(2)}ms`);\r\n    console.log(`优化方法: ${(endOptimized - startOptimized).toFixed(2)}ms`);\r\n    console.log(`批量方法: ${(endBatch - startBatch).toFixed(2)}ms`);\r\n    console.log(`性能提升: ${((endOriginal - startOriginal) / (endOptimized - startOptimized)).toFixed(2)}x`);\r\n  }\r\n} ","import { useMarketStore } from './marketState';\r\nimport { \r\n  calculatePriceWithCache, \r\n  clearPriceCache, \r\n  batchUpdatePrices,\r\n  getTrendDescription,\r\n  getTrendIcon,\r\n  getTrendColor,\r\n  measurePriceCalculationPerformance,\r\n  PriceTrend\r\n} from '../../core/services/priceSystem';\r\n\r\n/**\r\n * 价格操作模块\r\n * 提供价格计算和批量更新功能\r\n */\r\nexport const usePriceActions = () => {\r\n  const marketStore = useMarketStore();\r\n  \r\n  /**\r\n   * 更新所有产品价格\r\n   * @param {number} currentWeek - 当前周数\r\n   */\r\n  const updateProductPrices = (currentWeek) => {\r\n    console.log('开始更新产品价格，当前周数:', currentWeek);\r\n    \r\n    const products = marketStore.products;\r\n    console.log('产品总数:', products.length);\r\n    \r\n    const priceHistory = { ...marketStore.productPrices };\r\n    const marketModifiers = marketStore.marketModifiers;\r\n    \r\n    console.log('市场修正因子:', marketModifiers);\r\n    \r\n    // 临时调试措施：清除价格缓存\r\n    clearPriceCache();\r\n    \r\n    // 使用批量更新以提高性能\r\n    const newPrices = batchUpdatePrices(products, currentWeek, priceHistory, marketModifiers);\r\n    console.log('批量更新后的新价格数量:', Object.keys(newPrices).length);\r\n    \r\n    // 强制价格波动 - 确保每个物品每周都有价格变化\r\n    const forceFluctuation = true;\r\n    \r\n    // 更新价格状态\r\n    Object.keys(newPrices).forEach(productId => {\r\n      const prevPriceData = priceHistory[productId] || { price: 0, history: [] };\r\n      const newPriceData = newPrices[productId];\r\n      \r\n      // 确保有前一个价格用于计算变化百分比\r\n      const prevPrice = prevPriceData.price || products.find(p => p.id === Number(productId))?.basePrice || 0;\r\n      \r\n      // 强制价格波动 - 更加夸张的波动，且偏向下跌\r\n      if (forceFluctuation) {\r\n        // 检查价格是否变化\r\n        const priceChanged = Math.abs(newPriceData.price - prevPrice) >= 1;\r\n        \r\n        // 如果价格变化太小或者变化百分比太小，强制波动\r\n        if (!priceChanged || Math.abs(newPriceData.changePercent) < 1.0) {\r\n          // 使用商品ID和周数作为随机种子，确保同一商品在同一周有一致的价格变动方向\r\n          const productSeed = parseInt(productId) || 0;\r\n          const weekSeed = currentWeek || 0;\r\n          const combinedSeed = (productSeed * 31 + weekSeed) % 100; // 0-99的随机数\r\n          \r\n          // 根据商品ID和周数决定价格变动方向，确保不同商品有不同的变动方向\r\n          // 30%概率上涨，70%概率下跌，但每个商品在同一周的方向是确定的\r\n          const direction = combinedSeed < 30 ? 1 : -1;\r\n          \r\n          // 使用伪随机函数生成变化幅度，确保同一商品在同一周有相同的变化幅度\r\n          const pseudoRandom = Math.abs(Math.sin(combinedSeed * 0.1)) * 12; // 0-12的伪随机数\r\n          const randomChange = Math.max(3.0, pseudoRandom); // 至少3%的随机变化\r\n          const changeRatio = 1 + (direction * randomChange / 100);\r\n          \r\n          // 修改价格\r\n          newPriceData.price = Math.round(prevPrice * changeRatio);\r\n          \r\n          console.log(`强制价格波动 - 商品ID: ${productId}, 原价: ${prevPrice}, 新价: ${newPriceData.price}, 方向: ${direction > 0 ? '上涨' : '下跌'}, 变化幅度: ${randomChange.toFixed(1)}%`);\r\n        }\r\n      }\r\n      \r\n      // 确保changePercent不为0\r\n      if (newPriceData.changePercent === 0 && prevPrice > 0) {\r\n        // 获取商品的原始基础价格\r\n        const basePrice = products.find(p => p.id === Number(productId))?.basePrice || prevPrice;\r\n        // 基于原始基础价格计算变化百分比\r\n        newPriceData.changePercent = ((newPriceData.price - basePrice) / basePrice) * 100;\r\n        newPriceData.changePercent = parseFloat(newPriceData.changePercent.toFixed(1));\r\n      }\r\n      \r\n      // 更新价格数据，保留历史记录\r\n      marketStore.productPrices[productId] = {\r\n        price: newPriceData.price,\r\n        prevPrice: prevPrice,\r\n        trend: newPriceData.trend,\r\n        changePercent: newPriceData.changePercent,\r\n        originalPricePercent: newPriceData.originalPricePercent,\r\n        history: [...(prevPriceData.history || []), newPriceData.price].slice(-20) // 保留最近20周\r\n      };\r\n      \r\n      const product = products.find(p => p.id === Number(productId));\r\n      if (product) {\r\n        console.log(`商品 ${product.name}(ID:${productId}) 价格更新 - 基础价格: ${product.basePrice}, 当前价格: ${newPriceData.price}, 历史: [${marketStore.productPrices[productId].history.join(', ')}]`);\r\n        \r\n        // 在价格更新后，重新计算长期趋势\r\n        const { trend, changePercent } = marketStore.calculateLongTermTrend(productId, product.basePrice);\r\n        marketStore.productPrices[productId].trend = trend;\r\n        marketStore.productPrices[productId].changePercent = changePercent;\r\n        \r\n        console.log(`商品 ${product.name}(ID:${productId}) 趋势更新 - 趋势: ${trend}, 变化百分比: ${changePercent}%`);\r\n      }\r\n    });\r\n    \r\n    // 更新当前地点可用商品\r\n    marketStore.updateLocationProducts();\r\n    \r\n    console.log('价格更新完成');\r\n  };\r\n  \r\n  /**\r\n   * 获取商品的价格趋势说明\r\n   * @param {string} productId - 产品ID\r\n   * @returns {Object} 趋势说明 {text, icon, color}\r\n   */\r\n  const getProductTrendInfo = (productId) => {\r\n    const trend = marketStore.getProductPriceTrend(productId);\r\n    \r\n    return {\r\n      text: getTrendDescription(trend),\r\n      icon: getTrendIcon(trend),\r\n      color: getTrendColor(trend)\r\n    };\r\n  };\r\n  \r\n  /**\r\n   * 计算价格变化百分比文本\r\n   * @param {string} productId - 产品ID\r\n   * @returns {string} 格式化的价格变化百分比文本\r\n   */\r\n  const getPriceChangeText = (productId) => {\r\n    const priceData = marketStore.productPrices[productId];\r\n    if (!priceData || priceData.changePercent === undefined) {\r\n      return '0%';\r\n    }\r\n    \r\n    const changePercent = priceData.changePercent;\r\n    const sign = changePercent > 0 ? '+' : '';\r\n    return `${sign}${changePercent.toFixed(1)}%`;\r\n  };\r\n  \r\n  /**\r\n   * 执行性能测试，测量价格计算效率\r\n   * @param {Array} products - 产品列表\r\n   * @param {number} week - 当前周数\r\n   * @returns {Object} 性能测试结果\r\n   */\r\n  const measurePricePerformance = (products, week) => {\r\n    if (process.env.NODE_ENV !== 'development') {\r\n      return null;\r\n    }\r\n    \r\n    const priceHistory = { ...marketStore.productPrices };\r\n    const marketModifiers = marketStore.marketModifiers;\r\n    \r\n    return measurePriceCalculationPerformance(products, week, priceHistory, marketModifiers);\r\n  };\r\n  \r\n  return {\r\n    updateProductPrices,\r\n    getProductTrendInfo,\r\n    getPriceChangeText,\r\n    measurePricePerformance,\r\n    clearPriceCache\r\n  };\r\n}; ","import { defineStore } from 'pinia';\r\nimport { getAllProducts } from '../../core/models/product';\r\nimport { getAllLocations } from '../../core/models/location';\r\nimport { getAllHouses } from '../../core/models/house';\r\nimport { PriceTrend } from '../../core/services/priceSystem';\r\nimport { handleError, ErrorType, ErrorSeverity } from '../../infrastructure/utils/errorHandler';\r\nimport { usePriceActions } from './priceActions';\r\n\r\n/**\r\n * 市场状态管理\r\n * 负责市场价格、地点、房屋等数据\r\n */\r\nexport const useMarketStore = defineStore('market', {\r\n  state: () => ({\r\n    // 地点相关\r\n    locations: [],\r\n    currentLocation: null,\r\n    \r\n    // 商品相关\r\n    productPrices: {},\r\n    products: [],\r\n    availableProducts: [],\r\n    \r\n    // 房屋相关\r\n    houses: [],\r\n    \r\n    // 市场调整因子\r\n    marketModifiers: {\r\n      globalPriceModifier: 1,\r\n      categoryModifiers: {},\r\n      productModifiers: {},\r\n      locationModifiers: {}, // 新增: 地区价格修正因子 {locationId: modifier}\r\n      locationProductModifiers: {}, // 新增: 地区内商品价格修正因子 {locationId: {productId: modifier}}\r\n      weeksSinceLastGlobalChange: 0, // 记录全局价格修正因子连续未变化的周数\r\n      categoryUnchangedWeeks: {}, // 记录类别修正因子连续未变化的周数\r\n      productUnchangedWeeks: {}, // 记录商品修正因子连续未变化的周数\r\n      locationUnchangedWeeks: {}, // 新增: 记录地区修正因子连续未变化的周数\r\n      locationProductUnchangedWeeks: {} // 新增: 记录地区商品修正因子连续未变化的周数\r\n    },\r\n    \r\n    // 初始化状态\r\n    initialized: false\r\n  }),\r\n  \r\n  actions: {\r\n    /**\r\n     * 初始化市场数据\r\n     * @returns {Promise} 初始化完成的Promise\r\n     */\r\n    initializeMarket() {\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          // 模拟加载过程\r\n          setTimeout(() => {\r\n            // 获取地点\r\n            this.locations = getAllLocations();\r\n            \r\n            // 获取商品\r\n            this.products = getAllProducts();\r\n            \r\n            // 初始化房屋\r\n            this.houses = getAllHouses();\r\n            \r\n            // 初始化价格\r\n            this.initializeProductPrices();\r\n            \r\n            // 初始化市场调整因子\r\n            this.marketModifiers = {\r\n              globalPriceModifier: 1,\r\n              categoryModifiers: {},\r\n              productModifiers: {},\r\n              locationModifiers: {}, // 新增: 地区价格修正因子\r\n              locationProductModifiers: {}, // 新增: 地区内商品价格修正因子\r\n              weeksSinceLastGlobalChange: 0, // 初始化计数器\r\n              categoryUnchangedWeeks: {}, // 初始化计数器\r\n              productUnchangedWeeks: {}, // 初始化计数器\r\n              locationUnchangedWeeks: {}, // 新增: 初始化计数器\r\n              locationProductUnchangedWeeks: {} // 新增: 初始化计数器\r\n            };\r\n            \r\n            // 设置初始地点\r\n            if (this.locations.length > 0) {\r\n              this.changeLocation(this.locations[0].id);\r\n              \r\n              // 确保更新当前地点的可用商品\r\n              this.updateLocationProducts();\r\n            }\r\n            \r\n            // 标记为已初始化\r\n            this.initialized = true;\r\n            console.log('MarketStore - 市场初始化完成');\r\n            console.log('可用商品数量:', this.availableProducts.length);\r\n            resolve();\r\n          }, 500);\r\n        } catch (error) {\r\n          handleError(error, 'marketState (market)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\r\n          console.error('MarketStore - 初始化市场失败:', error);\r\n          reject(error);\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * 初始化产品价格\r\n     */\r\n    initializeProductPrices() {\r\n      this.productPrices = {};\r\n      this.products.forEach(product => {\r\n        // 初始价格设置在最低价和最高价之间的随机值\r\n        const initialPrice = Math.floor(Math.random() * (product.maxPrice - product.minPrice) + product.minPrice);\r\n        \r\n        this.productPrices[product.id] = {\r\n          price: initialPrice,\r\n          trend: PriceTrend.STABLE,\r\n          history: [initialPrice],\r\n          changePercent: 0\r\n        };\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * 更新市场状态\r\n     * @param {number} currentWeek - 当前周数\r\n     */\r\n    updateMarketState(currentWeek) {\r\n      console.log('MarketStore - 更新市场状态, 当前周数:', currentWeek);\r\n      \r\n      // 更新市场修正因子\r\n      this.updateMarketModifiers();\r\n      \r\n      try {\r\n        // 导入并使用priceActions中的方法\r\n        const { updateProductPrices } = usePriceActions();\r\n        \r\n        // 确保价格更新函数存在\r\n        if (typeof updateProductPrices !== 'function') {\r\n          console.error('MarketStore - updateProductPrices 不是一个函数');\r\n          return;\r\n        }\r\n        \r\n        // 添加当前地点信息到市场修正因子\r\n        if (this.currentLocation) {\r\n          this.marketModifiers.currentLocation = this.currentLocation;\r\n        }\r\n        \r\n        // 更新商品价格\r\n        updateProductPrices(currentWeek);\r\n        console.log('MarketStore - 商品价格已更新');\r\n      } catch (error) {\r\n        console.error('MarketStore - 更新商品价格时出错:', error);\r\n      }\r\n      \r\n      // 更新当前地点的商品\r\n      this.updateLocationProducts();\r\n    },\r\n    \r\n    /**\r\n     * 更新市场调整因子\r\n     * 随机波动市场价格调整因子，使市场更加动态\r\n     */\r\n    updateMarketModifiers() {\r\n      const modifiers = this.marketModifiers;\r\n      console.log('MarketStore - 更新市场调整因子');\r\n      \r\n      // 增加全局价格修正因子连续未变化的计数\r\n      modifiers.weeksSinceLastGlobalChange++;\r\n      \r\n      // 全局价格修正因子波动\r\n      // 每隔4-8周随机变化一次\r\n      if (modifiers.weeksSinceLastGlobalChange >= Math.max(4, Math.floor(Math.random() * 5) + 4)) {\r\n        // 重置计数器\r\n        modifiers.weeksSinceLastGlobalChange = 0;\r\n        \r\n        // 以70%概率变动全局价格修正因子\r\n        if (Math.random() < 0.7) {\r\n          // 在0.8到1.2之间随机波动\r\n          const oldModifier = modifiers.globalPriceModifier;\r\n          const variance = (Math.random() - 0.5) * 0.2; // -0.1 到 0.1 之间\r\n          modifiers.globalPriceModifier = Math.max(0.8, Math.min(1.2, oldModifier + variance));\r\n          \r\n          console.log(`MarketStore - 全局价格修正因子已更新: ${oldModifier.toFixed(2)} -> ${modifiers.globalPriceModifier.toFixed(2)}`);\r\n        }\r\n      }\r\n      \r\n      // 类别价格修正因子波动\r\n      // 对每个类别，都有30%的概率进行波动\r\n      const categories = ['food', 'electronics', 'luxury', 'daily', 'collectible'];\r\n      categories.forEach(category => {\r\n        // 增加类别价格修正因子连续未变化的计数\r\n        modifiers.categoryUnchangedWeeks[category] = (modifiers.categoryUnchangedWeeks[category] || 0) + 1;\r\n        \r\n        // 如果连续4周没有变化，或者有30%概率变化\r\n        if (modifiers.categoryUnchangedWeeks[category] >= 4 || Math.random() < 0.3) {\r\n          // 重置计数器\r\n          modifiers.categoryUnchangedWeeks[category] = 0;\r\n          \r\n          // 在0.7到1.3之间随机波动\r\n          const oldModifier = modifiers.categoryModifiers[category] || 1;\r\n          const variance = (Math.random() - 0.5) * 0.3; // -0.15 到 0.15 之间\r\n          modifiers.categoryModifiers[category] = Math.max(0.7, Math.min(1.3, oldModifier + variance));\r\n          \r\n          console.log(`MarketStore - ${category}类别价格修正因子已更新: ${oldModifier.toFixed(2)} -> ${modifiers.categoryModifiers[category].toFixed(2)}`);\r\n        }\r\n      });\r\n      \r\n      // 单个商品价格修正因子波动 - 每周有15%概率对少数几个商品进行波动\r\n      if (Math.random() < 0.15) {\r\n        // 随机选择1-3个商品\r\n        const productCount = Math.floor(Math.random() * 3) + 1;\r\n        const productIds = Object.keys(this.productPrices);\r\n        \r\n        for (let i = 0; i < productCount && productIds.length > 0; i++) {\r\n          // 随机选择一个商品\r\n          const randomIndex = Math.floor(Math.random() * productIds.length);\r\n          const productId = productIds[randomIndex];\r\n          \r\n          // 更新连续未变化的周数\r\n          modifiers.productUnchangedWeeks[productId] = 0;\r\n          \r\n          // 在0.5到1.5之间随机波动\r\n          const oldModifier = modifiers.productModifiers[productId] || 1;\r\n          const variance = (Math.random() - 0.5) * 0.6; // -0.3 到 0.3 之间\r\n          modifiers.productModifiers[productId] = Math.max(0.5, Math.min(1.5, oldModifier + variance));\r\n          \r\n          const product = this.products.find(p => p.id === Number(productId));\r\n          console.log(`MarketStore - 商品价格修正因子已更新: ${product?.name || productId} ${oldModifier.toFixed(2)} -> ${modifiers.productModifiers[productId].toFixed(2)}`);\r\n        }\r\n      }\r\n\r\n      // 地区价格修正因子波动 - 每周有20%概率对1-2个地区进行波动\r\n      if (Math.random() < 0.2) {\r\n        // 随机选择1-2个地区\r\n        const locationCount = Math.floor(Math.random() * 2) + 1;\r\n        const locationIds = this.locations.map(location => location.id);\r\n        \r\n        for (let i = 0; i < locationCount && locationIds.length > 0; i++) {\r\n          // 随机选择一个地区\r\n          const randomIndex = Math.floor(Math.random() * locationIds.length);\r\n          const locationId = locationIds[randomIndex];\r\n          \r\n          // 更新连续未变化的周数\r\n          modifiers.locationUnchangedWeeks[locationId] = 0;\r\n          \r\n          // 在0.6到1.4之间随机波动\r\n          const oldModifier = modifiers.locationModifiers[locationId] || 1;\r\n          const variance = (Math.random() - 0.5) * 0.4; // -0.2 到 0.2 之间\r\n          modifiers.locationModifiers[locationId] = Math.max(0.6, Math.min(1.4, oldModifier + variance));\r\n          \r\n          const location = this.locations.find(l => l.id === locationId);\r\n          console.log(`MarketStore - 地区价格修正因子已更新: ${location?.name || locationId} ${oldModifier.toFixed(2)} -> ${modifiers.locationModifiers[locationId].toFixed(2)}`);\r\n        }\r\n      }\r\n\r\n      // 地区内商品价格修正因子波动 - 每周有10%概率对某个地区的1-3个商品进行波动\r\n      if (Math.random() < 0.1) {\r\n        // 随机选择一个地区\r\n        const locationIds = this.locations.map(location => location.id);\r\n        const randomLocationIndex = Math.floor(Math.random() * locationIds.length);\r\n        const locationId = locationIds[randomLocationIndex];\r\n        \r\n        // 随机选择1-3个商品\r\n        const productCount = Math.floor(Math.random() * 3) + 1;\r\n        const productIds = Object.keys(this.productPrices);\r\n        \r\n        // 确保locationProductModifiers中有该地区的对象\r\n        if (!modifiers.locationProductModifiers[locationId]) {\r\n          modifiers.locationProductModifiers[locationId] = {};\r\n        }\r\n        \r\n        // 确保locationProductUnchangedWeeks中有该地区的对象\r\n        if (!modifiers.locationProductUnchangedWeeks[locationId]) {\r\n          modifiers.locationProductUnchangedWeeks[locationId] = {};\r\n        }\r\n        \r\n        for (let i = 0; i < productCount && productIds.length > 0; i++) {\r\n          // 随机选择一个商品\r\n          const randomProductIndex = Math.floor(Math.random() * productIds.length);\r\n          const productId = productIds[randomProductIndex];\r\n          \r\n          // 更新连续未变化的周数\r\n          modifiers.locationProductUnchangedWeeks[locationId][productId] = 0;\r\n          \r\n          // 在0.4到1.6之间随机波动（比单独的商品波动更大）\r\n          const oldModifier = modifiers.locationProductModifiers[locationId][productId] || 1;\r\n          const variance = (Math.random() - 0.5) * 0.8; // -0.4 到 0.4 之间\r\n          modifiers.locationProductModifiers[locationId][productId] = Math.max(0.4, Math.min(1.6, oldModifier + variance));\r\n          \r\n          const product = this.products.find(p => p.id === Number(productId));\r\n          const location = this.locations.find(l => l.id === locationId);\r\n          console.log(`MarketStore - 地区内商品价格修正因子已更新: ${location?.name || locationId} 的 ${product?.name || productId} ${oldModifier.toFixed(2)} -> ${modifiers.locationProductModifiers[locationId][productId].toFixed(2)}`);\r\n        }\r\n      }\r\n      \r\n      // 清理过期的修正因子 - 所有类型的修正因子都会随时间自动恢复到1.0\r\n      // (现有代码保留不变...)\r\n\r\n      // 确保所有修正因子在合理范围内\r\n      if (modifiers.globalPriceModifier < 0.8 || modifiers.globalPriceModifier > 1.2) {\r\n        modifiers.globalPriceModifier = 1.0;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 切换当前地点\r\n     * @param {string} locationId - 地点ID\r\n     * @returns {boolean} 是否切换成功\r\n     */\r\n    changeLocation(locationId) {\r\n      // 在可用地点中查找\r\n      const location = this.locations.find(loc => loc.id === locationId);\r\n      if (!location) return false;\r\n      \r\n      // 更新当前地点\r\n      this.currentLocation = location;\r\n      \r\n      // 更新该地点的商品\r\n      this.updateLocationProducts();\r\n      \r\n      return true;\r\n    },\r\n    \r\n    /**\r\n     * 更新当前地点可用商品\r\n     */\r\n    updateLocationProducts() {\r\n      console.log('MarketStore - 更新当前地点可用商品');\r\n      \r\n      if (!this.currentLocation) {\r\n        console.warn('MarketStore - 更新可用商品失败: 当前地点未设置');\r\n        this.availableProducts = [];\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // 根据地点筛选可用商品\r\n        const availableProductIds = this.getLocationAvailableProducts(this.currentLocation);\r\n        console.log('MarketStore - 当前地点可用商品ID:', availableProductIds);\r\n        \r\n        // 更新可用商品列表\r\n        this.availableProducts = this.products\r\n          .filter(product => availableProductIds.includes(product.id))\r\n          .map(product => {\r\n            const currentPrice = this.getCurrentProductPrice(product.id);\r\n            const isSpecial = this.isSpecialProduct(product.id);\r\n            \r\n            // 强制重新计算长期趋势和变化百分比\r\n            const { trend, changePercent } = this.calculateLongTermTrend(product.id, product.basePrice);\r\n            \r\n            // 更新存储的趋势和变化百分比\r\n            if (this.productPrices[product.id]) {\r\n              this.productPrices[product.id].trend = trend;\r\n              this.productPrices[product.id].changePercent = changePercent;\r\n            }\r\n            \r\n            console.log(`商品 ${product.name} - 价格: ${currentPrice}, 趋势: ${trend}, 变化百分比: ${changePercent}%`);\r\n            \r\n            return {\r\n              ...product,\r\n              currentPrice,\r\n              trend,\r\n              changePercent,\r\n              isSpecial\r\n            };\r\n          });\r\n        \r\n        console.log(`MarketStore - 更新完成，可用商品数量: ${this.availableProducts.length}`);\r\n      } catch (error) {\r\n        handleError(error, 'marketState (market)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\r\n        console.error('MarketStore - 更新当前地点可用商品时出错:', error);\r\n        // 确保即使出错也至少有一个空数组\r\n        this.availableProducts = [];\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 计算长期趋势和变化百分比\r\n     * @param {number} productId - 商品ID\r\n     * @param {number} basePrice - 商品基础价格\r\n     * @returns {Object} 趋势和变化百分比\r\n     */\r\n    calculateLongTermTrend(productId, basePrice) {\r\n      const priceData = this.productPrices[productId];\r\n      if (!priceData || !priceData.history || priceData.history.length === 0) {\r\n        console.log(`商品 ${productId} 没有价格历史数据，使用默认趋势`);\r\n        return { trend: PriceTrend.STABLE, changePercent: 0 };\r\n      }\r\n      \r\n      // 获取价格历史\r\n      const priceHistory = priceData.history;\r\n      \r\n      // 计算当前价格相对于基础价格的变化百分比\r\n      const currentPrice = priceHistory[priceHistory.length - 1];\r\n      const currentChangePercent = ((currentPrice - basePrice) / basePrice) * 100;\r\n      \r\n      console.log(`商品 ${productId} 趋势计算 - 基础价格: ${basePrice}, 当前价格: ${currentPrice}, 历史记录: [${priceHistory.join(', ')}], 变化百分比: ${currentChangePercent.toFixed(1)}%`);\r\n      \r\n      // 计算价格变化趋势\r\n      let trend;\r\n      \r\n      // 根据当前价格相对于基础价格的变化百分比确定趋势\r\n      if (currentChangePercent > 15) {\r\n        trend = PriceTrend.RISING_STRONG;\r\n      } else if (currentChangePercent > 5) {\r\n        trend = PriceTrend.RISING;\r\n      } else if (currentChangePercent < -15) {\r\n        trend = PriceTrend.FALLING_STRONG;\r\n      } else if (currentChangePercent < -5) {\r\n        trend = PriceTrend.FALLING;\r\n      } else {\r\n        // 对于小幅变化，根据价格在最低价和最高价之间的位置确定趋势\r\n        const product = this.products.find(p => p.id === Number(productId));\r\n        if (!product) {\r\n          console.log(`商品 ${productId} 未找到产品信息，使用默认趋势`);\r\n          trend = PriceTrend.STABLE;\r\n        } else {\r\n          const minPrice = product.minPrice;\r\n          const maxPrice = product.maxPrice;\r\n          const priceRange = maxPrice - minPrice;\r\n          \r\n          if (priceRange <= 0) {\r\n            console.log(`商品 ${productId} 价格范围为0，使用默认趋势`);\r\n            trend = PriceTrend.STABLE;\r\n          } else {\r\n            const relativePricePos = (currentPrice - minPrice) / priceRange;\r\n            \r\n            console.log(`商品 ${productId} 相对位置计算 - 最低价: ${minPrice}, 最高价: ${maxPrice}, 相对位置: ${(relativePricePos * 100).toFixed(1)}%`);\r\n            \r\n            if (relativePricePos > 0.8) {\r\n              trend = PriceTrend.STABLE_HIGH;\r\n            } else if (relativePricePos < 0.2) {\r\n              trend = PriceTrend.STABLE_LOW;\r\n            } else {\r\n              trend = PriceTrend.STABLE;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 如果价格历史足够长，计算短期波动性\r\n      if (priceHistory.length >= 3) {\r\n        const recentPrices = priceHistory.slice(-3);\r\n        const volatility = this.calculateVolatility(recentPrices);\r\n        \r\n        console.log(`商品 ${productId} 波动性计算 - 最近价格: [${recentPrices.join(', ')}], 波动性: ${volatility.toFixed(3)}`);\r\n        \r\n        // 如果波动性很高，将趋势标记为波动\r\n        if (volatility > 0.1) {\r\n          trend = PriceTrend.VOLATILE;\r\n        }\r\n      }\r\n      \r\n      console.log(`商品 ${productId} 最终趋势: ${trend}, 变化百分比: ${currentChangePercent.toFixed(1)}%`);\r\n      \r\n      return {\r\n        trend,\r\n        changePercent: parseFloat(currentChangePercent.toFixed(1))\r\n      };\r\n    },\r\n    \r\n    /**\r\n     * 计算价格波动性\r\n     * @param {Array} prices - 价格数组\r\n     * @returns {number} 波动性指标\r\n     */\r\n    calculateVolatility(prices) {\r\n      if (!prices || prices.length < 2) return 0;\r\n      \r\n      let sumChanges = 0;\r\n      for (let i = 1; i < prices.length; i++) {\r\n        const prevPrice = prices[i-1];\r\n        const currentPrice = prices[i];\r\n        if (prevPrice > 0) {\r\n          const change = Math.abs((currentPrice - prevPrice) / prevPrice);\r\n          sumChanges += change;\r\n        }\r\n      }\r\n      \r\n      return sumChanges / (prices.length - 1);\r\n    },\r\n    \r\n    /**\r\n     * 获取地点可用商品列表\r\n     * @param {Object} location - 地点对象\r\n     * @returns {Array} 可用商品ID列表\r\n     */\r\n    getLocationAvailableProducts(location) {\r\n      if (!location) return [];\r\n      \r\n      try {\r\n        // 获取此地点可用的商品ID\r\n        const availableProducts = this.products\r\n          .filter(product => {\r\n            // 检查产品是否在当前地点可用\r\n            return product.availableAt && product.availableAt.includes(location.id);\r\n          })\r\n          .map(product => product.id);\r\n        \r\n        // 添加特色商品，确保它们也在可用列表中\r\n        if (location.specialProducts && location.specialProducts.length > 0) {\r\n          location.specialProducts.forEach(productId => {\r\n            if (!availableProducts.includes(productId)) {\r\n              availableProducts.push(productId);\r\n            }\r\n          });\r\n        }\r\n        \r\n        return availableProducts;\r\n      } catch (error) {\r\n        console.error('获取地点可用商品列表出错:', error);\r\n        return [];\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 判断商品是否为当前地点特色商品\r\n     * @param {string} productId - 商品ID\r\n     * @returns {boolean} 是否为特色商品\r\n     */\r\n    isSpecialProduct(productId) {\r\n      if (!this.currentLocation || !this.currentLocation.specialProducts) {\r\n        return false;\r\n      }\r\n      \r\n      return this.currentLocation.specialProducts.includes(productId);\r\n    },\r\n    \r\n    /**\r\n     * 获取商品当前价格\r\n     * @param {string} productId - 商品ID\r\n     * @returns {number} 商品当前价格\r\n     */\r\n    getCurrentProductPrice(productId) {\r\n      if (!productId) {\r\n        console.warn(`MarketStore - getCurrentProductPrice: 无效的商品ID: ${productId}`);\r\n        return 0;\r\n      }\r\n      \r\n      // 确保将productId转换为字符串进行比较\r\n      const productIdStr = String(productId);\r\n      \r\n      // 检查价格是否存在\r\n      if (!this.productPrices || !this.productPrices[productIdStr]) {\r\n        console.warn(`MarketStore - getCurrentProductPrice: 找不到商品价格 (ID: ${productIdStr})`);\r\n        \r\n        // 尝试查找商品的基础价格\r\n        const product = this.products.find(p => String(p.id) === productIdStr);\r\n        if (product) {\r\n          console.log(`MarketStore - 使用商品基础价格: ${product.basePrice}`);\r\n          return product.basePrice || 0;\r\n        }\r\n        \r\n        return 0;\r\n      }\r\n      \r\n      return this.productPrices[productIdStr].price || 0;\r\n    },\r\n    \r\n    /**\r\n     * 获取商品价格历史\r\n     * @param {string} productId - 商品ID\r\n     * @returns {Array} 价格历史\r\n     */\r\n    getProductPriceHistory(productId) {\r\n      return this.productPrices[productId]?.history || [];\r\n    },\r\n    \r\n    /**\r\n     * 获取商品价格趋势\r\n     * @param {string} productId - 商品ID\r\n     * @returns {string} 价格趋势\r\n     */\r\n    getProductPriceTrend(productId) {\r\n      return this.productPrices[productId]?.trend || PriceTrend.STABLE;\r\n    },\r\n    \r\n    /**\r\n     * 添加市场修正器\r\n     * @param {string} type - 修正类型 ('global', 'category', 'product', 'location', 'locationProduct')\r\n     * @param {Object} data - 修正数据\r\n     */\r\n    addMarketModifier(type, data) {\r\n      switch (type) {\r\n        case 'global':\r\n          this.marketModifiers.globalPriceModifier = data.value;\r\n          break;\r\n          \r\n        case 'category':\r\n          this.marketModifiers.categoryModifiers[data.category] = data.value;\r\n          break;\r\n          \r\n        case 'product':\r\n          this.marketModifiers.productModifiers[data.productId] = data.value;\r\n          break;\r\n\r\n        case 'location':\r\n          this.marketModifiers.locationModifiers[data.locationId] = data.value;\r\n          break;\r\n          \r\n        case 'locationProduct':\r\n          // 确保locationProductModifiers中有该地区的对象\r\n          if (!this.marketModifiers.locationProductModifiers[data.locationId]) {\r\n            this.marketModifiers.locationProductModifiers[data.locationId] = {};\r\n          }\r\n          this.marketModifiers.locationProductModifiers[data.locationId][data.productId] = data.value;\r\n          break;\r\n      }\r\n    },\r\n\r\n/**\r\n * 加载产品数据\r\n * @param {Array} productIds - 产品ID列表\r\n */\r\nloadProducts(productIds) {\r\n  console.log('MarketStore - 加载产品数据:', productIds);\r\n  if (!Array.isArray(productIds)) {\r\n    console.warn('MarketStore - 加载产品数据时传入的不是数组:', productIds);\r\n    return;\r\n  }\r\n  \r\n  // 确保产品列表已加载\r\n  if (this.products.length === 0) {\r\n    this.products = getAllProducts();\r\n  }\r\n  \r\n  // 如果传入的是产品ID列表，过滤出对应产品\r\n  if (productIds.length > 0 && typeof productIds[0] === 'string') {\r\n    const allProducts = getAllProducts();\r\n    this.products = allProducts.filter(p => productIds.includes(p.id));\r\n    console.log('MarketStore - 已加载指定产品:', this.products.length);\r\n  }\r\n  \r\n  // 更新当前地点的可用产品\r\n  this.updateLocationProducts();\r\n},\r\n\r\n/**\r\n * 加载房屋数据\r\n * @param {Array} houseIds - 房屋ID列表\r\n */\r\nloadHouses(houseIds) {\r\n  console.log('MarketStore - 加载房屋数据:', houseIds);\r\n  if (!Array.isArray(houseIds)) {\r\n    console.warn('MarketStore - 加载房屋数据时传入的不是数组:', houseIds);\r\n    return;\r\n  }\r\n  \r\n  // 确保房屋列表已加载\r\n  if (this.houses.length === 0) {\r\n    this.houses = getAllHouses();\r\n  }\r\n  \r\n  // 如果传入的是房屋ID列表，过滤出对应房屋\r\n  if (houseIds.length > 0 && typeof houseIds[0] === 'string') {\r\n    const allHouses = getAllHouses();\r\n    this.houses = allHouses.filter(h => houseIds.includes(h.id));\r\n    console.log('MarketStore - 已加载指定房屋:', this.houses.length);\r\n  }\r\n},\r\n  },\r\n  \r\n  getters: {\r\n    /**\r\n     * 获取可购买的房屋列表\r\n     * @returns {Array} 可购买的房屋\r\n     */\r\n    availableHouses(state) {\r\n      return state.houses;\r\n    },\r\n    \r\n    /**\r\n     * 获取当前地点信息\r\n     * @returns {Object} 当前地点\r\n     */\r\n    currentLocationInfo(state) {\r\n      if (!state.currentLocation) return null;\r\n      \r\n      return {\r\n        id: state.currentLocation.id,\r\n        name: state.currentLocation.name,\r\n        description: state.currentLocation.description,\r\n        modifiers: state.currentLocation.modifiers,\r\n        hasSpecialProducts: \r\n          state.currentLocation.specialProducts && \r\n          state.currentLocation.specialProducts.length > 0\r\n      };\r\n    },\r\n    \r\n    /**\r\n     * 获取市场状态信息\r\n     * @returns {Object} 市场状态\r\n     */\r\n    marketStatus(state) {\r\n      // 判断市场整体状态\r\n      const globalModifier = state.marketModifiers.globalPriceModifier;\r\n      let status = 'neutral';\r\n      \r\n      if (globalModifier > 1.1) status = 'bull';\r\n      else if (globalModifier < 0.9) status = 'bear';\r\n      \r\n      // 计算高价和低价商品占比\r\n      const productsWithPrices = state.products.filter(p => state.productPrices[p.id]);\r\n      const highPriceProducts = productsWithPrices.filter(p => {\r\n        const priceData = state.productPrices[p.id];\r\n        const pricePosition = (priceData.price - p.minPrice) / (p.maxPrice - p.minPrice);\r\n        return pricePosition > 0.7;\r\n      });\r\n      \r\n      const lowPriceProducts = productsWithPrices.filter(p => {\r\n        const priceData = state.productPrices[p.id];\r\n        const pricePosition = (priceData.price - p.minPrice) / (p.maxPrice - p.minPrice);\r\n        return pricePosition < 0.3;\r\n      });\r\n      \r\n      return {\r\n        status,\r\n        globalModifier,\r\n        highPriceProductsRatio: productsWithPrices.length > 0 ? \r\n          highPriceProducts.length / productsWithPrices.length : 0,\r\n        lowPriceProductsRatio: productsWithPrices.length > 0 ? \r\n          lowPriceProducts.length / productsWithPrices.length : 0,\r\n        activeModifiersCount: \r\n          Object.keys(state.marketModifiers.categoryModifiers).length + \r\n          Object.keys(state.marketModifiers.productModifiers).length\r\n      };\r\n    }\r\n  }\r\n}); ","/**\r\n * 事件领域模型\r\n * 管理游戏中的事件及其属性\r\n */\r\n\r\n/**\r\n * 事件类型枚举\r\n */\r\nexport const EventType = {\r\n  RANDOM: 'random',       // 随机事件\r\n  STORY: 'story',         // 故事/剧情事件\r\n  LOCATION: 'location',   // 地点特定事件\r\n  MARKET: 'market',       // 市场事件\r\n  PERSONAL: 'personal',   // 个人事件\r\n  TUTORIAL: 'tutorial'    // 教程事件\r\n};\r\n\r\n/**\r\n * 事件效果类型枚举\r\n */\r\nexport const EffectType = {\r\n  MONEY: 'money',                    // 金钱变化\r\n  DEBT: 'debt',                      // 债务变化\r\n  INVENTORY: 'inventory',            // 物品变化\r\n  MARKET: 'market',                  // 市场影响\r\n  ATTRIBUTE: 'attribute',            // 属性变化\r\n  LOCATION: 'location',              // 地点变化\r\n  CAPACITY: 'capacity',              // 背包容量变化\r\n  NEXT_EVENT: 'next_event',          // 触发下一个事件\r\n  GAME_STATE: 'game_state'           // 游戏状态变化\r\n};\r\n\r\n/**\r\n * 事件类\r\n * 封装事件的属性和行为\r\n */\r\nexport class Event {\r\n  /**\r\n   * 创建事件实例\r\n   * @param {Object} options 事件初始化选项\r\n   * @param {string} options.id 事件ID\r\n   * @param {string} options.title 事件标题\r\n   * @param {string} options.description 事件描述\r\n   * @param {Array} options.options 事件选项\r\n   * @param {Object} options.conditions 触发条件\r\n   * @param {boolean} options.repeatable 是否可重复触发\r\n   * @param {string} options.type 事件类型\r\n   * @param {number} options.weight 触发权重\r\n   * @param {string} options.imageUrl 事件图像URL\r\n   */\r\n  constructor({\r\n    id,\r\n    title,\r\n    description,\r\n    options = [],\r\n    conditions = {},\r\n    repeatable = false,\r\n    type = EventType.RANDOM,\r\n    weight = 1,\r\n    imageUrl = null\r\n  }) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.description = description;\r\n    this.options = options;\r\n    this.conditions = conditions;\r\n    this.repeatable = repeatable;\r\n    this.type = type;\r\n    this.weight = weight;\r\n    // 暂时禁用事件图片\r\n    this.imageUrl = null; // imageUrl;\r\n  }\r\n  \r\n  /**\r\n   * 检查事件是否可以在当前游戏状态下触发\r\n   * @param {Object} gameState 游戏状态\r\n   * @param {Array} triggeredEvents 已触发事件列表\r\n   * @returns {boolean} 是否可触发\r\n   */\r\n  canTrigger(gameState, triggeredEvents = []) {\r\n    const c = this.conditions;\r\n    \r\n    // 检查是否可重复触发\r\n    if (!this.repeatable && triggeredEvents.includes(this.id)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查周数限制\r\n    if (c.minWeek !== null && gameState.currentWeek < c.minWeek) {\r\n      return false;\r\n    }\r\n    \r\n    if (c.maxWeek !== null && gameState.currentWeek > c.maxWeek) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查地点限制\r\n    if (c.locations !== null && !c.locations.includes(gameState.currentLocation?.id)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查金钱限制\r\n    if (c.playerMoney !== null) {\r\n      const money = gameState.player.money;\r\n      if (c.playerMoney.min !== undefined && money < c.playerMoney.min) return false;\r\n      if (c.playerMoney.max !== undefined && money > c.playerMoney.max) return false;\r\n    }\r\n    \r\n    // 检查债务限制\r\n    if (c.playerDebt !== null) {\r\n      const debt = gameState.player.debt;\r\n      if (c.playerDebt.min !== undefined && debt < c.playerDebt.min) return false;\r\n      if (c.playerDebt.max !== undefined && debt > c.playerDebt.max) return false;\r\n    }\r\n    \r\n    // 检查背包物品限制\r\n    if (c.inventoryItems !== null) {\r\n      for (const item of c.inventoryItems) {\r\n        const inventoryItem = gameState.player.inventory.find(i => i.productId === item.productId);\r\n        const quantity = inventoryItem ? inventoryItem.quantity : 0;\r\n        \r\n        if (item.minQuantity !== undefined && quantity < item.minQuantity) return false;\r\n        if (item.maxQuantity !== undefined && quantity > item.maxQuantity) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查属性限制\r\n    if (c.attributes !== null) {\r\n      for (const [attr, limits] of Object.entries(c.attributes)) {\r\n        const value = gameState.player.attributes?.[attr] || 0;\r\n        if (limits.min !== undefined && value < limits.min) return false;\r\n        if (limits.max !== undefined && value > limits.max) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查需要已触发的事件\r\n    if (c.requiredEvents !== null) {\r\n      for (const eventId of c.requiredEvents) {\r\n        if (!triggeredEvents.includes(eventId)) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查需要未触发的事件\r\n    if (c.excludedEvents !== null) {\r\n      for (const eventId of c.excludedEvents) {\r\n        if (triggeredEvents.includes(eventId)) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查自定义条件\r\n    if (c.customCondition !== null && !c.customCondition(gameState)) {\r\n      return false;\r\n    }\r\n    \r\n    // 应用概率\r\n    return Math.random() <= (c.probability || 1);\r\n  }\r\n  \r\n  /**\r\n   * 获取可用的事件选项\r\n   * @param {Object} gameState 游戏状态\r\n   * @returns {Array} 可用的事件选项\r\n   */\r\n  getAvailableOptions(gameState) {\r\n    return this.options.filter(option => {\r\n      return option.condition === null || option.condition(gameState);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 事件选项类\r\n * 封装事件选项的属性和行为\r\n */\r\nexport class EventOption {\r\n  /**\r\n   * 创建事件选项实例\r\n   * @param {Object} options 选项初始化配置\r\n   * @param {string} options.text 选项文本\r\n   * @param {string} options.result 结果文本\r\n   * @param {Object} options.effects 效果对象\r\n   * @param {Function} options.condition 选项显示条件\r\n   */\r\n  constructor({\r\n    text,\r\n    result,\r\n    effects,\r\n    condition = null\r\n  }) {\r\n    this.text = text;\r\n    this.result = result;\r\n    this.effects = effects;\r\n    this.condition = condition;\r\n  }\r\n  \r\n  /**\r\n   * 检查选项是否可用\r\n   * @param {Object} gameState 游戏状态\r\n   * @returns {boolean} 选项是否可用\r\n   */\r\n  isAvailable(gameState) {\r\n    return this.condition === null || this.condition(gameState);\r\n  }\r\n}\r\n\r\n/**\r\n * 事件效果类\r\n * 封装事件效果的属性\r\n */\r\nexport class EventEffects {\r\n  /**\r\n   * 创建事件效果实例\r\n   * @param {Object} options 效果初始化配置\r\n   * @param {number} options.money 金钱变化（正数增加，负数减少，小于1的小数表示百分比）\r\n   * @param {number} options.debt 债务变化（正数增加，负数减少，小于1的小数表示百分比）\r\n   * @param {Array} options.inventory 物品变化 [{productId, quantity, priceModifier}]\r\n   * @param {Object} options.attributes 属性变化 {businessSkill, creditRating, etc.}\r\n   * @param {Object} options.market 市场影响\r\n   * @param {number} options.market.globalPriceModifier 全局价格修正因子\r\n   * @param {Object} options.market.categoryModifiers 类别价格修正因子 {category: modifier}\r\n   * @param {Object} options.market.productModifiers 商品价格修正因子 {productId: modifier}\r\n   * @param {Object} options.market.locationModifiers 地区价格修正因子 {locationId: modifier}\r\n   * @param {Object} options.market.locationProductModifiers 特定地区特定商品价格修正因子 {locationId: {productId: modifier}}\r\n   * @param {number} options.market.duration 效果持续时间（周数）\r\n   * @param {boolean} options.forceLocationChange 强制切换地点\r\n   * @param {string} options.targetLocation 目标地点ID\r\n   * @param {number} options.capacity 背包容量变化\r\n   * @param {string} options.nextEvent 连锁事件ID\r\n   * @param {Object} options.gameState 游戏状态变化 {gamePaused, forceGameOver, etc.}\r\n   */\r\n  constructor({\r\n    money = 0,          // 金钱变化（正数增加，负数减少，小于1的小数表示百分比）\r\n    debt = 0,           // 债务变化（正数增加，负数减少，小于1的小数表示百分比）\r\n    inventory = [],     // 物品变化 [{productId, quantity, priceModifier}]\r\n    attributes = {},    // 属性变化 {businessSkill, creditRating, etc.}\r\n    market = null,      // 市场影响 {globalPriceModifier, categoryModifiers, productModifiers, locationModifiers, locationProductModifiers, duration}\r\n    forceLocationChange = false, // 强制切换地点\r\n    targetLocation = null, // 目标地点ID\r\n    capacity = 0,       // 背包容量变化\r\n    nextEvent = null,   // 连锁事件ID\r\n    gameState = null    // 游戏状态变化 {gamePaused, forceGameOver, etc.}\r\n  }) {\r\n    this.money = money;\r\n    this.debt = debt;\r\n    this.inventory = inventory;\r\n    this.attributes = attributes;\r\n    this.market = market;\r\n    this.forceLocationChange = forceLocationChange;\r\n    this.targetLocation = targetLocation;\r\n    this.capacity = capacity;\r\n    this.nextEvent = nextEvent;\r\n    this.gameState = gameState;\r\n  }\r\n}\r\n\r\n/**\r\n * 事件条件类\r\n * 封装事件触发条件的属性\r\n */\r\nexport class EventConditions {\r\n  /**\r\n   * 创建事件条件实例\r\n   * @param {Object} options 条件初始化配置\r\n   */\r\n  constructor({\r\n    minWeek = null,        // 最小周数\r\n    maxWeek = null,        // 最大周数\r\n    locations = null,      // 可触发地点列表\r\n    probability = 1,       // 触发概率\r\n    playerMoney = null,    // 玩家金钱条件 {min, max}\r\n    playerDebt = null,     // 玩家债务条件 {min, max}\r\n    inventoryItems = null, // 背包物品条件 [{productId, minQuantity, maxQuantity}]\r\n    attributes = null,     // 属性条件 {attributeName: {min, max}}\r\n    requiredEvents = null, // 需要已触发的事件列表\r\n    excludedEvents = null, // 需要未触发的事件列表\r\n    customCondition = null // 自定义条件函数 (gameState) => boolean\r\n  }) {\r\n    this.minWeek = minWeek;\r\n    this.maxWeek = maxWeek;\r\n    this.locations = locations;\r\n    this.probability = probability;\r\n    this.playerMoney = playerMoney;\r\n    this.playerDebt = playerDebt;\r\n    this.inventoryItems = inventoryItems;\r\n    this.attributes = attributes;\r\n    this.requiredEvents = requiredEvents;\r\n    this.excludedEvents = excludedEvents;\r\n    this.customCondition = customCondition;\r\n  }\r\n}\r\n\r\n// 兼容旧版API的工厂函数\r\n/**\r\n * 创建事件工厂函数 - OOP风格\r\n * @param {Object} options 事件初始化选项\r\n * @returns {Event} 新的事件实例\r\n */\r\nexport function createEvent(options) {\r\n  if (typeof options === 'object' && !Array.isArray(options)) {\r\n    return new Event(options);\r\n  } else {\r\n    // 兼容旧版API\r\n    const [id, title, description, options, conditions, repeatable, type, weight, imageUrl] = arguments;\r\n    return new Event({\r\n      id, title, description, options, conditions, repeatable, type, weight, imageUrl\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 创建事件选项工厂函数 - 兼容旧版API\r\n * @param {string} text 选项文本\r\n * @param {string} result 结果文本\r\n * @param {Object} effects 效果对象\r\n * @param {Function} condition 选项显示条件\r\n * @returns {EventOption} 事件选项对象\r\n */\r\nexport const createEventOption = (text, result, effects, condition = null) => {\r\n  return new EventOption({ text, result, effects, condition });\r\n};\r\n\r\n/**\r\n * 创建事件效果对象 - 兼容旧版API\r\n * @returns {EventEffects} 事件效果对象\r\n */\r\nexport const createEventEffects = (options) => {\r\n  return new EventEffects(options);\r\n};\r\n\r\n/**\r\n * 创建事件触发条件 - 兼容旧版API\r\n * @returns {EventConditions} 事件触发条件对象\r\n */\r\nexport const createEventConditions = (options) => {\r\n  return new EventConditions(options);\r\n}; \r\n// 预定义事件列表\r\nconst predefinedEvents = [\r\n  // --- 市场事件 ---\r\n  createEvent(\r\n    'market_boom',\r\n    '局部市场繁荣',\r\n    '最新经济报道：高端商城和电子科技城迎来消费热潮，商品价格普遍上涨！这可能是调整购买策略的好时机。',\r\n    [\r\n      createEventOption(\r\n        '抓住机会在热门地区采购',\r\n        '你决定前往这些繁荣地区采购更多商品，希望能从价格波动中获益。',\r\n        createEventEffects({\r\n          market: {\r\n            locationModifiers: {\r\n              'premium_mall': 1.25, // 高端商城价格上涨25%\r\n              'electronics_hub': 1.15 // 电子科技城价格上涨15%\r\n            },\r\n            duration: 2 // 持续2周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '观望市场走势',\r\n        '你决定保持观望态度，不做任何特别的操作。',\r\n        createEventEffects({})\r\n      ),\r\n      createEventOption(\r\n        '趁高价出售相关库存商品',\r\n        '你决定利用这些地区价格上涨的机会出售一些库存商品。',\r\n        createEventEffects({\r\n          market: { \r\n            locationModifiers: {\r\n              'premium_mall': 1.2, // 高端商城价格上涨20%\r\n              'electronics_hub': 1.1 // 电子科技城价格上涨10%\r\n            }, \r\n            duration: 1 // 持续1周\r\n          }\r\n        }),\r\n        (gameState) => gameState.player.inventoryUsed > 0 // 只有当背包中有物品时才显示此选项\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      minWeek: 5, // 至少第5周后触发\r\n      probability: 0.2 // 20%触发概率\r\n    }),\r\n    true, // 可重复触发\r\n    EventType.MARKET, // 事件类型\r\n    1.5, // 权重\r\n    '/assets/images/events/market_boom.jpg' // 事件图片\r\n  ),\r\n  \r\n  createEvent(\r\n    'market_crash',\r\n    '局部市场崩盘',\r\n    '突发消息：二手市场和地下黑市爆发安全事件，导致这些地区交易萎缩，商品价格大幅下跌！你需要决定是否利用这次低价机会。',\r\n    [\r\n      createEventOption(\r\n        '抄底购买',\r\n        '你决定趁低价前往受影响地区大量购入商品，希望能在价格回升时获利。',\r\n        createEventEffects({\r\n          market: {\r\n            locationModifiers: {\r\n              'second_hand_market': 0.65, // 二手市场价格下跌35%\r\n              'black_market': 0.7 // 地下黑市价格下跌30%\r\n            },\r\n            duration: 3 // 持续3周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '等待市场稳定',\r\n        '你决定等待市场稳定后再行动，避免在动荡时期冒险。',\r\n        createEventEffects({})\r\n      ),\r\n      createEventOption(\r\n        '提前卖出持有商品',\r\n        '你担心其他地区也会受影响，决定立即出售部分商品减少可能的损失。',\r\n        createEventEffects({\r\n          market: {\r\n            locationModifiers: {\r\n              'second_hand_market': 0.75, // 二手市场价格下跌25%\r\n              'black_market': 0.8 // 地下黑市价格下跌20%\r\n            },\r\n            duration: 1 // 持续1周\r\n          }\r\n        }),\r\n        (gameState) => gameState.player.inventoryUsed > 0\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      minWeek: 10,\r\n      probability: 0.15\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1.5,\r\n    '/assets/images/events/market_crash.jpg'\r\n  ),\r\n  \r\n  // --- 个人事件 ---\r\n  createEvent(\r\n    'lucky_money',\r\n    '意外之财',\r\n    '你在路上捡到了一个钱包，里面有一些现金和失主的联系方式。这是个考验你诚信的时刻。',\r\n    [\r\n      createEventOption(\r\n        '归还钱包',\r\n        '你联系了失主并归还了钱包，对方非常感谢并给了你500元酬金。',\r\n        createEventEffects({\r\n          money: 500,\r\n          attributes: { creditRating: 1, reputation: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '据为己有',\r\n        '你决定把钱包里的钱据为己有，获得了2000元，但感到有些愧疚。',\r\n        createEventEffects({ \r\n          money: 2000,\r\n          attributes: { creditRating: -2, reputation: -2 } \r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 3\r\n    }),\r\n    false, // 不可重复触发\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/lucky_money.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'health_problem',\r\n    '健康问题',\r\n    '你突然感到身体不适，医生建议你及时就医。不及时处理可能会影响到你的日常工作和生活。',\r\n    [\r\n      createEventOption(\r\n        '立即就医',\r\n        '你选择立即去医院检查治疗，花费了一些医疗费，但迅速恢复了健康。',\r\n        createEventEffects({ \r\n          money: -800,\r\n          attributes: { health: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '暂时忍耐',\r\n        '你决定先忍着，希望症状会自行好转，省下医疗费用。但这导致你的健康状况有所下降。',\r\n        createEventEffects({\r\n          attributes: { health: -1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '寻求中药调理',\r\n        '你选择购买一些中药进行调理，花费较少但效果温和。',\r\n        createEventEffects({\r\n          money: -300,\r\n          attributes: { health: 0.5 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 8\r\n    }),\r\n    true,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/health_problem.jpg'\r\n  ),\r\n  \r\n  // --- 地点事件 ---\r\n  createEvent(\r\n    'market_raid',\r\n    '黑市突袭',\r\n    '警方突然突袭了地下黑市！所有人都在慌乱中逃窜，你需要快速做出决定。',\r\n    [\r\n      createEventOption(\r\n        '迅速离开',\r\n        '你迅速逃离了现场，虽然没能完成交易，但避免了不必要的麻烦。',\r\n        createEventEffects({ \r\n          forceLocationChange: true,\r\n          targetLocation: 'commodity_market'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '冒险完成交易',\r\n        '你冒险留下来完成交易，获得了低价商品，但差点被执法人员抓住。',\r\n        createEventEffects({ \r\n          market: { \r\n            globalPriceModifier: 0.6, \r\n            duration: 1\r\n          },\r\n          attributes: { businessSkill: 1, risk_tolerance: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({ \r\n      locations: ['black_market'],\r\n      probability: 0.25\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1.5,\r\n    '/assets/images/events/market_raid.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'celebrity_appearance',\r\n    '名人现身',\r\n    '一位知名明星在高端商城现身购物，引起一阵轰动。人流激增，商家纷纷调高价格。',\r\n    [\r\n      createEventOption(\r\n        '趁机提高售价',\r\n        '你抓住机会在附近设摊，以略高的价格出售商品，赚了一笔。',\r\n        createEventEffects({ \r\n          money: 1500,\r\n          market: { \r\n            globalPriceModifier: 1.2, \r\n            duration: 1\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '尝试接近名人',\r\n        '你试图接近名人获取合影，结果不小心被保安推搡，手机摔坏了。',\r\n        createEventEffects({\r\n          money: -500\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({ \r\n      locations: ['premium_mall'],\r\n      probability: 0.2\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1,\r\n    '/assets/images/events/celebrity.jpg'\r\n  ),\r\n  \r\n  // --- 债务相关事件 ---\r\n  createEvent(\r\n    'debt_relief',\r\n    '债务减免',\r\n    '银行推出了债务重组计划，你收到了参与机会。这可能是减轻债务负担的好机会。',\r\n    [\r\n      createEventOption(\r\n        '申请参与',\r\n        '你成功申请了债务减免计划，债务减少了20%。',\r\n        createEventEffects({ \r\n          debt: -0.2 // 债务减少20%（负数表示减少）\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '放弃机会',\r\n        '你认为这可能有隐藏条款，决定放弃这个机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({ \r\n      minWeek: 15,\r\n      playerDebt: { min: 5000 }, // 债务超过5000才会触发\r\n      probability: 0.3\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/debt_relief.jpg'\r\n  ),\r\n  \r\n  // --- 商品相关事件 ---\r\n  createEvent(\r\n    'electronics_discount',\r\n    '电子产品促销',\r\n    '电子产品市场推出大规模促销活动，价格大幅下降！这是囤积电子产品的好时机。',\r\n    [\r\n      createEventOption(\r\n        '购买电子产品',\r\n        '你趁机购买了一些电子产品，价格比平时便宜很多。',\r\n        createEventEffects({\r\n          market: { \r\n            categoryModifier: 'ELECTRONICS', \r\n            modifier: 0.7,\r\n            duration: 2\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '不感兴趣',\r\n        '你对电子产品不感兴趣，决定忽略这次促销。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 5\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/electronics_sale.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'luxury_tax',\r\n    '奢侈品征税',\r\n    '政府宣布对奢侈品征收额外税费，导致奢侈品价格全面上涨。',\r\n    [\r\n      createEventOption(\r\n        '提前囤货',\r\n        '你决定在税收政策实施前囤积一些奢侈品，以备后续高价出售。',\r\n        createEventEffects({\r\n          market: { \r\n            categoryModifier: 'LUXURY', \r\n            modifier: 1.1,  // 先小幅上涨\r\n            duration: 1\r\n          },\r\n          nextEvent: 'luxury_tax_aftermath'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '观望市场',\r\n        '你决定等待看看市场如何反应，避免做出冒险决策。',\r\n        createEventEffects({\r\n          market: { \r\n            categoryModifier: 'LUXURY', \r\n            modifier: 1.3,  // 直接大幅上涨\r\n            duration: 4\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 12,\r\n      excludedEvents: ['luxury_tax', 'luxury_tax_aftermath']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/luxury_tax.jpg'\r\n  ),\r\n  \r\n  // 连锁事件：奢侈品税收政策后续\r\n  createEvent(\r\n    'luxury_tax_aftermath',\r\n    '奢侈品价格飙升',\r\n    '奢侈品征税政策正式实施，市场价格如预期般大幅上涨。你之前的准备是否充分？',\r\n    [\r\n      createEventOption(\r\n        '高价出售囤货',\r\n        '你将之前囤积的奢侈品以高价出售，获得了可观利润。',\r\n        createEventEffects({\r\n          money: 3000,\r\n          market: { \r\n            categoryModifier: 'LUXURY', \r\n            modifier: 1.4,\r\n            duration: 3\r\n          }\r\n        }),\r\n        (gameState) => {\r\n          // 检查背包中是否有奢侈品\r\n          return gameState.player.inventory.some(item => {\r\n            const product = gameState.products.find(p => p.id === item.productId);\r\n            return product && product.category === 'LUXURY';\r\n          });\r\n        }\r\n      ),\r\n      createEventOption(\r\n        '继续持有',\r\n        '你认为价格还会进一步上涨，决定继续持有囤积的商品。',\r\n        createEventEffects({\r\n          market: { \r\n            categoryModifier: 'LUXURY', \r\n            modifier: 1.3,\r\n            duration: 3\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['luxury_tax']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/luxury_price_rise.jpg'\r\n  ),\r\n  \r\n  // --- 背包容量相关事件 ---\r\n  createEvent(\r\n    'storage_expansion',\r\n    '存储空间扩展',\r\n    '你发现一个可以扩展背包容量的好机会，但需要投入一些资金。',\r\n    [\r\n      createEventOption(\r\n        '购买新背包',\r\n        '你花钱购买了一个更大的背包，提升了存储容量。',\r\n        createEventEffects({ \r\n          money: -1500,\r\n          capacity: 20 // 增加20个背包容量\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '租用仓库空间',\r\n        '你租了一个小型仓库空间，花费较低但容量提升有限。',\r\n        createEventEffects({ \r\n          money: -500,\r\n          capacity: 10\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '放弃机会',\r\n        '你认为当前容量够用，决定节约资金不进行扩展。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 10,\r\n      playerMoney: { min: 500 },\r\n      inventoryUsed: { min: 0.7 } // 背包使用率超过70%才触发\r\n    }),\r\n    true,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/storage_expansion.jpg'\r\n  ),\r\n  \r\n  // --- 教程事件 ---\r\n  createEvent(\r\n    'tutorial_trading',\r\n    '交易入门',\r\n    '欢迎来到《买房记》！在这个游戏中，你的目标是通过买卖商品赚取差价，最终积累足够的资金购买理想的房产。',\r\n    [\r\n      createEventOption(\r\n        '了解基本交易',\r\n        '你学习了基本的交易知识，明白了如何在不同地点之间买卖商品赚取差价。',\r\n        createEventEffects({\r\n          nextEvent: 'tutorial_market'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      minWeek: 1,\r\n      maxWeek: 1\r\n    }),\r\n    false,\r\n    EventType.TUTORIAL,\r\n    1,\r\n    '/assets/images/events/tutorial.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'tutorial_market',\r\n    '市场解析',\r\n    '不同地点的商品价格会有差异，同时还会随时间波动。关注价格趋势是获利的关键！',\r\n    [\r\n      createEventOption(\r\n        '继续学习',\r\n        '你了解了价格趋势系统，以及如何利用价格波动获利。',\r\n        createEventEffects({\r\n          nextEvent: 'tutorial_goal'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['tutorial_trading']\r\n    }),\r\n    false,\r\n    EventType.TUTORIAL,\r\n    1,\r\n    '/assets/images/events/tutorial_market.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'tutorial_goal',\r\n    '游戏目标',\r\n    '游戏中你有52周的时间来积累财富。最终目标是购买一套理想住房，房屋种类从便宜的小公寓到豪华别墅不等。祝你好运！',\r\n    [\r\n      createEventOption(\r\n        '开始游戏',\r\n        '你已经了解了游戏的基本规则，现在可以开始你的买房之旅了！',\r\n        createEventEffects({\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['tutorial_market']\r\n    }),\r\n    false,\r\n    EventType.TUTORIAL,\r\n    1,\r\n    '/assets/images/events/tutorial_goal.jpg'\r\n  ),\r\n  \r\n  // --- 新增个人事件 ---\r\n  createEvent(\r\n    'unexpected_inheritance',\r\n    '意外继承',\r\n    '你收到一份律师函，一位远房亲戚去世后将一笔资金留给了你。这是个意外之喜！',\r\n    [\r\n      createEventOption(\r\n        '接受继承',\r\n        '你接受了这笔意外之财，获得了一笔可观的资金。',\r\n        createEventEffects({\r\n          money: 5000,\r\n          attributes: { happiness: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '捐赠一部分',\r\n        '你决定将一部分继承的钱捐给慈善机构，感觉心情舒畅。',\r\n        createEventEffects({\r\n          money: 3500,\r\n          attributes: { happiness: 2, reputation: 2 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.05, // 较低概率\r\n      minWeek: 15\r\n    }),\r\n    false, // 不可重复\r\n    EventType.PERSONAL,\r\n    0.8,\r\n    '/assets/images/events/inheritance.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'business_training',\r\n    '商业培训',\r\n    '你发现一个商业技能培训班的广告，参加可能会提升你的交易能力，但需要付出一定费用和时间。',\r\n    [\r\n      createEventOption(\r\n        '参加培训',\r\n        '你投入时间和金钱参加了培训，商业技能得到了提升。',\r\n        createEventEffects({\r\n          money: -1000,\r\n          attributes: { businessSkill: 2 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '自学商业知识',\r\n        '你决定通过书籍和网络自学商业知识，花费较少但效果有限。',\r\n        createEventEffects({\r\n          money: -200,\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '忽略这个机会',\r\n        '你认为实践出真知，决定把时间和金钱用在实际交易上。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 4,\r\n      playerMoney: { min: 1000 }\r\n    }),\r\n    true, // 可重复，但间隔较长\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/business_training.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'social_networking',\r\n    '社交机会',\r\n    '你被邀请参加一个商业人士的社交聚会，这可能是结识人脉、获取信息的好机会。',\r\n    [\r\n      createEventOption(\r\n        '积极参与',\r\n        '你在聚会上积极社交，结识了几位有价值的商业伙伴，获得了一些市场内幕。',\r\n        createEventEffects({\r\n          money: -300, // 支付参加费用\r\n          attributes: { socialSkill: 1, businessSkill: 0.5 },\r\n          market: { insiderInfo: true, duration: 2 } // 获得2周的市场内幕信息\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '简单出席',\r\n        '你低调地参加了聚会，没有特别的收获，但也开阔了眼界。',\r\n        createEventEffects({\r\n          money: -300,\r\n          attributes: { socialSkill: 0.5 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '婉拒邀请',\r\n        '你因为忙于其他事务婉拒了邀请，错过了这次社交机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.12,\r\n      minWeek: 8,\r\n      playerMoney: { min: 300 }\r\n    }),\r\n    true,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/social_networking.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'investment_opportunity',\r\n    '投资机会',\r\n    '一个朋友向你推荐了一个小型创业公司的投资机会，声称有高回报，但风险未知。',\r\n    [\r\n      createEventOption(\r\n        '大笔投资',\r\n        '你决定投入一大笔资金，希望获得高回报。',\r\n        createEventEffects({\r\n          money: -4000,\r\n          nextEvent: 'investment_result_big'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '小额投资',\r\n        '你谨慎地投入一小笔资金，降低可能的风险。',\r\n        createEventEffects({\r\n          money: -1500,\r\n          nextEvent: 'investment_result_small'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '拒绝投资',\r\n        '你对这个机会持怀疑态度，决定不冒险投资。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 20,\r\n      playerMoney: { min: 4000 }\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/investment_opportunity.jpg'\r\n  ),\r\n  \r\n  // 投资结果事件（大额）\r\n  createEvent(\r\n    'investment_result_big',\r\n    '投资结果',\r\n    '几周后，你投资的创业公司有了新进展...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你满怀期待地查看投资结果...',\r\n        createEventEffects({\r\n          // 70%概率成功，30%概率失败\r\n          money: Math.random() > 0.3 ? 8000 : -2000,\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['investment_opportunity']\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/investment_result.jpg'\r\n  ),\r\n  \r\n  // 投资结果事件（小额）\r\n  createEvent(\r\n    'investment_result_small',\r\n    '投资结果',\r\n    '几周后，你投资的创业公司有了新进展...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你满怀期待地查看投资结果...',\r\n        createEventEffects({\r\n          // 80%概率小赚，20%概率小亏\r\n          money: Math.random() > 0.2 ? 2500 : -500,\r\n          attributes: { businessSkill: 0.5 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['investment_opportunity']\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/investment_result.jpg'\r\n  ),\r\n  \r\n  // --- 新增市场事件 ---\r\n  createEvent(\r\n    'clothing_fashion_trend',\r\n    '时尚潮流',\r\n    '一股新的时尚潮流席卷全城，服装类产品的需求突然增加！',\r\n    [\r\n      createEventOption(\r\n        '囤积服装类商品',\r\n        '你预见到这是一个商机，决定大量购入服装类商品。',\r\n        createEventEffects({\r\n          market: {\r\n            categoryModifier: 'CLOTHING',\r\n            modifier: 1.3,\r\n            duration: 3\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '观望市场变化',\r\n        '你对时尚潮流持观望态度，决定继续关注市场变化再做决定。',\r\n        createEventEffects({})\r\n      ),\r\n      createEventOption(\r\n        '出售现有服装库存',\r\n        '你决定趁机出售手中的服装类商品，获得一定利润。',\r\n        createEventEffects({\r\n          money: 800\r\n        }),\r\n        (gameState) => {\r\n          // 检查背包中是否有服装类商品\r\n          return gameState.player.inventory.some(item => {\r\n            const product = gameState.products.find(p => p.id === item.productId);\r\n            return product && product.category === 'CLOTHING';\r\n          });\r\n        }\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 4\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/fashion_trend.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'food_shortage',\r\n    '食品短缺',\r\n    '由于恶劣天气影响，市场上出现了食品短缺的情况，价格开始上涨。',\r\n    [\r\n      createEventOption(\r\n        '大量购入食品',\r\n        '你预计价格会进一步上涨，决定趁现在大量购入食品类商品。',\r\n        createEventEffects({\r\n          market: {\r\n            categoryModifiers: {\r\n              'FOOD': 1.4  // 修正格式，categoryModifier改为categoryModifiers对象\r\n            },\r\n            productModifiers: {\r\n              '201': 1.6,  // 鸡蛋价格上涨60%\r\n              '202': 1.5,  // 大米价格上涨50%\r\n              '204': 1.7   // 新鲜蔬菜价格上涨70%\r\n            },\r\n            duration: 4\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '寻找替代食品来源',\r\n        '你开始寻找替代的食品来源，避免受到价格波动的影响。',\r\n        createEventEffects({\r\n          market: {\r\n            categoryModifiers: {\r\n              'FOOD': 1.2  // 修正格式，categoryModifier改为categoryModifiers对象\r\n            },\r\n            productModifiers: {\r\n              '201': 1.3,  // 鸡蛋价格上涨30%\r\n              '202': 1.25  // 大米价格上涨25%\r\n            },\r\n            duration: 2\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.12,\r\n      minWeek: 8,\r\n      excludedEvents: ['food_shortage']\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/food_shortage.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'tech_innovation',\r\n    '科技创新',\r\n    '一项突破性的科技创新引起了市场关注，相关电子产品需求激增。',\r\n    [\r\n      createEventOption(\r\n        '投资科技产品',\r\n        '你决定购入一批最新的科技产品，希望能够获得高额利润。',\r\n        createEventEffects({\r\n          market: {\r\n            categoryModifiers: {\r\n              'ELECTRONICS': 1.25 // 修正格式，categoryModifier改为categoryModifiers对象\r\n            },\r\n            productModifiers: {\r\n              '301': 1.4,   // 手机价格上涨40%\r\n              '303': 1.35,  // 笔记本电脑价格上涨35%\r\n              '305': 1.45   // 智能手表价格上涨45%\r\n            },\r\n            locationModifiers: {\r\n              'electronics_hub': 1.15 // 电子科技城整体价格上涨15%\r\n            },\r\n            duration: 3\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '继续关注传统产品',\r\n        '你认为科技创新只是短期效应，决定继续专注于传统产品。',\r\n        createEventEffects({\r\n          market: {\r\n            // 即使不选择投资，市场也会受到一些影响\r\n            productModifiers: {\r\n              '301': 1.2,  // 手机价格仍然上涨20%\r\n              '305': 1.25  // 智能手表价格上涨25%\r\n            },\r\n            duration: 2\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 6\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/tech_innovation.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'supply_chain_disruption',\r\n    '供应链中断',\r\n    '全球供应链出现严重中断，多种商品的供应受到影响，价格开始波动。',\r\n    [\r\n      createEventOption(\r\n        '囤积受影响商品',\r\n        '你决定趁价格还未大幅上涨前，囤积一批受影响的商品。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 1.15,\r\n            duration: 5 // 更新为周数格式，5周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '转向本地产品',\r\n        '你决定转向采购本地生产的商品，减少对全球供应链的依赖。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 1.1,\r\n            duration: 3 // 更新为周数格式，3周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '延迟采购计划',\r\n        '你决定暂时延迟采购计划，等待供应链恢复正常。',\r\n        createEventEffects({\r\n          nextEvent: 'supply_chain_recovery'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 15\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1.2,\r\n    '/assets/images/events/supply_chain.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'supply_chain_recovery',\r\n    '全球供应链逐步恢复',\r\n    '经过一段时间的调整，全球供应链开始逐步恢复，但不同地区和商品的恢复速度存在显著差异。',\r\n    [\r\n      createEventOption(\r\n        '把握恢复机会',\r\n        '你分析了市场恢复趋势，决定有选择地投资于价格开始恢复正常的商品。',\r\n        createEventEffects({\r\n          market: {\r\n            // 全球市场逐渐回归正常\r\n            globalPriceModifier: 0.95, // 全局价格轻微下调，回归正常\r\n            // 不同地区恢复情况不同\r\n            locationModifiers: {\r\n              'commodity_market': 0.9, // 大宗商品市场恢复较快\r\n              'electronics_hub': 1.1,  // 电子市场恢复较慢\r\n              'black_market': 0.85     // 黑市价格大幅回落\r\n            },\r\n            // 特定商品恢复情况\r\n            locationProductModifiers: {\r\n              'commodity_market': {\r\n                '202': 0.85, // 大米价格回落\r\n                '203': 0.9   // 食用油价格轻微回落\r\n              },\r\n              'electronics_hub': {\r\n                '301': 1.2,  // 手机价格回升\r\n                '305': 1.15  // 智能手表价格小幅回升\r\n              },\r\n              'black_market': {\r\n                '502': 0.7,  // 邮票价格大幅回落\r\n                '503': 0.75  // 古画价格大幅回落\r\n              }\r\n            },\r\n            duration: 3 // 持续3周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '稳健策略',\r\n        '你决定采取稳健策略，平衡调整你的库存和交易计划。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 0.98,\r\n            locationModifiers: {\r\n              'commodity_market': 0.95,\r\n              'premium_mall': 0.95,\r\n              'second_hand_market': 0.95\r\n            },\r\n            duration: 2 // 持续2周\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['supply_chain_disruption', 'old_supply_chain_disruption'] // 支持新旧两个版本的事件触发\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/supply_recovery.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'seasonal_sales',\r\n    '季节性促销',\r\n    '年度大促销活动开始了，各大商家纷纷降价吸引顾客。这是囤货的好时机！',\r\n    [\r\n      createEventOption(\r\n        '大量采购',\r\n        '你决定利用促销活动大量采购各类商品，为未来的销售做准备。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 0.75,\r\n            duration: 2\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '选择性采购',\r\n        '你有选择地购买一些特价商品，避免资金过度占用。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 0.85,\r\n            duration: 1\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '跳过促销',\r\n        '你认为促销商品质量可能不高，决定跳过这次活动。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.2,\r\n      minWeek: 12,\r\n      maxWeek: 40 // 避免游戏后期触发\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/seasonal_sales.jpg'\r\n  ),\r\n  \r\n  // --- 新增地点特定事件 ---\r\n  createEvent(\r\n    'market_discount',\r\n    '大宗交易优惠',\r\n    '大宗商品交易所今天推出特别优惠，所有商品都有额外折扣！',\r\n    [\r\n      createEventOption(\r\n        '大量采购',\r\n        '你决定利用这个机会大量采购各类商品，为未来的销售做准备。',\r\n        createEventEffects({\r\n          market: {\r\n            locationModifiers: {\r\n              'commodity_market': 0.8 // 大宗商品交易所整体降价20%\r\n            },\r\n            categoryModifiers: {\r\n              'FOOD': 0.75, // 食品类降价25%\r\n              'DAILY': 0.7  // 日用品降价30%\r\n            },\r\n            productModifiers: {\r\n              '201': 0.6,  // 鸡蛋降价40%\r\n              '202': 0.65, // 大米降价35%\r\n              '101': 0.6   // 卫生纸降价40%\r\n            },\r\n            duration: 1\r\n          },\r\n          forceLocationChange: true,\r\n          targetLocation: 'commodity_market'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '有选择地购买',\r\n        '你仔细挑选，只购买那些真正划算的商品。',\r\n        createEventEffects({\r\n          market: {\r\n            locationModifiers: {\r\n              'commodity_market': 0.9 // 大宗商品交易所整体降价10%\r\n            },\r\n            productModifiers: {\r\n              '202': 0.7, // 大米降价30%\r\n              '203': 0.75 // 食用油降价25%\r\n            },\r\n            duration: 1\r\n          },\r\n          forceLocationChange: true,\r\n          targetLocation: 'commodity_market'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '放弃此次机会',\r\n        '你觉得价格优惠幅度不够大，决定不参与此次优惠活动。',\r\n        createEventEffects({\r\n          market: {\r\n            // 即使不参与，市场价格也会有轻微变动\r\n            locationModifiers: {\r\n              'commodity_market': 0.95 // 大宗商品交易所整体轻微降价5%\r\n            },\r\n            duration: 1\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      locations: ['commodity_market'],\r\n      probability: 0.25\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1,\r\n    '/assets/images/events/wholesale_discount.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'mall_event',\r\n    '商城名人活动',\r\n    '高端商城举办了一场名人见面会，吸引了大量人流。商场内的商品价格临时上调。',\r\n    [\r\n      createEventOption(\r\n        '趁机设摊销售',\r\n        '你在商城外设置临时摊位，利用人流量增加销售额。',\r\n        createEventEffects({\r\n          money: 1200,\r\n          inventory: [\r\n            { productId: 'random', quantity: -5 } // 随机消耗5个库存商品\r\n          ]\r\n        }),\r\n        (gameState) => gameState.player.inventoryUsed >= 5\r\n      ),\r\n      createEventOption(\r\n        '避开人群',\r\n        '你决定避开拥挤的人群，改天再来购物。',\r\n        createEventEffects({\r\n          forceLocationChange: true\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      locations: ['premium_mall'],\r\n      probability: 0.2\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1,\r\n    '/assets/images/events/mall_celebrity.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'electronics_expo',\r\n    '电子科技城展销会',\r\n    '电子科技城举办大型数码产品展销会，最新款手机和智能手表都有特别优惠！这是采购电子产品的绝佳时机。',\r\n    [\r\n      createEventOption(\r\n        '参观展会',\r\n        '你花费一些时间参观展销会，了解最新的科技趋势。',\r\n        createEventEffects({\r\n          money: -100,\r\n          market: {\r\n            // 展会期间电子科技城整体小幅降价\r\n            locationModifiers: {\r\n              'electronics_hub': 0.95\r\n            },\r\n            duration: 1 // 持续1周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '采购特价电子产品',\r\n        '你决定投资购买展会上的特价手机和智能手表，期望能在价格上涨前转售获利。',\r\n        createEventEffects({\r\n          money: -2000,\r\n          market: {\r\n            // 针对电子科技城的特定产品大幅优惠\r\n            locationProductModifiers: {\r\n              'electronics_hub': {\r\n                '301': 0.7, // 手机降价30%\r\n                '305': 0.75 // 智能手表降价25%\r\n              }\r\n            },\r\n            duration: 2 // 持续2周\r\n          }\r\n        }),\r\n        (gameState) => gameState.player.money >= 2000\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      locations: ['electronics_hub'], // 只在电子科技城触发\r\n      probability: 0.3\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1,\r\n    '/assets/images/events/electronics_expo.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'market_inspection',\r\n    '市场检查',\r\n    '市场管理人员突然来到折扣市场进行检查，查验摊位合规性！你需要快速决定如何应对。',\r\n    [\r\n      createEventOption(\r\n        '配合检查',\r\n        '你主动配合检查，展示自己的合规经营，获得了管理人员的好感。',\r\n        createEventEffects({\r\n          money: -50, // 小额罚款或管理费\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '暂时离场',\r\n        '你决定暂时收摊离场，避开这次检查，但损失了一天的生意。',\r\n        createEventEffects({\r\n          money: -300,\r\n          attributes: { businessSkill: -1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      locations: ['discount_market'],\r\n      probability: 0.25\r\n    }),\r\n    true,\r\n    EventType.LOCATION,\r\n    1,\r\n    '/assets/images/events/market_inspection.jpg'\r\n  ),\r\n  \r\n  // --- 特殊事件 ---\r\n  createEvent(\r\n    'business_competition',\r\n    '商业竞赛',\r\n    '当地举办了一场商业技能竞赛，测试参赛者的商业头脑和决策能力。这可能是展示你实力的好机会！',\r\n    [\r\n      createEventOption(\r\n        '全力参赛',\r\n        '你决定全力以赴参加比赛，希望能获得好名次。',\r\n        createEventEffects({\r\n          // 根据玩家商业技能决定结果\r\n          money: (gameState) => {\r\n            const businessSkill = gameState.player.attributes.businessSkill || 0;\r\n            if (businessSkill >= 8) return 5000;  // 高技能获得一等奖\r\n            if (businessSkill >= 5) return 2000;  // 中等技能获得二等奖\r\n            if (businessSkill >= 3) return 500;   // 低技能获得参与奖\r\n            return 0;  // 无技能无奖励\r\n          },\r\n          attributes: { businessSkill: 1, reputation: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '随便参与',\r\n        '你抱着学习的态度参加比赛，不期望获奖。',\r\n        createEventEffects({\r\n          money: 200, // 参与奖\r\n          attributes: { businessSkill: 0.5 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '放弃参赛',\r\n        '你认为自己还没准备好，决定放弃这次比赛机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.08,\r\n      minWeek: 25\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/business_competition.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'market_insider_info',\r\n    '内幕消息',\r\n    '你的一个朋友透露给你一个市场内幕消息，暗示某类商品即将大涨价。这可能是一个发财的好机会！',\r\n    [\r\n      createEventOption(\r\n        '相信消息并行动',\r\n        '你相信这个内幕消息，决定投入大量资金购买相关商品。',\r\n        createEventEffects({\r\n          nextEvent: 'insider_info_result'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '小规模试水',\r\n        '你不确定消息的可靠性，决定小规模投资以降低风险。',\r\n        createEventEffects({\r\n          nextEvent: 'insider_info_result_small'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '忽略消息',\r\n        '你对这种内幕消息持怀疑态度，决定不采取任何行动。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 15,\r\n      playerMoney: { min: 3000 }\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/insider_info.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'insider_info_result',\r\n    '内幕消息结果',\r\n    '一周后，你等待看到内幕消息的结果...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你满怀期待地查看市场变化。',\r\n        createEventEffects({\r\n          // 70%概率是真消息，30%概率是假消息\r\n          market: Math.random() > 0.3 ? \r\n            {\r\n              categoryModifier: ['LUXURY', 'ELECTRONICS', 'CLOTHING'][Math.floor(Math.random() * 3)],\r\n              modifier: 1.8,\r\n              duration: 2\r\n            } : \r\n            {\r\n              globalPriceModifier: 0.9,\r\n              duration: 1\r\n            }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['market_insider_info']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/insider_result.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'insider_info_result_small',\r\n    '内幕消息小规模试水结果',\r\n    '一周后，你等待看到内幕消息的结果...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你查看小规模投资的结果。',\r\n        createEventEffects({\r\n          // 70%概率是真消息，30%概率是假消息，但影响较小\r\n          market: Math.random() > 0.3 ? \r\n            {\r\n              categoryModifier: ['LUXURY', 'ELECTRONICS', 'CLOTHING'][Math.floor(Math.random() * 3)],\r\n              modifier: 1.5,\r\n              duration: 1\r\n            } : \r\n            {\r\n              globalPriceModifier: 0.95,\r\n              duration: 1\r\n            }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['market_insider_info']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/insider_result.jpg'\r\n  ),\r\n  \r\n  // --- 故事事件和游戏后期事件 ---\r\n  createEvent(\r\n    'real_estate_opportunity',\r\n    '房产机会',\r\n    '你偶然听说有一处房产即将以低于市场价的价格出售，这可能是一个难得的买房机会。',\r\n    [\r\n      createEventOption(\r\n        '立即考察',\r\n        '你决定立即去考察这处房产，看看是否值得购买。',\r\n        createEventEffects({\r\n          nextEvent: 'real_estate_inspection'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '咨询专业人士',\r\n        '你决定先咨询一位房产专家，获取专业意见。',\r\n        createEventEffects({\r\n          money: -500,\r\n          nextEvent: 'real_estate_expert_advice'\r\n        }),\r\n        (gameState) => gameState.player.money >= 500\r\n      ),\r\n      createEventOption(\r\n        '忽略这个消息',\r\n        '你认为目前还没有准备好购房，决定忽略这个消息。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 30,\r\n      playerMoney: { min: 50000 } // 确保玩家有一定资金\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/real_estate_opportunity.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'real_estate_inspection',\r\n    '房产考察',\r\n    '你仔细考察了这处房产，发现它确实低于市场价，但需要一些维修。',\r\n    [\r\n      createEventOption(\r\n        '以优惠价购买',\r\n        '你决定抓住这个机会，以优惠价格购买这处房产。',\r\n        createEventEffects({\r\n          money: -60000,\r\n          attributes: { housingValue: 80000 } // 房产实际价值\r\n        }),\r\n        (gameState) => gameState.player.money >= 60000\r\n      ),\r\n      createEventOption(\r\n        '继续等待更好的机会',\r\n        '你认为这处房产不够完美，决定继续等待更好的机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['real_estate_opportunity']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/real_estate_inspection.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'real_estate_expert_advice',\r\n    '专家建议',\r\n    '房产专家仔细分析后告诉你，这处房产位置很好，但维修成本可能比预期高。',\r\n    [\r\n      createEventOption(\r\n        '接受建议并购买',\r\n        '你接受专家建议并决定购买这处房产，同时为维修预留资金。',\r\n        createEventEffects({\r\n          money: -65000, // 房价加专家费\r\n          attributes: { housingValue: 85000 } // 房产实际价值\r\n        }),\r\n        (gameState) => gameState.player.money >= 65000\r\n      ),\r\n      createEventOption(\r\n        '放弃这次机会',\r\n        '专家的分析让你意识到风险，你决定放弃这次购房机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['real_estate_opportunity']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/real_estate_expert.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'housing_market_boom',\r\n    '房市繁荣',\r\n    '最近房地产市场异常火爆，房价普遍上涨。现在可能是购房或出售现有房产的好时机。',\r\n    [\r\n      createEventOption(\r\n        '抓紧购房',\r\n        '你认为房价还会继续上涨，决定趁现在抓紧购房。',\r\n        createEventEffects({\r\n          market: {\r\n            houseMarketModifier: 1.1, // 房价上涨10%\r\n            duration: 4\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '出售现有房产',\r\n        '你决定趁房价高点出售现有房产，获得可观利润。',\r\n        createEventEffects({\r\n          money: (gameState) => {\r\n            // 如果玩家有房产，则获得额外15%收益\r\n            const housingValue = gameState.player.attributes.housingValue || 0;\r\n            return housingValue * 1.15;\r\n          },\r\n          attributes: { housingValue: 0 } // 出售后没有房产\r\n        }),\r\n        (gameState) => gameState.player.attributes.housingValue > 0\r\n      ),\r\n      createEventOption(\r\n        '观望市场',\r\n        '你认为目前房价过高，可能是泡沫，决定继续观望。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 35\r\n    }),\r\n    true,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/housing_boom.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'housing_market_crash',\r\n    '房市崩盘',\r\n    '突发经济危机导致房地产市场急剧降温，房价开始下跌。这可能是低价购入的机会，也可能带来风险。',\r\n    [\r\n      createEventOption(\r\n        '逆势购房',\r\n        '你认为这是难得的低价购房机会，决定逆势而上。',\r\n        createEventEffects({\r\n          market: {\r\n            houseMarketModifier: 0.8, // 房价下降20%\r\n            duration: 3\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '观望市场',\r\n        '你决定等待市场进一步稳定后再做决定。',\r\n        createEventEffects({\r\n          market: {\r\n            houseMarketModifier: 0.85, // 房价下降15%\r\n            duration: 2\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.08,\r\n      minWeek: 40,\r\n      excludedEvents: ['housing_market_boom']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/housing_crash.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'business_partner_proposal',\r\n    '商业合作提议',\r\n    '一位经验丰富的商人提议与你合作开展更大规模的贸易，但需要你投入一笔资金作为启动资本。',\r\n    [\r\n      createEventOption(\r\n        '接受合作',\r\n        '你决定与这位商人合作，投入一笔资金开展大规模贸易。',\r\n        createEventEffects({\r\n          money: -10000,\r\n          nextEvent: 'business_partnership_result'\r\n        }),\r\n        (gameState) => gameState.player.money >= 10000\r\n      ),\r\n      createEventOption(\r\n        '小规模试水',\r\n        '你对合作持谨慎态度，决定先小规模投资测试。',\r\n        createEventEffects({\r\n          money: -3000,\r\n          nextEvent: 'business_partnership_small_result'\r\n        }),\r\n        (gameState) => gameState.player.money >= 3000\r\n      ),\r\n      createEventOption(\r\n        '拒绝合作',\r\n        '你对这个合作提议持怀疑态度，决定婉拒。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.1,\r\n      minWeek: 30,\r\n      playerMoney: { min: 10000 },\r\n      attributes: { businessSkill: { min: 5 } }\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/business_partner.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'business_partnership_result',\r\n    '商业合作结果',\r\n    '几周过去了，你与商业伙伴的合作项目有了结果...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你期待地查看合作的成果。',\r\n        createEventEffects({\r\n          // 根据玩家的商业技能决定回报\r\n          money: (gameState) => {\r\n            const businessSkill = gameState.player.attributes.businessSkill || 0;\r\n            const baseReturn = 15000; // 基础回报\r\n            const skillBonus = businessSkill * 1000; // 技能加成\r\n            return baseReturn + skillBonus;\r\n          },\r\n          attributes: { businessSkill: 2 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['business_partner_proposal']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/partnership_result.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'business_partnership_small_result',\r\n    '小规模合作结果',\r\n    '几周过去了，你的小规模合作项目有了结果...',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        '你查看小规模合作的成果。',\r\n        createEventEffects({\r\n          // 较小规模的回报\r\n          money: (gameState) => {\r\n            const businessSkill = gameState.player.attributes.businessSkill || 0;\r\n            const baseReturn = 4500; // 基础回报\r\n            const skillBonus = businessSkill * 300; // 技能加成\r\n            return baseReturn + skillBonus;\r\n          },\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['business_partner_proposal']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/partnership_result.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'final_opportunity',\r\n    '最终机会',\r\n    '游戏接近尾声，市场出现了一次难得的价格波动，这可能是你最后的发财机会！',\r\n    [\r\n      createEventOption(\r\n        '全力投入',\r\n        '你决定将大部分资金投入到这次机会中，希望能实现最后的翻盘。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 0.6, // 商品价格大幅下降\r\n            duration: 1\r\n          },\r\n          nextEvent: 'final_market_surge'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '谨慎投资',\r\n        '你决定谨慎投资，避免在最后关头冒过大风险。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 0.8,\r\n            duration: 1\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      minWeek: 45, // 接近游戏结束\r\n      probability: 0.5 // 高概率触发\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    2,\r\n    '/assets/images/events/final_opportunity.jpg'\r\n  ),\r\n  \r\n  createEvent(\r\n    'final_market_surge',\r\n    '最终市场大涨',\r\n    '就在游戏即将结束前，市场出现了戏剧性的价格上涨！这是最后的变现机会。',\r\n    [\r\n      createEventOption(\r\n        '全部卖出',\r\n        '你决定趁这次价格上涨全部卖出库存，最大化你的利润。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 2.0, // 价格翻倍\r\n            duration: 1\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '部分卖出',\r\n        '你决定卖出部分库存，保留一些以防后市继续上涨。',\r\n        createEventEffects({\r\n          market: {\r\n            globalPriceModifier: 1.7, // 价格上涨但幅度较小\r\n            duration: 1\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['final_opportunity'],\r\n      minWeek: 48 // 游戏最后几周\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/market_surge.jpg'\r\n  ),\r\n  \r\n  // --- 特殊彩蛋事件已移除 ---\r\n\r\n  // ============ 房产连锁事件系列 ============\r\n  \r\n  // 1. 房产展览会事件链\r\n  createEvent(\r\n    'property_expo',\r\n    '房产展览会',\r\n    '城市中心正在举办一场大型房产展览会，各个开发商都带来了他们最新的楼盘项目。这是了解市场动态和获取优惠信息的好机会。',\r\n    [\r\n      createEventOption(\r\n        '参观展览会',\r\n        '你决定花时间参观房产展览会，了解市场最新动态。',\r\n        createEventEffects({\r\n          money: -200, // 门票和交通费用\r\n          nextEvent: 'property_expo_discover'\r\n        }),\r\n        (gameState) => gameState.player.money >= 200\r\n      ),\r\n      createEventOption(\r\n        '与中介交谈',\r\n        '你决定只与几位房产中介交谈，不花太多时间。',\r\n        createEventEffects({\r\n          nextEvent: 'property_broker_info'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '忽略这个活动',\r\n        '你现在没有购房计划，决定忽略这次展览会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.15,\r\n      minWeek: 15, // 游戏中期才会触发\r\n      playerMoney: { min: 30000 } // 确保玩家有一定资金才会触发\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/property_expo.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_expo_discover',\r\n    '展会发现',\r\n    '在展览会上，你发现一个正在预售的新楼盘，开发商提供了独特的折扣方案。销售人员告诉你，如果现在预订，可以获得比市场价低15%的优惠。',\r\n    [\r\n      createEventOption(\r\n        '预付定金',\r\n        '你决定抓住这个机会，预付10%的定金锁定这个优惠。',\r\n        createEventEffects({\r\n          money: (gameState) => -10000, // 假设定金是10000\r\n          nextEvent: 'property_investment_result'\r\n        }),\r\n        (gameState) => gameState.player.money >= 10000\r\n      ),\r\n      createEventOption(\r\n        '记录信息',\r\n        '你记下了这个楼盘的信息，但决定先不付定金，回去再考虑。',\r\n        createEventEffects({\r\n          nextEvent: 'property_later_decision'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '寻找其他机会',\r\n        '你对这个楼盘不太感兴趣，决定继续寻找其他机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_expo']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/property_discover.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_investment_result',\r\n    '房产投资结果',\r\n    '几周后，你收到开发商的通知，你预订的楼盘项目进展顺利，已经开始正式建设。根据最新的市场评估，类似房产的价值已经上涨了。',\r\n    [\r\n      createEventOption(\r\n        '继续持有',\r\n        '你决定继续持有这项投资，期待房产完工后的升值。',\r\n        createEventEffects({\r\n          attributes: { housingInvestment: 10000, propertyValue: 100000 },\r\n          nextEvent: 'property_completion_notice'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '转让投资',\r\n        '你决定趁着市场上涨，将你的预购权转让给其他买家，获取快速利润。',\r\n        createEventEffects({\r\n          money: 13000, // 获得13000的现金（本金10000+利润3000）\r\n          attributes: { housingInvestment: 0, propertyValue: 0 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_expo_discover']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/property_investment.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_completion_notice',\r\n    '房产完工通知',\r\n    '你收到了开发商的通知，你投资的房产项目已经完工，现在价值约120,000元。你可以选择支付剩余的购房款完成购买，或者出售你的预购权。',\r\n    [\r\n      createEventOption(\r\n        '完成购买',\r\n        '你决定支付剩余的购房款，完成这处房产的购买。',\r\n        createEventEffects({\r\n          money: -90000, // 剩余购房款\r\n          attributes: { housingInvestment: 0, propertyValue: 120000, hasHouse: true },\r\n          nextEvent: 'new_house_celebration'\r\n        }),\r\n        (gameState) => gameState.player.money >= 90000\r\n      ),\r\n      createEventOption(\r\n        '出售预购权',\r\n        '你决定出售你的预购权，获取投资回报。',\r\n        createEventEffects({\r\n          money: 25000, // 获得25000的现金（大幅高于原始投资）\r\n          attributes: { housingInvestment: 0, propertyValue: 0 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '继续等待',\r\n        '你认为房产价值还会上涨，决定继续持有，但暂不付款。',\r\n        createEventEffects({\r\n          nextEvent: 'property_market_change'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_investment_result'],\r\n      minWeek: 35 // 游戏后期才会触发\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/property_completion.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_market_change',\r\n    '房产市场变化',\r\n    '由于市场条件变化，你持有的房产预购权价值出现了波动。',\r\n    [\r\n      createEventOption(\r\n        '查看市场变化',\r\n        '你密切关注市场动态，查看你的投资受到了什么影响。',\r\n        createEventEffects({\r\n          // 50%概率升值，50%概率贬值\r\n          attributes: { propertyValue: Math.random() > 0.5 ? 130000 : 110000 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_completion_notice']\r\n    }),\r\n    false,\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/market_change.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'new_house_celebration',\r\n    '新房庆祝',\r\n    '你终于拥有了自己的房产！这是人生的一个重要里程碑。朋友们提议举办一个小型聚会来庆祝这一时刻。',\r\n    [\r\n      createEventOption(\r\n        '举办庆祝派对',\r\n        '你决定举办一个庆祝派对，邀请朋友们一起分享这个喜悦时刻。',\r\n        createEventEffects({\r\n          money: -2000, // 派对费用\r\n          attributes: { happiness: 5, socialNetwork: 2 }\r\n        }),\r\n        (gameState) => gameState.player.money >= 2000\r\n      ),\r\n      createEventOption(\r\n        '简单庆祝',\r\n        '你决定简单地请几个好友吃顿饭庆祝一下。',\r\n        createEventEffects({\r\n          money: -500,\r\n          attributes: { happiness: 3 }\r\n        }),\r\n        (gameState) => gameState.player.money >= 500\r\n      ),\r\n      createEventOption(\r\n        '独自欣赏',\r\n        '你决定独自一人好好欣赏你的新家，享受这份成就感。',\r\n        createEventEffects({\r\n          attributes: { happiness: 2 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_completion_notice']\r\n    }),\r\n    false,\r\n    EventType.PERSONAL,\r\n    1,\r\n    '/assets/images/events/house_celebration.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_broker_info',\r\n    '房产中介信息',\r\n    '与房产中介交谈后，你获得了一些关于当前房市的内部信息。中介表示，某些特定区域的房产可能即将升值。',\r\n    [\r\n      createEventOption(\r\n        '深入了解',\r\n        '你决定与中介进一步交流，了解更多细节。',\r\n        createEventEffects({\r\n          money: -500, // 给中介的咨询费\r\n          nextEvent: 'property_insider_tip'\r\n        }),\r\n        (gameState) => gameState.player.money >= 500\r\n      ),\r\n      createEventOption(\r\n        '保持关注',\r\n        '你对这些信息表示感谢，但决定暂时只是保持关注。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_expo']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/broker_info.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_insider_tip',\r\n    '内部消息',\r\n    '支付咨询费后，中介向你透露了一个内部消息：城市规划部门即将宣布在某区域建设新的地铁线，这很可能导致该区域房价上涨。',\r\n    [\r\n      createEventOption(\r\n        '投资该区域房产',\r\n        '你决定相信这个消息，投资该区域的房产。',\r\n        createEventEffects({\r\n          money: -30000, // 投资成本\r\n          nextEvent: 'property_insider_result'\r\n        }),\r\n        (gameState) => gameState.player.money >= 30000\r\n      ),\r\n      createEventOption(\r\n        '谨慎观望',\r\n        '你对这个消息持谨慎态度，决定先观察一段时间。',\r\n        createEventEffects({\r\n          nextEvent: 'property_missed_opportunity'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_broker_info']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/insider_tip.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_insider_result',\r\n    '内部消息结果',\r\n    '几周后，城市规划部门果然宣布了新地铁线的建设计划，你投资的区域房产价值开始上涨！',\r\n    [\r\n      createEventOption(\r\n        '继续持有',\r\n        '你决定继续持有这项投资，期待更大的升值空间。',\r\n        createEventEffects({\r\n          attributes: { propertyValue: 45000 } // 当前估值\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '立即出售',\r\n        '你决定趁着消息公布后的价格上涨立即出售获利。',\r\n        createEventEffects({\r\n          money: 40000, // 获得40000现金（投资回报约33%）\r\n          attributes: { propertyValue: 0 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_insider_tip']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/insider_result.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_missed_opportunity',\r\n    '错失机会',\r\n    '城市规划部门宣布了新地铁线的建设计划，中介提到的区域房价果然上涨了。你有些遗憾没有把握这个投资机会。',\r\n    [\r\n      createEventOption(\r\n        '寻找新机会',\r\n        '错过了这次机会，但你决定继续寻找新的投资机会。',\r\n        createEventEffects({\r\n          nextEvent: 'property_new_opportunity'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '接受教训',\r\n        '你接受这个教训，决定以后在有内部消息时更加果断。',\r\n        createEventEffects({\r\n          attributes: { businessSkill: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_insider_tip']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/missed_opportunity.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_new_opportunity',\r\n    '新的房产机会',\r\n    '尽管错过了之前的机会，但你很快发现了另一个潜在的房产投资机会。一处位置较好但略显老旧的房产正在出售，价格相对较低。',\r\n    [\r\n      createEventOption(\r\n        '购买并翻新',\r\n        '你决定购买这处房产并进行翻新，提升其价值。',\r\n        createEventEffects({\r\n          money: -40000, // 购买和初步翻新费用\r\n          attributes: { propertyValue: 40000 },\r\n          nextEvent: 'property_renovation_results'\r\n        }),\r\n        (gameState) => gameState.player.money >= 40000\r\n      ),\r\n      createEventOption(\r\n        '仅购买不翻新',\r\n        '你决定购买这处房产，但暂不进行翻新。',\r\n        createEventEffects({\r\n          money: -35000, // 仅购买费用\r\n          attributes: { propertyValue: 35000 }\r\n        }),\r\n        (gameState) => gameState.player.money >= 35000\r\n      ),\r\n      createEventOption(\r\n        '放弃这个机会',\r\n        '经过评估，你认为这个机会风险太大，决定放弃。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_missed_opportunity']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/new_opportunity.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_renovation_results',\r\n    '房产翻新结果',\r\n    '经过一段时间的翻新，你的房产焕然一新。周边邻居和房产评估师都对你的翻新工作表示赞赏。',\r\n    [\r\n      createEventOption(\r\n        '查看房产估值',\r\n        '你请房产评估师对翻新后的房产进行正式估值。',\r\n        createEventEffects({\r\n          money: -500, // 评估费\r\n          attributes: { propertyValue: 55000 } // 翻新后的估值\r\n        }),\r\n        (gameState) => gameState.player.money >= 500\r\n      ),\r\n      createEventOption(\r\n        '挂牌出售',\r\n        '你决定将翻新后的房产立即挂牌出售。',\r\n        createEventEffects({\r\n          nextEvent: 'property_sale_result'\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '继续持有',\r\n        '你决定暂时继续持有这处房产，观察市场变化。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_new_opportunity']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/renovation_results.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_sale_result',\r\n    '房产出售结果',\r\n    '经过几周的挂牌，你的房产终于找到了买家。买家对房子的状况非常满意，愿意支付一个不错的价格。',\r\n    [\r\n      createEventOption(\r\n        '接受报价',\r\n        '你决定接受买家的报价，完成房产交易。',\r\n        createEventEffects({\r\n          money: 60000, // 卖出价格\r\n          attributes: { propertyValue: 0, businessSkill: 2 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '继续等待更高报价',\r\n        '你认为房产价值更高，决定拒绝当前报价，继续等待。',\r\n        createEventEffects({\r\n          nextEvent: 'property_price_negotiation'\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_renovation_results']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/sale_result.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_price_negotiation',\r\n    '房价谈判',\r\n    '在拒绝了第一位买家的报价后，又有新买家对你的房产表示了兴趣，双方开始了价格谈判。',\r\n    [\r\n      createEventOption(\r\n        '坚持要价',\r\n        '你坚持自己的定价，表示这是最终价格。',\r\n        createEventEffects({\r\n          // 50%几率获得更高价格，50%几率交易失败\r\n          money: Math.random() > 0.5 ? 65000 : 0,\r\n          attributes: Math.random() > 0.5 ? { propertyValue: 0, businessSkill: 3 } : { businessSkill: 1 }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '适当让步',\r\n        '你决定在价格上适当让步，以确保交易成功。',\r\n        createEventEffects({\r\n          money: 58000, // 略低于理想价格\r\n          attributes: { propertyValue: 0, businessSkill: 1 }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_sale_result']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/price_negotiation.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_later_decision',\r\n    '延迟购房决定',\r\n    '在记录了楼盘信息后，你一直在考虑是否应该投资这个项目。最近，你注意到该项目的市场反响很好，销售进展迅速。',\r\n    [\r\n      createEventOption(\r\n        '现在投资',\r\n        '你决定不再犹豫，立即投资这个项目，尽管价格已经略有上涨。',\r\n        createEventEffects({\r\n          money: -12000, // 定金已上涨\r\n          nextEvent: 'property_investment_result'\r\n        }),\r\n        (gameState) => gameState.player.money >= 12000\r\n      ),\r\n      createEventOption(\r\n        '放弃这个项目',\r\n        '你决定放弃这个项目，继续寻找其他投资机会。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['property_expo_discover']\r\n    }),\r\n    false,\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/later_decision.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'bag_expansion_opportunity',\r\n    '背包扩展机会',\r\n    '你遇到一个旅行用品店，店主正在出售一款特制的高容量背包，看起来很实用。',\r\n    [\r\n      createEventOption(\r\n        '购买高级背包',\r\n        '你购买了高级背包，现在你可以携带更多物品了。',\r\n        createEventEffects({\r\n          money: -5000, // 花费5000元\r\n          capacity: 20  // 增加20单位背包容量\r\n        }),\r\n        (gameState) => gameState.player.money >= 5000\r\n      ),\r\n      createEventOption(\r\n        '购买普通背包',\r\n        '你购买了一个普通背包，略微增加了携带容量。',\r\n        createEventEffects({\r\n          money: -2000, // 花费2000元\r\n          capacity: 10  // 增加10单位背包容量\r\n        }),\r\n        (gameState) => gameState.player.money >= 2000\r\n      ),\r\n      createEventOption(\r\n        '放弃购买',\r\n        '你决定暂时不购买新背包。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.8,\r\n      playerMoney: { min: 3000 } // 玩家至少有2000元才会触发\r\n    }),\r\n    false, // 不可重复触发\r\n    EventType.RANDOM,\r\n    2, // 高权重\r\n    '/assets/images/events/bag_expansion.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'market_price_surge',\r\n    '奢侈品与收藏品价格飙升',\r\n    '最新财经报道：随着富裕阶层消费回暖，高端商城的奢侈品和地下黑市的稀有收藏品价格大幅上涨，其中尤以名表和古董涨幅最大。',\r\n    [\r\n      createEventOption(\r\n        '调整投资策略',\r\n        '你仔细分析了价格波动趋势，决定调整你的交易策略，重点关注高端商品。',\r\n        createEventEffects({\r\n          market: {\r\n            // 全局价格小幅上涨\r\n            globalPriceModifier: 1.05,\r\n            // 特定地区价格上涨更明显\r\n            locationModifiers: {\r\n              'premium_mall': 1.15, // 高端商城整体上涨15%\r\n              'black_market': 1.2   // 地下黑市整体上涨20%\r\n            },\r\n            // 特定地区特定商品上涨最明显\r\n            locationProductModifiers: {\r\n              'premium_mall': {\r\n                '401': 1.5   // 高端商城的名表上涨50%\r\n              },\r\n              'black_market': {\r\n                '503': 1.6   // 地下黑市的古画上涨60%\r\n              }\r\n            },\r\n            // 持续两周\r\n            duration: 2 // 持续2周\r\n          }\r\n        })\r\n      ),\r\n      createEventOption(\r\n        '前往高端市场',\r\n        '你决定立即前往高端商城和地下黑市，希望能在价格进一步上涨前采购一些潜力商品。',\r\n        createEventEffects({\r\n          forceLocationChange: true,\r\n          targetLocation: 'premium_mall',\r\n          market: {\r\n            locationProductModifiers: {\r\n              'premium_mall': {\r\n                '401': 1.3   // 高端商城的名表上涨30%\r\n              },\r\n              'black_market': {\r\n                '503': 1.4   // 地下黑市的古画上涨40%\r\n              }\r\n            },\r\n            duration: 1 // 持续1周\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.3,\r\n      minWeek: 8\r\n    }),\r\n    true, // 可重复触发\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/price_surge.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'market_price_drop',\r\n    '市场价格下跌',\r\n    '全球经济出现波动，导致多个市场的商品价格出现下跌趋势。',\r\n    [\r\n      createEventOption(\r\n        '观察市场',\r\n        '你决定观察市场动向，寻找低价购入的机会。',\r\n        createEventEffects({\r\n          market: {\r\n            // 全局价格下跌15%\r\n            globalPriceModifier: 0.85,\r\n            // 持续一周\r\n            duration: 1 // 持续1周\r\n          }\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.7\r\n    }),\r\n    true, // 可重复触发\r\n    EventType.MARKET,\r\n    1,\r\n    '/assets/images/events/price_drop.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'property_investment_chance',\r\n    '房产投资机会',\r\n    '你听说一个新兴区域正在开发，现在购买房产可能会有不错的升值空间。',\r\n    [\r\n      createEventOption(\r\n        '投资房产',\r\n        '你决定投资这个新兴区域的房产项目。',\r\n        createEventEffects({\r\n          money: -30000, // 投资30000元\r\n          attributes: { \r\n            housingInvestment: 30000, // 记录房产投资\r\n            propertyValue: 30000 // 初始房产价值\r\n          },\r\n          nextEvent: 'property_investment_result' // 链接到后续事件\r\n        }),\r\n        (gameState) => gameState.player.money >= 30000\r\n      ),\r\n      createEventOption(\r\n        '谨慎观望',\r\n        '你觉得目前时机不成熟，决定继续观望。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      minWeek: 10, // 至少游戏进行10周后才会触发\r\n      playerMoney: { min: 30000 } // 玩家资金至少30000元\r\n    }),\r\n    false, // 不可重复触发\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/property_investment.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'financial_advisor',\r\n    '理财顾问',\r\n    '你遇到了一位专业的理财顾问，他愿意为你提供一些投资建议。',\r\n    [\r\n      createEventOption(\r\n        '咨询建议',\r\n        '你支付咨询费，获得了一些关于当前市场的专业建议。',\r\n        createEventEffects({\r\n          money: -1000, // 咨询费\r\n          // 某些商品价格信息会更准确\r\n          market: {\r\n            productModifiers: {\r\n              'house_a': 1.05, // 特定房产价格微调\r\n              'house_b': 0.95,\r\n              'land_a': 1.1\r\n            },\r\n            duration: 604800 // 一周\r\n          }\r\n        }),\r\n        (gameState) => gameState.player.money >= 1000\r\n      ),\r\n      createEventOption(\r\n        '委托投资',\r\n        '你决定委托他进行一些小额投资。',\r\n        createEventEffects({\r\n          money: -3000, // 降低投资金额，避免初期资金不足\r\n          nextEvent: 'financial_advisor_result' // 链接到后续事件\r\n        }),\r\n        (gameState) => gameState.player.money >= 3000 // 确保玩家有足够资金\r\n      ),\r\n      createEventOption(\r\n        '婉拒',\r\n        '你礼貌地拒绝了他的建议。',\r\n        createEventEffects({})\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      probability: 0.6,\r\n      minWeek: 5\r\n    }),\r\n    true, // 可重复触发\r\n    EventType.RANDOM,\r\n    1,\r\n    '/assets/images/events/financial_advisor.jpg'\r\n  ),\r\n\r\n  createEvent(\r\n    'financial_advisor_result',\r\n    '投资结果',\r\n    '你之前委托理财顾问进行的投资有了结果。',\r\n    [\r\n      createEventOption(\r\n        '查看结果',\r\n        // 随机生成投资结果，70%概率盈利，30%概率亏损\r\n        Math.random() < 0.7 ? \r\n          '你的投资取得了不错的回报，获得了4000元。' : \r\n          '很遗憾，由于市场波动，你的投资出现了亏损，只收回了2000元。',\r\n        createEventEffects({\r\n          // 70%概率获得4000元(盈利1000)，30%概率获得2000元(亏损1000)\r\n          money: Math.random() < 0.7 ? 4000 : 2000\r\n        })\r\n      )\r\n    ],\r\n    createEventConditions({\r\n      requiredEvents: ['financial_advisor']\r\n    }),\r\n    false, // 不可重复触发\r\n    EventType.STORY,\r\n    1,\r\n    '/assets/images/events/investment_result.jpg'\r\n  ),\r\n  \r\n  // 供应链中断事件\r\n  createEvent({\r\n    id: 'supply_chain_disruption',\r\n    title: '全球供应链中断危机',\r\n    description: '突发新闻：全球贸易遭遇严重供应链中断！各地区不同商品价格出现剧烈波动，部分商品短缺涨价，部分商品积压降价。此次危机预计将对市场产生深远影响。',\r\n    type: EventType.MARKET,\r\n    options: [\r\n      createEventOption(\r\n        '在大宗市场囤积基本物资', \r\n        '你预判到基本生活物资将会短缺，决定前往大宗商品交易所囤积必需品。',\r\n        {\r\n          market: {\r\n            // 全局市场轻微波动\r\n            globalPriceModifier: 1.05,\r\n            // 大宗商品交易所的物资价格变化\r\n            locationProductModifiers: {\r\n              'commodity_market': {\r\n                '202': 1.6, // 大米价格上涨60%\r\n                '203': 1.5, // 食用油价格上涨50%\r\n                '101': 1.4  // 卫生纸价格上涨40%\r\n              },\r\n              'electronics_hub': {\r\n                '301': 0.7, // 手机降价30%（电子产品积压）\r\n                '305': 0.75 // 智能手表降价25%\r\n              },\r\n              'premium_mall': {\r\n                '404': 0.8 // 高级香水降价20%（奢侈品销售下滑）\r\n              }\r\n            },\r\n            duration: 4 // 持续4周\r\n          },\r\n          forceLocationChange: true,\r\n          targetLocation: 'commodity_market'\r\n        }\r\n      ),\r\n      createEventOption(\r\n        '投资受影响商品', \r\n        '你认为这是投资低价电子产品的好机会，决定前往电子科技城大量购入。',\r\n        {\r\n          market: {\r\n            locationModifiers: {\r\n              'electronics_hub': 0.85 // 电子科技城整体降价15%\r\n            },\r\n            locationProductModifiers: {\r\n              'electronics_hub': {\r\n                '301': 0.6, // 手机降价40%\r\n                '305': 0.65 // 智能手表降价35%\r\n              },\r\n              'commodity_market': {\r\n                '202': 1.45, // 大米价格上涨45%\r\n                '203': 1.4  // 食用油价格上涨40%\r\n              }\r\n            },\r\n            duration: 3 // 持续3周\r\n          },\r\n          forceLocationChange: true,\r\n          targetLocation: 'electronics_hub'\r\n        }\r\n      ),\r\n      createEventOption(\r\n        '寻找黑市稀缺资源', \r\n        '你猜测某些特殊商品可能在黑市变得更加稀缺且价值上升，决定前往地下黑市探索机会。',\r\n        {\r\n          market: {\r\n            locationModifiers: {\r\n              'black_market': 1.2 // 黑市整体涨价20%\r\n            },\r\n            locationProductModifiers: {\r\n              'black_market': {\r\n                '502': 1.8, // 邮票价格上涨80%（收藏品价值飙升）\r\n                '503': 1.9  // 古画价格上涨90%\r\n              },\r\n              'second_hand_market': {\r\n                '107': 0.7, // 二手物品降价30%（需求下降）\r\n                '106': 0.75 // 二手物品降价25%\r\n              }\r\n            },\r\n            duration: 3 // 持续3周\r\n          },\r\n          forceLocationChange: true,\r\n          targetLocation: 'black_market'\r\n        }\r\n      ),\r\n      createEventOption(\r\n        '保持观望', \r\n        '你决定暂时不介入这次混乱的市场波动，等待形势更加明朗。',\r\n        {\r\n          // 仅记录市场变化，但不采取行动\r\n          market: {\r\n            globalPriceModifier: 1.02,\r\n            duration: 2 // 持续2周\r\n          }\r\n        }\r\n      )\r\n    ],\r\n    conditions: {\r\n      probability: 0.15, // 较低概率触发，因为是重大事件\r\n      minWeek: 15        // 游戏进行到中后期才会触发\r\n    },\r\n    repeatable: false,   // 重大事件，不可重复触发\r\n    weight: 3           // 较高权重，优先触发\r\n  }),\r\n  \r\n  // 对比事件：地区繁荣与萧条\r\n  createEvent({\r\n    id: 'market_contrast_event',\r\n    title: '城市区域发展不均',\r\n    description: '最新城市规划调整导致电子科技城获得大量投资和客流，而地下黑市却因管控加强而客流锐减。这种发展不均衡引发了明显的市场差异。',\r\n    type: EventType.MARKET,\r\n    options: [\r\n      createEventOption(\r\n        '分析市场机会', \r\n        '你仔细分析了城市不同区域的发展变化，寻找其中的交易机会。',\r\n        {\r\n          market: {\r\n            // 对比效应：一个地区繁荣（降价），另一个萧条（涨价）\r\n            locationModifiers: {\r\n              'electronics_hub': 0.8, // 电子科技城繁荣，整体降价20%\r\n              'black_market': 1.4 // 地下黑市萧条，整体涨价40%\r\n            },\r\n            duration: 5 // 持续5周\r\n          }\r\n        }\r\n      )\r\n    ],\r\n    conditions: {\r\n      probability: 0.2,\r\n      minWeek: 12\r\n    },\r\n    repeatable: true,\r\n    weight: 2\r\n  })\r\n];\r\n\r\n// 事件缓存，避免重复创建事件实例\r\nlet eventsCache = [];\r\n\r\n// 按类型划分的事件列表\r\nconst tutorialEvents = []; // 教程事件\r\nconst randomEvents = [];   // 随机事件\r\nconst locationEvents = []; // 地点特定事件\r\nconst marketEvents = [];   // 市场事件\r\nconst personalEvents = []; // 个人事件\r\nconst storyEvents = [];    // 故事/剧情事件\r\n\r\n// 从预定义事件数据中填充事件列表\r\nfunction initializeEventLists() {\r\n  // 如果事件列表已经初始化，则跳过\r\n  if (tutorialEvents.length > 0) return;\r\n  \r\n  // 遍历预定义事件数据，按类型分类\r\n  predefinedEvents.forEach(eventData => {\r\n    // 确保事件选项是EventOption实例\r\n    const options = eventData.options.map(option => {\r\n      if (!(option instanceof EventOption)) {\r\n        return new EventOption(option);\r\n      }\r\n      return option;\r\n    });\r\n    \r\n    // 创建Event实例\r\n    const event = new Event({\r\n      ...eventData,\r\n      options,\r\n      imageUrl: eventData.imageUrl || (typeof eventData[8] === 'string' ? eventData[8] : null)\r\n    });\r\n    \r\n    // 根据事件类型添加到对应列表\r\n    switch (event.type) {\r\n      case EventType.TUTORIAL:\r\n        tutorialEvents.push(event);\r\n        break;\r\n      case EventType.RANDOM:\r\n        randomEvents.push(event);\r\n        break;\r\n      case EventType.LOCATION:\r\n        locationEvents.push(event);\r\n        break;\r\n      case EventType.MARKET:\r\n        marketEvents.push(event);\r\n        break;\r\n      case EventType.PERSONAL:\r\n        personalEvents.push(event);\r\n        break;\r\n      case EventType.STORY:\r\n        storyEvents.push(event);\r\n        break;\r\n      default:\r\n        randomEvents.push(event); // 默认添加到随机事件列表\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 获取所有游戏事件\r\n * @returns {Array<Event>} 事件列表\r\n */\r\nexport function getAllEvents() {\r\n  // 初始化事件列表\r\n  initializeEventLists();\r\n  \r\n  // 从缓存中获取事件，避免重新创建\r\n  if (eventsCache.length > 0) {\r\n    return eventsCache;\r\n  }\r\n  \r\n  // 初始化事件列表\r\n  const events = [];\r\n  \r\n  // 添加教程事件\r\n  events.push(...tutorialEvents);\r\n  \r\n  // 添加随机事件\r\n  events.push(...randomEvents);\r\n  \r\n  // 添加地点特定事件\r\n  events.push(...locationEvents);\r\n  \r\n  // 添加市场事件\r\n  events.push(...marketEvents);\r\n  \r\n  // 添加个人事件\r\n  events.push(...personalEvents);\r\n  \r\n  // 添加故事事件\r\n  events.push(...storyEvents);\r\n  \r\n  // 添加新的地区特定价格事件\r\n  events.push(\r\n    // 地区整体通胀事件\r\n    createEvent({\r\n      id: 'location_inflation_electronics_hub',\r\n      title: '电子科技城芯片短缺',\r\n      description: '最新消息：电子科技城的主要芯片供应商工厂停产，导致该地区电子产品整体涨价。分析师预计这种情况将持续数周。',\r\n      type: EventType.MARKET,\r\n      options: [\r\n        createEventOption(\r\n          '了解情况', \r\n          '你记下了这个信息，这可能影响你在电子科技城的交易策略。',\r\n          {\r\n            market: {\r\n              // 对电子科技城整体价格上调30%\r\n              locationModifiers: {\r\n                'electronics_hub': 1.3\r\n              },\r\n              duration: 4 // 持续4周\r\n            }\r\n          }\r\n        )\r\n      ],\r\n      conditions: {\r\n        probability: 0.3,\r\n        minWeek: 5\r\n      },\r\n      repeatable: true,\r\n      weight: 2\r\n    }),\r\n    \r\n    // 地区特定商品价格变化事件\r\n    createEvent({\r\n      id: 'premium_mall_luxury_watch_discount',\r\n      title: '高端商城名表促销',\r\n      description: '高端商城的名表专柜开始大规模促销活动，所有品牌手表都有特别折扣。这是购买奢侈手表的好机会！',\r\n      type: EventType.MARKET,\r\n      options: [\r\n        createEventOption(\r\n          '记下信息', \r\n          '你记下了这个促销信息，可以考虑去高端商城购买手表。',\r\n          {\r\n            market: {\r\n              // 对高端商城的特定商品(ID:401手表)降价40%\r\n              locationProductModifiers: {\r\n                'premium_mall': {\r\n                  '401': 0.6 // 降价40%\r\n                }\r\n              },\r\n              duration: 2 // 持续2周\r\n            }\r\n          }\r\n        )\r\n      ],\r\n      conditions: {\r\n        probability: 0.3,\r\n        minWeek: 3\r\n      },\r\n      repeatable: true,\r\n      weight: 1\r\n    }),\r\n    \r\n    // 多地区多商品价格变化事件\r\n    createEvent({\r\n      id: 'nationwide_paper_shortage',\r\n      title: '全国性纸张短缺',\r\n      description: '由于环保政策收紧和原料价格上涨，全国范围内出现纸张短缺现象。大宗商品交易所和二手市场的卫生纸价格飙升，而其他地区受影响较小。',\r\n      type: EventType.MARKET,\r\n      options: [\r\n        createEventOption(\r\n          '分析影响', \r\n          '你分析了这次纸张短缺对各个市场的影响，并调整了你的交易策略。',\r\n          {\r\n            market: {\r\n              // 对特定地区的特定商品(ID:101卫生纸)涨价\r\n              locationProductModifiers: {\r\n                'commodity_market': {\r\n                  '101': 1.7 // 大宗商品交易所的卫生纸涨价70%\r\n                },\r\n                'second_hand_market': {\r\n                  '101': 1.5 // 二手市场的卫生纸涨价50%\r\n                }\r\n              },\r\n              duration: 3 // 持续3周\r\n            }\r\n          }\r\n        )\r\n      ],\r\n      conditions: {\r\n        probability: 0.25,\r\n        minWeek: 8\r\n      },\r\n      repeatable: true,\r\n      weight: 2\r\n    }),\r\n    \r\n    // 对比事件：地区繁荣与萧条\r\n    createEvent({\r\n      id: 'market_contrast_event',\r\n      title: '城市区域发展不均',\r\n      description: '最新城市规划调整导致电子科技城获得大量投资和客流，而地下黑市却因管控加强而客流锐减。这种发展不均衡引发了明显的市场差异。',\r\n      type: EventType.MARKET,\r\n      options: [\r\n        createEventOption(\r\n          '分析市场机会', \r\n          '你仔细分析了城市不同区域的发展变化，寻找其中的交易机会。',\r\n          {\r\n            market: {\r\n              // 对比效应：一个地区繁荣（降价），另一个萧条（涨价）\r\n              locationModifiers: {\r\n                'electronics_hub': 0.8, // 电子科技城繁荣，整体降价20%\r\n                'black_market': 1.4 // 地下黑市萧条，整体涨价40%\r\n              },\r\n              duration: 5 // 持续5周\r\n            }\r\n          }\r\n        )\r\n      ],\r\n      conditions: {\r\n        probability: 0.2,\r\n        minWeek: 12\r\n      },\r\n      repeatable: true,\r\n      weight: 2\r\n    }),\r\n    \r\n    // 供应链中断事件\r\n    createEvent({\r\n      id: 'supply_chain_disruption',\r\n      title: '全球供应链中断危机',\r\n      description: '突发新闻：全球贸易遭遇严重供应链中断！各地区不同商品价格出现剧烈波动，部分商品短缺涨价，部分商品积压降价。此次危机预计将对市场产生深远影响。',\r\n      type: EventType.MARKET,\r\n      options: [\r\n        createEventOption(\r\n          '在大宗市场囤积基本物资', \r\n          '你预判到基本生活物资将会短缺，决定前往大宗商品交易所囤积必需品。',\r\n          {\r\n            market: {\r\n              // 全局市场轻微波动\r\n              globalPriceModifier: 1.05,\r\n              // 大宗商品交易所的物资价格变化\r\n              locationProductModifiers: {\r\n                'commodity_market': {\r\n                  '202': 1.6, // 大米价格上涨60%\r\n                  '203': 1.5, // 食用油价格上涨50%\r\n                  '101': 1.4  // 卫生纸价格上涨40%\r\n                },\r\n                'electronics_hub': {\r\n                  '301': 0.7, // 手机降价30%（电子产品积压）\r\n                  '305': 0.75 // 智能手表降价25%\r\n                },\r\n                'premium_mall': {\r\n                  '404': 0.8 // 高级香水降价20%（奢侈品销售下滑）\r\n                }\r\n              },\r\n              duration: 4 // 持续4周\r\n            },\r\n            forceLocationChange: true,\r\n            targetLocation: 'commodity_market'\r\n          }\r\n        ),\r\n        createEventOption(\r\n          '投资受影响商品', \r\n          '你认为这是投资低价电子产品的好机会，决定前往电子科技城大量购入。',\r\n          {\r\n            market: {\r\n              locationModifiers: {\r\n                'electronics_hub': 0.85 // 电子科技城整体降价15%\r\n              },\r\n              locationProductModifiers: {\r\n                'electronics_hub': {\r\n                  '301': 0.6, // 手机降价40%\r\n                  '305': 0.65 // 智能手表降价35%\r\n                },\r\n                'commodity_market': {\r\n                  '202': 1.45, // 大米价格上涨45%\r\n                  '203': 1.4  // 食用油价格上涨40%\r\n                }\r\n              },\r\n              duration: 3 // 持续3周\r\n            },\r\n            forceLocationChange: true,\r\n            targetLocation: 'electronics_hub'\r\n          }\r\n        ),\r\n        createEventOption(\r\n          '寻找黑市稀缺资源', \r\n          '你猜测某些特殊商品可能在黑市变得更加稀缺且价值上升，决定前往地下黑市探索机会。',\r\n          {\r\n            market: {\r\n              locationModifiers: {\r\n                'black_market': 1.2 // 黑市整体涨价20%\r\n              },\r\n              locationProductModifiers: {\r\n                'black_market': {\r\n                  '502': 1.8, // 邮票价格上涨80%（收藏品价值飙升）\r\n                  '503': 1.9  // 古画价格上涨90%\r\n                },\r\n                'second_hand_market': {\r\n                  '107': 0.7, // 二手物品降价30%（需求下降）\r\n                  '106': 0.75 // 二手物品降价25%\r\n                }\r\n              },\r\n              duration: 3 // 持续3周\r\n            },\r\n            forceLocationChange: true,\r\n            targetLocation: 'black_market'\r\n          }\r\n        ),\r\n        createEventOption(\r\n          '保持观望', \r\n          '你决定暂时不介入这次混乱的市场波动，等待形势更加明朗。',\r\n          {\r\n            // 仅记录市场变化，但不采取行动\r\n            market: {\r\n              globalPriceModifier: 1.02,\r\n              duration: 2 // 持续2周\r\n            }\r\n          }\r\n        )\r\n      ],\r\n      conditions: {\r\n        probability: 0.15, // 较低概率触发，因为是重大事件\r\n        minWeek: 15        // 游戏进行到中后期才会触发\r\n      },\r\n      repeatable: false,   // 重大事件，不可重复触发\r\n      weight: 3           // 较高权重，优先触发\r\n    })\r\n  );\r\n  \r\n  // 缓存创建的事件\r\n  eventsCache = events;\r\n  \r\n  return events;\r\n}\r\n\r\n/**\r\n * 根据ID获取事件\r\n * @param {string} id 事件ID\r\n * @returns {Event|null} 事件实例或null\r\n */\r\nexport function getEventById(id) {\r\n  const eventData = predefinedEvents.find(e => e.id === id);\r\n  if (!eventData) return null;\r\n  \r\n  // 确保事件选项是EventOption实例\r\n  const options = eventData.options.map(option => {\r\n    if (!(option instanceof EventOption)) {\r\n      return new EventOption(option);\r\n    }\r\n    return option;\r\n  });\r\n  \r\n  // 创建Event实例并确保imageUrl属性被正确传递\r\n  return new Event({\r\n    ...eventData,\r\n    options,\r\n    imageUrl: eventData.imageUrl || (typeof eventData[8] === 'string' ? eventData[8] : null) // 确保第9个参数被作为imageUrl传递\r\n  });\r\n}","/**\r\n * 事件发射器\r\n * 提供事件发布订阅功能\r\n */\r\nimport { handleError, ErrorType, ErrorSeverity } from './utils/errorHandler';\r\n\r\n/**\r\n * 事件发射器类\r\n */\r\nexport class EventEmitter {\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor() {\r\n    this.events = {};\r\n    this.onceEvents = {};\r\n  }\r\n  \r\n  /**\r\n   * 订阅事件\r\n   * @param {string} eventName 事件名称\r\n   * @param {Function} listener 监听函数\r\n   * @returns {Function} 取消订阅函数\r\n   */\r\n  on(eventName, listener) {\r\n    if (!this.events[eventName]) {\r\n      this.events[eventName] = [];\r\n    }\r\n    \r\n    this.events[eventName].push(listener);\r\n    \r\n    // 返回取消订阅函数\r\n    return () => this.off(eventName, listener);\r\n  }\r\n  \r\n  /**\r\n   * 一次性订阅事件\r\n   * @param {string} eventName 事件名称\r\n   * @param {Function} listener 监听函数\r\n   * @returns {Function} 取消订阅函数\r\n   */\r\n  once(eventName, listener) {\r\n    if (!this.onceEvents[eventName]) {\r\n      this.onceEvents[eventName] = [];\r\n    }\r\n    \r\n    this.onceEvents[eventName].push(listener);\r\n    \r\n    // 返回取消订阅函数\r\n    return () => {\r\n      if (this.onceEvents[eventName]) {\r\n        const index = this.onceEvents[eventName].indexOf(listener);\r\n        if (index !== -1) {\r\n          this.onceEvents[eventName].splice(index, 1);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 取消订阅事件\r\n   * @param {string} eventName 事件名称\r\n   * @param {Function} listener 监听函数\r\n   */\r\n  off(eventName, listener) {\r\n    if (this.events[eventName]) {\r\n      const index = this.events[eventName].indexOf(listener);\r\n      if (index !== -1) {\r\n        this.events[eventName].splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 发射事件\r\n   * @param {string} eventName 事件名称\r\n   * @param {any} data 事件数据\r\n   */\r\n  emit(eventName, data) {\r\n    // 处理常规事件\r\n    if (this.events[eventName]) {\r\n      this.events[eventName].forEach(listener => {\r\n        try {\r\n          listener(data);\r\n        } catch (error) {\r\n          handleError(error, `EventEmitter.emit(${eventName})`, ErrorType.SYSTEM, ErrorSeverity.WARNING);\r\n          console.error(`Error in event listener for ${eventName}:`, error);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // 处理一次性事件\r\n    if (this.onceEvents[eventName]) {\r\n      const listeners = [...this.onceEvents[eventName]];\r\n      this.onceEvents[eventName] = [];\r\n      \r\n      listeners.forEach(listener => {\r\n        try {\r\n          listener(data);\r\n        } catch (error) {\r\n          handleError(error, `EventEmitter.emit.once(${eventName})`, ErrorType.SYSTEM, ErrorSeverity.WARNING);\r\n          console.error(`Error in once event listener for ${eventName}:`, error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * 清除所有事件监听器\r\n   */\r\n  clear() {\r\n    this.events = {};\r\n    this.onceEvents = {};\r\n  }\r\n  \r\n  /**\r\n   * 清除特定事件的所有监听器\r\n   * @param {string} eventName 事件名称\r\n   */\r\n  clearEvent(eventName) {\r\n    if (eventName) {\r\n      this.events[eventName] = [];\r\n      this.onceEvents[eventName] = [];\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局事件发射器实例\r\nconst eventEmitter = new EventEmitter();\r\n\r\nexport default eventEmitter; ","/**\r\n * 游戏配置服务\r\n * 提供统一的游戏平衡性参数管理\r\n */\r\n\r\n// 游戏难度级别\r\nexport const DifficultyLevel = {\r\n  EASY: 'easy',\r\n  NORMAL: 'normal',\r\n  HARD: 'hard'\r\n};\r\n\r\n// 游戏配置参数表\r\nconst gameConfigs = {\r\n  // 简单模式\r\n  [DifficultyLevel.EASY]: {\r\n    player: {\r\n      initialMoney: 8000,\r\n      initialDebt: 1000,\r\n      initialCapacity: 150,\r\n      debtInterestRate: 0.004, // 0.4%/周\r\n      debtGracePeriod: 4      // 4周宽限期\r\n    },\r\n    market: {\r\n      priceTrendStrength: 0.8,  // 价格趋势强度降低\r\n      priceVolatility: 0.8,     // 价格波动幅度降低\r\n      specialProductDiscount: 0.25, // 特产折扣25%\r\n      trendContinuationChance: 0.8  // 趋势延续概率更高\r\n    },\r\n    events: {\r\n      positiveEventChance: 0.7, // 正面事件概率更高\r\n      eventFrequency: 0.3,      // 事件触发频率较低\r\n      earlyGameEventMultiplier: 0.7, // 游戏前期事件更少\r\n      lateGameEventMultiplier: 1.1   // 游戏后期事件略多\r\n    },\r\n    houses: {\r\n      // 房屋价格调整\r\n      housePriceMultipliers: {\r\n        'apartment': 0.9,\r\n        'house': 0.9,\r\n        'villa': 0.85,\r\n        'mansion': 0.85\r\n      }\r\n    },\r\n    gameGoals: {\r\n      requiredNetWorth: 350000,\r\n      targetWeeks: 52,         // 游戏时长不变\r\n      debtRatio: 0.5          // 债务比例更宽松\r\n    }\r\n  },\r\n  \r\n  // 普通模式\r\n  [DifficultyLevel.NORMAL]: {\r\n    player: {\r\n      initialMoney: 5000,\r\n      initialDebt: 2000,\r\n      initialCapacity: 100,\r\n      debtInterestRate: 0.005, // 0.5%/周\r\n      debtGracePeriod: 3      // 3周宽限期\r\n    },\r\n    market: {\r\n      priceTrendStrength: 1.0,  // 标准价格趋势强度\r\n      priceVolatility: 1.0,     // 标准价格波动幅度\r\n      specialProductDiscount: 0.15, // 特产折扣15%\r\n      trendContinuationChance: 0.75 // 标准趋势延续概率\r\n    },\r\n    events: {\r\n      positiveEventChance: 0.5, // 正负面事件平衡\r\n      eventFrequency: 0.4,      // 标准事件触发频率\r\n      earlyGameEventMultiplier: 0.8, // 游戏前期事件较少\r\n      lateGameEventMultiplier: 1.2   // 游戏后期事件较多\r\n    },\r\n    houses: {\r\n      housePriceMultipliers: {\r\n        'apartment': 1.0,\r\n        'house': 1.0,\r\n        'villa': 1.0,\r\n        'mansion': 1.0\r\n      }\r\n    },\r\n    gameGoals: {\r\n      requiredNetWorth: 400000,\r\n      targetWeeks: 52,\r\n      debtRatio: 0.4\r\n    }\r\n  },\r\n  \r\n  // 困难模式\r\n  [DifficultyLevel.HARD]: {\r\n    player: {\r\n      initialMoney: 3500,\r\n      initialDebt: 3000,\r\n      initialCapacity: 80,\r\n      debtInterestRate: 0.006, // 0.6%/周\r\n      debtGracePeriod: 2      // 2周宽限期\r\n    },\r\n    market: {\r\n      priceTrendStrength: 1.2,  // 价格趋势更明显\r\n      priceVolatility: 1.3,     // 价格波动更剧烈\r\n      specialProductDiscount: 0.1, // 特产折扣仅10%\r\n      trendContinuationChance: 0.7 // 趋势延续概率较低，更多变化\r\n    },\r\n    events: {\r\n      positiveEventChance: 0.4, // 负面事件更多\r\n      eventFrequency: 0.5,      // 事件触发更频繁\r\n      earlyGameEventMultiplier: 0.9, // 游戏前期事件稍少\r\n      lateGameEventMultiplier: 1.3   // 游戏后期事件明显增多\r\n    },\r\n    houses: {\r\n      housePriceMultipliers: {\r\n        'apartment': 1.1,\r\n        'house': 1.15,\r\n        'villa': 1.2,\r\n        'mansion': 1.25\r\n      }\r\n    },\r\n    gameGoals: {\r\n      requiredNetWorth: 450000,\r\n      targetWeeks: 52,\r\n      debtRatio: 0.35        // 债务比例更严格\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * 获取当前游戏配置\r\n * @param {string} difficulty 难度级别\r\n * @returns {Object} 游戏配置\r\n */\r\nexport function getGameConfig(difficulty = DifficultyLevel.NORMAL) {\r\n  return gameConfigs[difficulty] || gameConfigs[DifficultyLevel.NORMAL];\r\n}\r\n\r\n/**\r\n * 获取游戏阶段系数\r\n * 根据当前游戏进度返回不同阶段的调整系数\r\n * @param {number} currentWeek 当前周数\r\n * @param {number} maxWeeks 最大周数\r\n * @returns {Object} 游戏阶段系数\r\n */\r\nexport function getGamePhaseMultipliers(currentWeek, maxWeeks = 52) {\r\n  const progress = currentWeek / maxWeeks;\r\n  \r\n  // 游戏阶段划分\r\n  if (progress < 0.2) {\r\n    return { phase: 'early', eventMultiplier: 0.8, priceVolatilityMultiplier: 0.9 };\r\n  } else if (progress < 0.4) {\r\n    return { phase: 'early_mid', eventMultiplier: 0.9, priceVolatilityMultiplier: 1.0 };\r\n  } else if (progress < 0.6) {\r\n    return { phase: 'mid', eventMultiplier: 1.0, priceVolatilityMultiplier: 1.0 };\r\n  } else if (progress < 0.8) {\r\n    return { phase: 'mid_late', eventMultiplier: 1.1, priceVolatilityMultiplier: 1.1 };\r\n  } else {\r\n    return { phase: 'late', eventMultiplier: 1.2, priceVolatilityMultiplier: 1.2 };\r\n  }\r\n}\r\n\r\n/**\r\n * 计算适合玩家状态的房屋价格调整\r\n * 当玩家资产接近房屋价格时提供微调，防止长期无法达成目标\r\n * @param {Object} player 玩家对象\r\n * @param {Array} houses 房屋列表\r\n * @param {number} currentWeek 当前周数\r\n * @param {number} maxWeeks 最大周数\r\n * @returns {Object} 房屋价格调整系数\r\n */\r\nexport function calculateHousePriceAdjustment(player, houses, currentWeek, maxWeeks = 52) {\r\n  // 游戏后半程才启用动态调整\r\n  if (currentWeek < maxWeeks * 0.5) return {};\r\n  \r\n  // 计算玩家资产\r\n  const netWorth = player.money + player.inventory.reduce((sum, item) => {\r\n    return sum + (item.quantity * item.purchasePrice);\r\n  }, 0) - player.debt;\r\n  \r\n  // 计算距离最高级别房屋的差距比例\r\n  const highestHouse = houses.sort((a, b) => b.price - a.price)[0];\r\n  const priceDifference = highestHouse.price - netWorth;\r\n  const diffRatio = priceDifference / highestHouse.price;\r\n  \r\n  // 如果玩家资产长期低于目标，提供小幅价格调整\r\n  if (diffRatio > 0.3 && currentWeek > maxWeeks * 0.7) {\r\n    // 越接近游戏结束，调整越明显\r\n    const endGameFactor = (currentWeek / maxWeeks - 0.7) / 0.3;\r\n    const adjustmentFactor = 0.95 + (endGameFactor * 0.05);\r\n    \r\n    return { [highestHouse.id]: adjustmentFactor };\r\n  }\r\n  \r\n  return {};\r\n}\r\n\r\n/**\r\n * 计算债务利率调整\r\n * 防止债务陷阱和滚雪球效应\r\n * @param {Object} player 玩家对象\r\n * @param {Object} config 游戏配置\r\n * @param {number} currentWeek 当前周数\r\n * @returns {number} 调整后的债务利率\r\n */\r\nexport function calculateDebtInterestAdjustment(player, config, currentWeek) {\r\n  const baseRate = config.player.debtInterestRate;\r\n  \r\n  // 如果玩家债务过高，提供利率减免\r\n  const debtToMoneyRatio = player.debt / Math.max(player.money, 1);\r\n  \r\n  if (debtToMoneyRatio > 5) {\r\n    return baseRate * 0.8; // 严重债务，降低利率\r\n  } else if (debtToMoneyRatio > 3) {\r\n    return baseRate * 0.9; // 较高债务，小幅降低利率\r\n  }\r\n  \r\n  return baseRate; // 正常利率\r\n}\r\n\r\n/**\r\n * 获取事件概率调整\r\n * 根据游戏进度和玩家状态调整事件触发概率\r\n * @param {Object} player 玩家对象\r\n * @param {Object} config 游戏配置\r\n * @param {number} currentWeek 当前周数\r\n * @param {number} maxWeeks 最大周数\r\n * @returns {Object} 事件概率调整\r\n */\r\nexport function getEventProbabilityAdjustments(player, config, currentWeek, maxWeeks = 52) {\r\n  const { phase, eventMultiplier } = getGamePhaseMultipliers(currentWeek, maxWeeks);\r\n  \r\n  // 基础事件频率\r\n  let frequencyMultiplier = eventMultiplier;\r\n  \r\n  // 根据玩家财务状况调整\r\n  const netWorth = player.money - player.debt;\r\n  if (netWorth < 0) {\r\n    // 负资产玩家，增加正面事件概率\r\n    return {\r\n      frequency: config.events.eventFrequency * frequencyMultiplier,\r\n      positiveChance: Math.min(config.events.positiveEventChance * 1.2, 0.9)\r\n    };\r\n  } else if (netWorth > 200000) {\r\n    // 富有玩家，增加负面事件概率\r\n    return {\r\n      frequency: config.events.eventFrequency * frequencyMultiplier,\r\n      positiveChance: Math.max(config.events.positiveEventChance * 0.8, 0.3)\r\n    };\r\n  }\r\n  \r\n  // 默认调整\r\n  return {\r\n    frequency: config.events.eventFrequency * frequencyMultiplier,\r\n    positiveChance: config.events.positiveEventChance\r\n  };\r\n} ","/**\r\n * 事件系统\r\n * 管理游戏中的随机事件触发和处理\r\n */\r\nimport { EventType } from '../models/event';\r\nimport eventEmitter from '@/infrastructure/eventEmitter';\r\nimport { getGameConfig, getGamePhaseMultipliers } from './gameConfigService';\r\n\r\n// 游戏事件类型常量\r\nexport const GameEventType = {\r\n  EVENT_TRIGGERED: 'event:triggered',\r\n  EVENT_COMPLETED: 'event:completed',\r\n  EVENT_OPTION_SELECTED: 'event:option_selected',\r\n  EVENT_EFFECTS_APPLIED: 'event:effects_applied'\r\n};\r\n\r\n// 事件效果类型\r\nexport const EventEffectType = {\r\n  POSITIVE: 'positive',\r\n  NEGATIVE: 'negative',\r\n  NEUTRAL: 'neutral'\r\n};\r\n\r\n// 事件阶段\r\nexport const EventStage = {\r\n  EARLY: 'early',    // 游戏前期（1-15周）\r\n  MID: 'mid',        // 游戏中期（16-35周）\r\n  LATE: 'late'       // 游戏后期（36-52周）\r\n};\r\n\r\nexport class EventSystem {\r\n  /**\r\n   * 创建事件系统\r\n   * @param {Array} events 所有事件列表\r\n   */\r\n  constructor(events) {\r\n    this.events = events || [];\r\n    this.triggeredEvents = new Set(); // 已触发过的事件ID\r\n    this.activeEvents = []; // 当前活跃的事件效果\r\n    this.eventHistory = []; // 事件历史记录\r\n    this.cooldowns = {}; // 事件冷却时间\r\n    this.difficultyLevel = 'normal'; // 默认难度\r\n  }\r\n  \r\n  /**\r\n   * 设置游戏难度\r\n   * @param {string} difficulty 难度级别\r\n   */\r\n  setDifficulty(difficulty) {\r\n    this.difficultyLevel = difficulty;\r\n  }\r\n  \r\n  /**\r\n   * 根据游戏阶段生成适当的事件\r\n   * @param {Object} gameState 游戏状态\r\n   * @returns {Object|null} 生成的事件，如果没有则返回null\r\n   */\r\n  generateStageAppropriateEvent(gameState) {\r\n    console.log('尝试生成阶段适当的事件，当前周数:', gameState.currentWeek);\r\n    \r\n    const { currentWeek, maxWeeks = 52 } = gameState;\r\n    \r\n    // 计算游戏进度百分比\r\n    const gameProgress = currentWeek / maxWeeks;\r\n    \r\n    // 确定游戏阶段\r\n    let currentStage;\r\n    if (gameProgress < 0.3) {\r\n      currentStage = EventStage.EARLY;\r\n    } else if (gameProgress < 0.7) {\r\n      currentStage = EventStage.MID;\r\n    } else {\r\n      currentStage = EventStage.LATE;\r\n    }\r\n    console.log('当前游戏阶段:', currentStage, '进度:', gameProgress);\r\n    \r\n    // 获取游戏配置和阶段修正\r\n    const config = getGameConfig(this.difficultyLevel);\r\n    const phaseMultipliers = getGamePhaseMultipliers(currentWeek, maxWeeks);\r\n    \r\n    // 计算事件触发概率\r\n    const baseEventChance = config.events.eventFrequency * 1.8; // 提高基础事件频率1.8倍\r\n    const stageMultiplier = phaseMultipliers.eventMultiplier * 1.3; // 提高阶段乘数1.3倍\r\n    const finalEventChance = Math.min(0.95, baseEventChance * stageMultiplier); // 限制最大概率为95%\r\n    \r\n    console.log('事件触发概率计算:', {\r\n      baseEventChance,\r\n      stageMultiplier,\r\n      finalEventChance\r\n    });\r\n    \r\n    // 决定是否触发事件\r\n    const randomValue = Math.random();\r\n    const shouldTriggerEvent = randomValue <= finalEventChance;\r\n    console.log(`随机值: ${randomValue}, 是否触发事件: ${shouldTriggerEvent}`);\r\n    \r\n    if (!shouldTriggerEvent) {\r\n      return null;\r\n    }\r\n    \r\n    // 调整正面/负面事件比例和地点事件概率\r\n    let positiveChance = config.events.positiveEventChance;\r\n    \r\n    // 游戏前期增加正面事件概率，后期增加负面事件概率\r\n    if (currentStage === EventStage.EARLY) {\r\n      positiveChance *= 1.3; // 增加30%正面事件概率\r\n    } else if (currentStage === EventStage.LATE) {\r\n      positiveChance *= 0.8; // 减少20%正面事件概率\r\n    }\r\n\r\n    // 获取当前地点已触发的事件数量\r\n    const currentLocation = gameState.currentLocation?.id;\r\n    if (currentLocation) {\r\n      const locationEvents = this.eventHistory.filter(record => {\r\n        const event = this.getEventById(record.id);\r\n        return event?.conditions?.locations?.includes(currentLocation);\r\n      });\r\n\r\n      // 如果地点事件过多，降低该地点事件的触发概率\r\n      if (locationEvents.length > 3) {\r\n        const locationEventReduction = Math.min(0.8, Math.pow(0.9, locationEvents.length - 3));\r\n        eventProbability *= locationEventReduction;\r\n      }\r\n    }\r\n\r\n    // 根据玩家资金情况额外调整事件类型\r\n    if (gameState.player.money < 5000) {\r\n      positiveChance *= 1.2; // 玩家资金少时增加正面事件机会\r\n    } else if (gameState.player.money > 100000) {\r\n      positiveChance *= 0.9; // 玩家资金多时略微降低正面事件机会\r\n    }\r\n\r\n    // 根据玩家是否拥有房产调整房产相关事件概率\r\n    let houseEventModifier = 1.0;\r\n    const hasHouse = gameState.player.attributes?.hasHouse || false;\r\n    const propertyValue = gameState.player.attributes?.propertyValue || 0;\r\n    \r\n    if (!hasHouse && propertyValue < 1000 && currentWeek > 20) {\r\n      // 游戏中后期还没有房产，增加房产事件概率\r\n      houseEventModifier = 1.5;\r\n    } else if (hasHouse || propertyValue > 50000) {\r\n      // 已经有房产或投资，降低房产事件概率\r\n      houseEventModifier = 0.7;\r\n    }\r\n    \r\n    // 确定事件效果类型\r\n    const eventEffectType = Math.random() < positiveChance ? \r\n      EventEffectType.POSITIVE : EventEffectType.NEGATIVE;\r\n    \r\n    console.log('事件类型确定:', {\r\n      positiveChance,\r\n      eventEffectType\r\n    });\r\n    \r\n    // 筛选适合当前阶段的事件\r\n    const eligibleEvents = this.events.filter(event => {\r\n      // 检查是否在冷却中\r\n      if (this.isEventInCooldown(event.id, currentWeek)) {\r\n        return false;\r\n      }\r\n      \r\n      // 检查是否已触发过且不可重复\r\n      if (event.repeatable === false && this.triggeredEvents.has(event.id)) {\r\n        return false;\r\n      }\r\n      \r\n      // 根据事件类型筛选\r\n      if (eventEffectType === EventEffectType.POSITIVE && event.effectType === EventEffectType.NEGATIVE) {\r\n        return false;\r\n      }\r\n      if (eventEffectType === EventEffectType.NEGATIVE && event.effectType === EventEffectType.POSITIVE) {\r\n        return false;\r\n      }\r\n      \r\n      // 根据游戏阶段筛选\r\n      if (event.gameStage) {\r\n        if (event.gameStage === EventStage.EARLY && currentStage !== EventStage.EARLY) return false;\r\n        if (event.gameStage === EventStage.MID && currentStage !== EventStage.MID) return false;\r\n        if (event.gameStage === EventStage.LATE && currentStage !== EventStage.LATE) return false;\r\n      }\r\n\r\n      // 应用房产事件调整\r\n      if (event.id.startsWith('property_') && Math.random() > houseEventModifier) {\r\n        return false;\r\n      }\r\n      \r\n      // 检查事件触发条件\r\n      return this.checkEventConditions(event, gameState);\r\n    });\r\n    \r\n    console.log(`筛选后的符合条件事件数量: ${eligibleEvents.length}`);\r\n    \r\n    if (eligibleEvents.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // 使用权重选择事件\r\n    const selectedEvent = this.selectEventByWeight(eligibleEvents, gameProgress);\r\n    console.log('选择的事件:', selectedEvent ? selectedEvent.id : 'null');\r\n    \r\n    return selectedEvent;\r\n  }\r\n  \r\n  /**\r\n   * 检查当前是否应该触发事件\r\n   * @param {Object} gameState 游戏状态\r\n   * @param {string} eventType 事件类型，如果不指定则检查所有类型\r\n   * @returns {Object|null} 触发的事件，如果没有则返回null\r\n   */\r\n  checkForEvents(gameState, eventType = null) {\r\n    console.log('事件系统 - 检查是否触发事件, 当前周数:', gameState.currentWeek);\r\n    console.log('事件系统 - 当前地点:', gameState.currentLocation ? gameState.currentLocation.id : '未知');\r\n    \r\n    // 根据地点获取事件触发概率\r\n    let eventProbability = 0.6; // 提高默认概率从0.3到0.6\r\n    if (gameState.currentLocation && gameState.currentLocation.eventProbability) {\r\n      eventProbability = gameState.currentLocation.eventProbability * 1.5; // 增加地点事件概率的1.5倍\r\n      console.log(`事件系统 - 当前地点事件触发概率: ${eventProbability}`);\r\n    }\r\n    \r\n    // 根据游戏进度增加事件概率\r\n    const gameProgress = Math.min(1.0, (gameState.currentWeek || 1) / 52);\r\n    const progressBonus = gameProgress * 0.2; // 提高游戏后期加成从0.1到0.2\r\n    eventProbability += progressBonus;\r\n    \r\n    // 确保概率不超过0.95\r\n    eventProbability = Math.min(0.95, eventProbability);\r\n    \r\n    // 随机数决定是否触发事件\r\n    const roll = Math.random();\r\n    console.log(`事件系统 - 事件随机检定: ${roll.toFixed(2)} vs ${eventProbability.toFixed(2)} (触发阈值)`);\r\n    \r\n    // 如果指定了事件类型，使用传统方式检查\r\n    if (eventType) {\r\n      // 获取符合条件的事件\r\n      const eligibleEvents = this.getEligibleEvents(gameState, eventType);\r\n      console.log(`事件系统 - 找到 ${eligibleEvents.length} 个符合条件的 ${eventType} 类型事件`);\r\n      \r\n      if (eligibleEvents.length === 0) return null;\r\n      \r\n      // 按权重选择事件\r\n      const selectedEvent = this.selectEventByWeight(eligibleEvents, gameProgress);\r\n      \r\n      if (selectedEvent) {\r\n        console.log('事件系统 - 已选择事件:', selectedEvent.id, selectedEvent.title);\r\n        this.recordEvent(selectedEvent.id, gameState.currentWeek);\r\n        \r\n        eventEmitter.emit(GameEventType.EVENT_TRIGGERED, {\r\n          event: selectedEvent,\r\n          week: gameState.currentWeek\r\n        });\r\n      }\r\n      \r\n      return selectedEvent;\r\n    }\r\n    \r\n    // 否则使用新的基于阶段的事件生成\r\n    let event;\r\n    \r\n    // 根据概率决定是否生成事件\r\n    if (roll < eventProbability && this.events.length > 0) {\r\n      // 获取所有符合条件的事件\r\n      const allEligibleEvents = this.getEligibleEvents(gameState);\r\n      console.log(`事件系统 - 找到 ${allEligibleEvents.length} 个符合条件的事件`);\r\n      \r\n      if (allEligibleEvents.length > 0) {\r\n        // 按权重选择事件\r\n        event = this.selectEventByWeight(allEligibleEvents, gameProgress);\r\n        console.log('事件系统 - 选择事件:', event ? event.id : '无');\r\n      } else {\r\n        console.log('事件系统 - 没有找到符合条件的事件');\r\n        return null;\r\n      }\r\n    } else {\r\n      console.log(`事件系统 - 随机检定未通过，本周不触发事件`);\r\n      return null;\r\n    }\r\n    \r\n    if (event) {\r\n      console.log('事件系统 - 生成事件成功:', event.id, event.title);\r\n      this.recordEvent(event.id, gameState.currentWeek);\r\n      \r\n      eventEmitter.emit(GameEventType.EVENT_TRIGGERED, {\r\n        event: event,\r\n        week: gameState.currentWeek\r\n      });\r\n    } else {\r\n      console.log('事件系统 - 没有生成事件');\r\n    }\r\n    \r\n    return event;\r\n  }\r\n  \r\n  /**\r\n   * 获取符合当前条件的事件列表\r\n   * @param {Object} gameState 游戏状态\r\n   * @param {string} eventType 事件类型，如果不指定则检查所有类型\r\n   * @returns {Array} 符合条件的事件列表\r\n   */\r\n  getEligibleEvents(gameState, eventType = null) {\r\n    return this.events.filter(event => {\r\n      // 如果指定了事件类型，只选择该类型的事件\r\n      if (eventType && event.type !== eventType) {\r\n        return false;\r\n      }\r\n      \r\n      // 检查事件是否在冷却中\r\n      if (this.isEventInCooldown(event.id, gameState.currentWeek)) {\r\n        return false;\r\n      }\r\n      \r\n      // 检查事件是否已触发过且不可重复\r\n      if (event.repeatable === false && this.triggeredEvents.has(event.id)) {\r\n        return false;\r\n      }\r\n      \r\n      // 统计该事件在最近10周内出现的次数\r\n      const recentOccurrences = this.eventHistory.filter(\r\n        record => record.id === event.id && \r\n        (gameState.currentWeek - record.week) <= 10\r\n      ).length;\r\n      \r\n      // 如果最近出现次数过多，大幅降低其再次出现的概率\r\n      if (recentOccurrences >= 2 && Math.random() > 0.3) {\r\n        return false;\r\n      }\r\n      \r\n      // 检查事件触发条件\r\n      return this.checkEventConditions(event, gameState);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 检查事件是否满足触发条件\r\n   * @param {Object} event 事件对象\r\n   * @param {Object} gameState 游戏状态\r\n   * @returns {boolean} 是否满足触发条件\r\n   */\r\n  checkEventConditions(event, gameState) {\r\n    const conditions = event.conditions || {};\r\n    \r\n    // 检查周数条件\r\n    if (conditions.minWeek && gameState.currentWeek < conditions.minWeek) {\r\n      return false;\r\n    }\r\n    if (conditions.maxWeek && gameState.currentWeek > conditions.maxWeek) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查地点条件\r\n    if (conditions.locations && \r\n        gameState.currentLocation && \r\n        !conditions.locations.includes(gameState.currentLocation.id)) {\r\n      return false;\r\n    }\r\n    \r\n    // 检查玩家金钱条件\r\n    if (conditions.playerMoney) {\r\n      const { min, max } = conditions.playerMoney;\r\n      if (min !== undefined && gameState.player.money < min) return false;\r\n      if (max !== undefined && gameState.player.money > max) return false;\r\n    }\r\n    \r\n    // 检查玩家债务条件\r\n    if (conditions.playerDebt) {\r\n      const { min, max } = conditions.playerDebt;\r\n      if (min !== undefined && gameState.player.debt < min) return false;\r\n      if (max !== undefined && gameState.player.debt > max) return false;\r\n    }\r\n    \r\n    // 检查物品条件\r\n    if (conditions.inventoryItems) {\r\n      for (const itemCond of conditions.inventoryItems) {\r\n        const inventoryItem = gameState.player.inventory.find(\r\n          item => item.productId === itemCond.productId\r\n        );\r\n        \r\n        const quantity = inventoryItem ? inventoryItem.quantity : 0;\r\n        \r\n        if (itemCond.minQuantity !== undefined && quantity < itemCond.minQuantity) return false;\r\n        if (itemCond.maxQuantity !== undefined && quantity > itemCond.maxQuantity) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查属性条件\r\n    if (conditions.attributes) {\r\n      for (const [attr, { min, max }] of Object.entries(conditions.attributes)) {\r\n        const value = gameState.player.attributes?.[attr] || 0;\r\n        if (min !== undefined && value < min) return false;\r\n        if (max !== undefined && value > max) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查必需的前置事件\r\n    if (conditions.requiredEvents) {\r\n      for (const requiredEvent of conditions.requiredEvents) {\r\n        if (!this.triggeredEvents.has(requiredEvent)) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查排除的事件\r\n    if (conditions.excludedEvents) {\r\n      for (const excludedEvent of conditions.excludedEvents) {\r\n        if (this.triggeredEvents.has(excludedEvent)) return false;\r\n      }\r\n    }\r\n    \r\n    // 检查自定义条件\r\n    if (conditions.customCondition && !conditions.customCondition(gameState)) {\r\n      return false;\r\n    }\r\n    \r\n    // 概率筛选 - 提高通过概率\r\n    if (conditions.probability !== undefined) {\r\n      // 未触发过的事件增加通过概率\r\n      let adjustedProbability = conditions.probability;\r\n      const hasTriggered = this.triggeredEvents.has(event.id);\r\n      \r\n      if (!hasTriggered) {\r\n        // 未触发过的事件，概率提高50%，但不超过0.95\r\n        adjustedProbability = Math.min(0.95, adjustedProbability * 1.5);\r\n      }\r\n      \r\n      if (Math.random() > adjustedProbability) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * 检查事件是否在冷却中\r\n   * @param {string} eventId 事件ID\r\n   * @param {number} currentWeek 当前周数\r\n   * @returns {boolean} 是否在冷却中\r\n   */\r\n  isEventInCooldown(eventId, currentWeek) {\r\n    if (!this.cooldowns[eventId]) return false;\r\n    return this.cooldowns[eventId] > currentWeek;\r\n  }\r\n  \r\n  /**\r\n   * 设置事件冷却期\r\n   * @param {string} eventId 事件ID\r\n   * @param {number} currentWeek 当前周数\r\n   * @param {number} cooldownWeeks 冷却周数\r\n   */\r\n  setEventCooldown(eventId, currentWeek, cooldownWeeks = 5) { // 增加默认冷却时间从3周到5周\r\n    this.cooldowns[eventId] = currentWeek + cooldownWeeks;\r\n  }\r\n  \r\n  /**\r\n   * 记录事件触发\r\n   * @param {string} eventId 事件ID\r\n   * @param {number} week 触发周数\r\n   */\r\n  recordEvent(eventId, week) {\r\n    // 添加到已触发事件集合\r\n    this.triggeredEvents.add(eventId);\r\n    \r\n    // 添加到历史记录\r\n    this.eventHistory.push({\r\n      id: eventId,\r\n      week,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n    // 设置冷却期\r\n    const event = this.getEventById(eventId);\r\n    let cooldownWeeks;\r\n\r\n    // 根据事件类型设置不同的冷却时间\r\n    switch (event?.type) {\r\n      case EventType.PERSONAL:\r\n        cooldownWeeks = 6; // 个人事件冷却从8周减少到6周\r\n        break;\r\n      case EventType.MARKET:\r\n        cooldownWeeks = 3; // 市场事件冷却从4周减少到3周\r\n        break;\r\n      case EventType.LOCATION:\r\n        cooldownWeeks = 2; // 地点事件冷却从3周减少到2周\r\n        break;\r\n      default:\r\n        cooldownWeeks = 4; // 其他事件默认冷却从6周减少到4周\r\n    }\r\n    \r\n    // 非重复事件标记为永久冷却\r\n    if (event && !event.repeatable) {\r\n      cooldownWeeks = 999;\r\n    }\r\n\r\n    this.setEventCooldown(eventId, week, cooldownWeeks);\r\n  }\r\n  \r\n  /**\r\n   * 根据权重选择一个事件\r\n   * @param {Array} events 可选事件列表\r\n   * @param {number} gameProgress 游戏进度百分比\r\n   * @returns {Object} 选中的事件\r\n   */\r\n  selectEventByWeight(events, gameProgress = 0.5) {\r\n    if (!events || events.length === 0) return null;\r\n    \r\n    // 总权重计算\r\n    let totalWeight = 0;\r\n    const eventWeights = events.map(event => {\r\n      // 基础权重\r\n      let weight = event.weight || 1;\r\n      \r\n      // 根据事件类型调整权重\r\n      if (event.type === EventType.STORY) {\r\n        weight *= 1.2; // 提高故事事件权重\r\n      } else if (event.type === EventType.MARKET) {\r\n        weight *= 1.1; // 略微提高市场事件权重\r\n      }\r\n      \r\n      // 根据游戏阶段调整特定事件类型权重\r\n      if (event.id.startsWith('property_') && gameProgress > 0.4) {\r\n        weight *= 1 + gameProgress; // 游戏后期增加房产事件权重\r\n      }\r\n      \r\n      // 为连锁事件增加权重\r\n      if (event.options && event.options.some(opt => opt.effects && opt.effects.nextEvent)) {\r\n        weight *= 1.3; // 连锁事件有更高权重\r\n      }\r\n      \r\n      // 彩蛋事件已禁用\r\n      if (event.id === 'meet_mucs') {\r\n        return 0; // 直接返回0权重，确保彩蛋事件不会被触发\r\n      }\r\n      \r\n      // 检查事件是否已触发过\r\n      if (this.triggeredEvents.has(event.id)) {\r\n        // 已触发过的事件权重大幅降低\r\n        weight *= 0.2; // 从0.3降低到0.2，进一步降低已触发过事件的权重\r\n      } else {\r\n        // 从未触发过的事件权重增加\r\n        weight *= 2.0; // 从1.2提高到2.0，大幅提高未触发事件的权重\r\n      }\r\n      \r\n      // 记录当前事件在历史记录中出现的次数\r\n      const occurrenceCount = this.eventHistory.filter(record => record.id === event.id).length;\r\n      \r\n      // 根据历史出现次数和重复属性调整权重\r\n      if (occurrenceCount > 0) {\r\n        // 不可重复的事件直接返回0权重\r\n        if (!event.repeatable) {\r\n          return 0;\r\n        }\r\n        \r\n        // 可重复事件根据出现次数调整权重\r\n        const baseReduction = 0.5; // 基础衰减率从0.4提高到0.5，减少重复事件的衰减\r\n        const maxReduction = 0.2; // 最低保留权重比例从0.1提高到0.2\r\n        \r\n        // 使用指数衰减，但保留最低权重\r\n        const reduction = Math.max(maxReduction, Math.pow(baseReduction, occurrenceCount));\r\n        weight *= reduction;\r\n      }\r\n      \r\n      console.log(`事件权重计算 - ${event.id}: ${weight.toFixed(2)}`);\r\n      \r\n      totalWeight += weight;\r\n      return weight;\r\n    });\r\n    \r\n    // 如果总权重为0，可能所有事件都不适合触发\r\n    if (totalWeight <= 0) {\r\n      return null;\r\n    }\r\n    \r\n    // 随机选择\r\n    let random = Math.random() * totalWeight;\r\n    for (let i = 0; i < events.length; i++) {\r\n      random -= eventWeights[i];\r\n      if (random <= 0) {\r\n        return events[i];\r\n      }\r\n    }\r\n    \r\n    // 默认返回第一个\r\n    return events[0];\r\n  }\r\n  \r\n  /**\r\n   * 根据ID获取事件\r\n   * @param {string} eventId 事件ID\r\n   * @returns {Object|null} 事件对象，如果不存在则返回null\r\n   */\r\n  getEventById(eventId) {\r\n    const event = this.events.find(event => event.id === eventId);\r\n    return event ? this.prepareEvent(event) : null;\r\n  }\r\n  \r\n  /**\r\n   * 触发特定事件\r\n   * @param {string} eventId 事件ID\r\n   * @param {Object} gameState 游戏状态\r\n   * @returns {Object|null} 事件对象，如果不存在则返回null\r\n   */\r\n  triggerSpecificEvent(eventId, gameState) {\r\n    const event = this.getEventById(eventId);\r\n    if (!event) return null;\r\n    \r\n    this.recordEvent(eventId, gameState.currentWeek);\r\n    \r\n    // 使用eventEmitter通知事件触发\r\n    eventEmitter.emit(GameEventType.EVENT_TRIGGERED, {\r\n      event,\r\n      week: gameState.currentWeek,\r\n      isSpecific: true\r\n    });\r\n    \r\n    return event;\r\n  }\r\n  \r\n  /**\r\n   * 准备事件，添加必要的计算属性\r\n   * @param {Object} event 原始事件对象\r\n   * @returns {Object} 准备好的事件对象\r\n   */\r\n  prepareEvent(event) {\r\n    if (!event) return null;\r\n    \r\n    // 创建事件副本，避免修改原始数据\r\n    const preparedEvent = { ...event };\r\n    \r\n    // 处理选项\r\n    if (preparedEvent.options) {\r\n      preparedEvent.options = preparedEvent.options.map(option => {\r\n        // 处理选项文本\r\n        if (typeof option.text === 'function') {\r\n          option.displayText = option.text();\r\n        } else {\r\n          option.displayText = option.text;\r\n        }\r\n        \r\n        return option;\r\n      });\r\n    }\r\n    \r\n    return preparedEvent;\r\n  }\r\n  \r\n  /**\r\n   * 更新活跃事件状态\r\n   * @returns {Array} 当前活跃的事件效果\r\n   */\r\n  updateActiveEvents() {\r\n    // 移除已过期的事件效果\r\n    this.activeEvents = this.activeEvents.filter(effect => !effect.expired);\r\n    \r\n    // 检查事件是否已过期\r\n    const now = Date.now();\r\n    this.activeEvents.forEach(effect => {\r\n      if (effect.expiryTime && now > effect.expiryTime) {\r\n        effect.expired = true;\r\n      }\r\n    });\r\n    \r\n    return this.activeEvents;\r\n  }\r\n  \r\n  /**\r\n   * 获取当前活跃的市场修正因子\r\n   * @returns {Object} 市场修正因子\r\n   */\r\n  getActiveMarketModifiers() {\r\n    // 更新活跃事件\r\n    this.updateActiveEvents();\r\n    \r\n    // 初始化修正因子\r\n    const modifiers = {\r\n      globalPriceModifier: 1,\r\n      categoryModifiers: {},\r\n      productModifiers: {},\r\n      specialProducts: []\r\n    };\r\n    \r\n    // 应用所有活跃事件的修正因子\r\n    this.activeEvents.forEach(effect => {\r\n      if (effect.expired) return;\r\n      \r\n      // 全局价格修正\r\n      if (effect.globalPriceModifier) {\r\n        modifiers.globalPriceModifier *= effect.globalPriceModifier;\r\n      }\r\n      \r\n      // 类别价格修正\r\n      if (effect.categoryModifiers) {\r\n        Object.entries(effect.categoryModifiers).forEach(([category, modifier]) => {\r\n          modifiers.categoryModifiers[category] = (modifiers.categoryModifiers[category] || 1) * modifier;\r\n        });\r\n      }\r\n      \r\n      // 产品价格修正\r\n      if (effect.productModifiers) {\r\n        Object.entries(effect.productModifiers).forEach(([productId, modifier]) => {\r\n          modifiers.productModifiers[productId] = (modifiers.productModifiers[productId] || 1) * modifier;\r\n        });\r\n      }\r\n      \r\n      // 特殊产品\r\n      if (effect.specialProducts) {\r\n        modifiers.specialProducts = [...modifiers.specialProducts, ...effect.specialProducts];\r\n      }\r\n    });\r\n    \r\n    return modifiers;\r\n  }\r\n  \r\n  /**\r\n   * 应用事件效果\r\n   * @param {Object} gameState 游戏状态\r\n   * @param {Object} effects 效果对象\r\n   * @returns {Object} 应用后的效果结果\r\n   */\r\n  applyEventEffects(gameState, effects) {\r\n    const result = {\r\n      appliedEffects: [],\r\n      failedEffects: []\r\n    };\r\n    \r\n    console.log(\"应用事件效果:\", effects);\r\n    \r\n    // 处理金钱效果\r\n    if (effects.money !== undefined) {\r\n      const moneyChange = effects.money;\r\n      \r\n      if (moneyChange > 0) {\r\n        // 增加金钱\r\n        gameState.player.money += moneyChange;\r\n        result.appliedEffects.push({\r\n          type: 'money',\r\n          value: moneyChange,\r\n          success: true\r\n        });\r\n      } else if (moneyChange < 0) {\r\n        // 减少金钱\r\n        if (gameState.player.money + moneyChange < 0) {\r\n          // 金钱不足，放弃扣款，事件处理失败\r\n          console.warn('EventSystem - 金钱不足，无法扣款', { \r\n            required: Math.abs(moneyChange), \r\n            available: gameState.player.money \r\n          });\r\n          \r\n          result.failedEffects.push({\r\n            type: 'money',\r\n            value: moneyChange,\r\n            reason: 'insufficient_funds'\r\n          });\r\n        } else {\r\n          // 金钱足够，正常扣款\r\n          gameState.player.money += moneyChange;\r\n          result.appliedEffects.push({\r\n            type: 'money',\r\n            value: moneyChange,\r\n            success: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 处理债务效果\r\n    if (effects.debt !== undefined) {\r\n      const debtChange = effects.debt;\r\n      \r\n      if (debtChange > 0) {\r\n        // 增加债务\r\n        gameState.player.debt += debtChange;\r\n        result.appliedEffects.push({\r\n          type: 'debt',\r\n          value: debtChange,\r\n          success: true\r\n        });\r\n      } else if (debtChange < 0) {\r\n        // 减少债务\r\n        const actualReduction = Math.min(gameState.player.debt, Math.abs(debtChange));\r\n        gameState.player.debt -= actualReduction;\r\n        result.appliedEffects.push({\r\n          type: 'debt',\r\n          value: -actualReduction,\r\n          success: true\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 处理物品效果\r\n    if (effects.items) {\r\n      effects.items.forEach(item => {\r\n        if (item.quantity > 0) {\r\n          // 添加物品\r\n          const product = gameState.products.find(p => p.id === item.productId);\r\n          if (product) {\r\n            // 检查背包容量\r\n            const requiredSpace = product.size * item.quantity;\r\n            if (gameState.player.inventoryUsed + requiredSpace <= gameState.player.capacity) {\r\n              // 添加到背包\r\n              const existingItem = gameState.player.inventory.find(i => \r\n                i.productId === item.productId && i.purchasePrice === (item.price || 0)\r\n              );\r\n              \r\n              if (existingItem) {\r\n                existingItem.quantity += item.quantity;\r\n              } else {\r\n                gameState.player.inventory.push({\r\n                  productId: item.productId,\r\n                  name: product.name,\r\n                  quantity: item.quantity,\r\n                  purchasePrice: item.price || 0,\r\n                  size: product.size\r\n                });\r\n              }\r\n              \r\n              gameState.player.inventoryUsed += requiredSpace;\r\n              \r\n              result.appliedEffects.push({\r\n                type: 'item_add',\r\n                productId: item.productId,\r\n                quantity: item.quantity,\r\n                success: true\r\n              });\r\n            } else {\r\n              // 背包容量不足\r\n              result.failedEffects.push({\r\n                type: 'item_add',\r\n                productId: item.productId,\r\n                quantity: item.quantity,\r\n                reason: 'inventory_full'\r\n              });\r\n            }\r\n          } else {\r\n            // 商品不存在\r\n            result.failedEffects.push({\r\n              type: 'item_add',\r\n              productId: item.productId,\r\n              quantity: item.quantity,\r\n              reason: 'product_not_found'\r\n            });\r\n          }\r\n        } else if (item.quantity < 0) {\r\n          // 移除物品\r\n          const inventoryItem = gameState.player.inventory.find(i => i.productId === item.productId);\r\n          if (inventoryItem && inventoryItem.quantity >= Math.abs(item.quantity)) {\r\n            // 移除指定数量\r\n            const removedQuantity = Math.abs(item.quantity);\r\n            const spaceFreed = inventoryItem.size * removedQuantity;\r\n            \r\n            inventoryItem.quantity -= removedQuantity;\r\n            gameState.player.inventoryUsed -= spaceFreed;\r\n            \r\n            // 如果数量为0，从背包中移除\r\n            if (inventoryItem.quantity <= 0) {\r\n              const index = gameState.player.inventory.indexOf(inventoryItem);\r\n              gameState.player.inventory.splice(index, 1);\r\n            }\r\n            \r\n            result.appliedEffects.push({\r\n              type: 'item_remove',\r\n              productId: item.productId,\r\n              quantity: removedQuantity,\r\n              success: true\r\n            });\r\n          } else {\r\n            // 物品不足\r\n            result.failedEffects.push({\r\n              type: 'item_remove',\r\n              productId: item.productId,\r\n              quantity: Math.abs(item.quantity),\r\n              reason: 'insufficient_items'\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // 处理背包容量效果\r\n    if (effects.capacity) {\r\n      // 增加背包容量\r\n      gameState.player.capacity += effects.capacity;\r\n      result.appliedEffects.push({\r\n        type: 'capacity',\r\n        value: effects.capacity,\r\n        success: true\r\n      });\r\n    }\r\n    \r\n    // 处理属性效果\r\n    if (effects.attributes && Object.keys(effects.attributes).length > 0) {\r\n      // 确保属性对象存在\r\n      if (!gameState.player.attributes) {\r\n        gameState.player.attributes = {};\r\n      }\r\n      \r\n      // 应用每个属性变化\r\n      for (const [key, value] of Object.entries(effects.attributes)) {\r\n        const oldValue = gameState.player.attributes[key] || 0;\r\n        gameState.player.attributes[key] = value;\r\n        \r\n        result.appliedEffects.push({\r\n          type: 'attribute',\r\n          attribute: key,\r\n          oldValue: oldValue,\r\n          newValue: value,\r\n          success: true\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 处理市场效果\r\n    if (effects.market) {\r\n      // 添加临时市场修正因子\r\n      const marketEffect = {\r\n        ...effects.market,\r\n        startTime: Date.now(),\r\n        // 将持续时间从周转换为毫秒，如果没有指定持续时间，默认为两周\r\n        expiryTime: effects.market.duration ? \r\n          Date.now() + effects.market.duration * 7 * 24 * 60 * 60 * 1000 : // 周转毫秒 \r\n          Date.now() + 1209600000, // 默认两周(14天 * 24小时 * 60分 * 60秒 * 1000毫秒)\r\n        expired: false\r\n      };\r\n      \r\n      this.activeEvents.push(marketEffect);\r\n      \r\n      // 立即应用市场效果到当前价格\r\n      if (gameState.market && gameState.market.productPrices) {\r\n        // 应用全局修正因子\r\n        if (marketEffect.globalPriceModifier) {\r\n          console.log(`应用全局价格修正: ${marketEffect.globalPriceModifier}`);\r\n          \r\n          // 修改所有产品价格\r\n          for (const [productId, price] of Object.entries(gameState.market.productPrices)) {\r\n            gameState.market.productPrices[productId] *= marketEffect.globalPriceModifier;\r\n          }\r\n        }\r\n        \r\n        // 应用类别修正因子\r\n        if (marketEffect.categoryModifiers) {\r\n          for (const [category, modifier] of Object.entries(marketEffect.categoryModifiers)) {\r\n            console.log(`应用类别 ${category} 价格修正: ${modifier}`);\r\n            \r\n            // 找到该类别的所有产品\r\n            const categoryProducts = gameState.products?.filter(p => p.category === category) || [];\r\n            \r\n            // 修改这些产品的价格\r\n            for (const product of categoryProducts) {\r\n              if (gameState.market.productPrices[product.id]) {\r\n                gameState.market.productPrices[product.id] *= modifier;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 应用产品修正因子\r\n        if (marketEffect.productModifiers) {\r\n          for (const [productId, modifier] of Object.entries(marketEffect.productModifiers)) {\r\n            console.log(`应用产品 ${productId} 价格修正: ${modifier}`);\r\n            \r\n            if (gameState.market.productPrices[productId]) {\r\n              gameState.market.productPrices[productId] *= modifier;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 确保只添加一次市场效果\r\n      if (!result.appliedEffects.some(effect => effect.type === 'market')) {\r\n        result.appliedEffects.push({\r\n          type: 'market',\r\n          effect: {\r\n            globalPriceModifier: marketEffect.globalPriceModifier,\r\n            categoryModifiers: marketEffect.categoryModifiers,\r\n            productModifiers: marketEffect.productModifiers,\r\n            locationModifiers: marketEffect.locationModifiers,\r\n            locationProductModifiers: marketEffect.locationProductModifiers,\r\n            duration: marketEffect.duration\r\n          },\r\n          success: true\r\n        });\r\n      }\r\n    }\r\n    \r\n    // 处理后续事件\r\n    if (effects.nextEvent) {\r\n      result.appliedEffects.push({\r\n        type: 'next_event',\r\n        eventId: effects.nextEvent,\r\n        success: true\r\n      });\r\n    }\r\n    \r\n    // 处理地点变更\r\n    if (effects.locationChange) {\r\n      result.appliedEffects.push({\r\n        type: 'location_change',\r\n        locationId: effects.locationChange,\r\n        success: true\r\n      });\r\n    }\r\n    \r\n    // 使用eventEmitter通知事件效果已应用\r\n    eventEmitter.emit(GameEventType.EVENT_EFFECTS_APPLIED, {\r\n      effects: result.appliedEffects,\r\n      failedEffects: result.failedEffects\r\n    });\r\n    \r\n    return result;\r\n  }\r\n  \r\n  /**\r\n   * 重置事件系统\r\n   */\r\n  reset() {\r\n    this.triggeredEvents.clear();\r\n    this.activeEvents = [];\r\n    this.eventHistory = [];\r\n    this.cooldowns = {};\r\n  }\r\n  \r\n  /**\r\n   * 获取可保存的状态\r\n   * @returns {Object} 可保存的状态对象\r\n   */\r\n  getSaveState() {\r\n    return {\r\n      triggeredEvents: Array.from(this.triggeredEvents),\r\n      activeEvents: this.activeEvents,\r\n      eventHistory: this.eventHistory,\r\n      cooldowns: this.cooldowns\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * 从保存的状态中加载\r\n   * @param {Object} saveState 保存的状态对象\r\n   */\r\n  loadFromSaveState(saveState) {\r\n    if (!saveState) return;\r\n    \r\n    this.triggeredEvents = new Set(saveState.triggeredEvents || []);\r\n    this.activeEvents = saveState.activeEvents || [];\r\n    this.eventHistory = saveState.eventHistory || [];\r\n    this.cooldowns = saveState.cooldowns || {};\r\n  }\r\n} ","import { defineStore } from 'pinia';\r\nimport { getAllEvents } from '@/core/models/event';\r\nimport { EventSystem, GameEventType } from '@/core/services/eventSystem';\r\nimport eventEmitter from '@/infrastructure/eventEmitter';\r\nimport { handleError, ErrorType, ErrorSeverity } from '@/infrastructure/utils/errorHandler';\r\n\r\n/**\r\n * 事件状态管理\r\n * 负责事件的触发和处理\r\n */\r\nexport const useEventStore = defineStore('event', {\r\n  state: () => ({\r\n    activeEvents: [],\r\n    activeEvent: null,\r\n    forceLocationChange: false,\r\n    targetLocation: null,\r\n    nextEventId: null,\r\n    triggeredEvents: [],\r\n    eventSystem: null\r\n  }),\r\n  \r\n  actions: {\r\n    /**\r\n     * 初始化事件系统\r\n     * @returns {Promise} 初始化完成的Promise\r\n     */\r\n    initializeEvents() {\r\n      console.log('EventStore - 初始化事件系统');\r\n      \r\n      return new Promise((resolve) => {\r\n        // 模拟加载过程\r\n        setTimeout(() => {\r\n          this.initEventSystem();\r\n          console.log('EventStore - 事件系统初始化完成');\r\n          resolve();\r\n        }, 300);\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * 初始化事件系统\r\n     */\r\n    initEventSystem() {\r\n      this.eventSystem = new EventSystem(getAllEvents());\r\n      this.activeEvents = [];\r\n      this.activeEvent = null;\r\n      this.forceLocationChange = false;\r\n      this.targetLocation = null;\r\n      this.nextEventId = null;\r\n      this.triggeredEvents = [];\r\n      \r\n      // 订阅事件系统的事件\r\n      this.setupEventListeners();\r\n    },\r\n    \r\n    /**\r\n     * 设置事件监听器\r\n     */\r\n    setupEventListeners() {\r\n      // 监听事件触发\r\n      eventEmitter.on(GameEventType.EVENT_TRIGGERED, (data) => {\r\n        this.activeEvent = data.event;\r\n      });\r\n      \r\n      // 监听事件完成\r\n      eventEmitter.on(GameEventType.EVENT_COMPLETED, (data) => {\r\n        this.activeEvent = null;\r\n        \r\n        // 处理后续事件\r\n        if (data.nextEventId) {\r\n          this.nextEventId = data.nextEventId;\r\n        }\r\n      });\r\n      \r\n      // 监听事件效果应用\r\n      eventEmitter.on(GameEventType.EVENT_EFFECTS_APPLIED, (data) => {\r\n        // 处理地点变更效果\r\n        const locationChangeEffect = data.effects.find(effect => effect.type === 'location_change');\r\n        if (locationChangeEffect) {\r\n          this.forceLocationChange = true;\r\n          this.targetLocation = locationChangeEffect.locationId;\r\n        }\r\n        \r\n        // 处理后续事件\r\n        const nextEventEffect = data.effects.find(effect => effect.type === 'next_event');\r\n        if (nextEventEffect) {\r\n          this.nextEventId = nextEventEffect.eventId;\r\n        }\r\n      });\r\n    },\r\n    \r\n    /**\r\n     * 重置事件状态\r\n     */\r\n    resetEvents() {\r\n      if (this.eventSystem) {\r\n        this.eventSystem.reset();\r\n      } else {\r\n        this.initEventSystem();\r\n      }\r\n      \r\n      this.activeEvents = [];\r\n      this.activeEvent = null;\r\n      this.forceLocationChange = false;\r\n      this.targetLocation = null;\r\n      this.nextEventId = null;\r\n      this.triggeredEvents = [];\r\n    },\r\n    \r\n    /**\r\n     * 生成随机事件\r\n     * @param {number} currentWeek - 当前周数\r\n     * @param {Object} playerData - 玩家数据\r\n     * @param {Object} marketData - 市场数据\r\n     * @returns {Object|null} 生成的事件，如果没有生成则返回null\r\n     */\r\n    generateRandomEvent(currentWeek, playerData, marketData) {\r\n      console.log('EventStore - 尝试生成随机事件, 当前周数:', currentWeek);\r\n      \r\n      // 已经有待处理的事件，优先处理\r\n      if (this.activeEvent !== null) {\r\n        console.log('EventStore - 已有待处理事件，跳过生成:', this.activeEvent.id);\r\n        return null;\r\n      }\r\n      \r\n      // 如果有预设的下一个事件，优先触发\r\n      if (this.nextEventId) {\r\n        console.log('EventStore - 检测到预设的下一个事件:', this.nextEventId);\r\n        const nextEvent = this.eventSystem.getEventById(this.nextEventId);\r\n        this.nextEventId = null;\r\n        \r\n        if (nextEvent) {\r\n          console.log('EventStore - 触发预设事件:', nextEvent.id, nextEvent.title);\r\n          // 记录事件触发\r\n          this.triggeredEvents.push({\r\n            id: nextEvent.id,\r\n            week: currentWeek\r\n          });\r\n          \r\n          // 将事件加入活跃事件列表\r\n          this.activeEvent = nextEvent;\r\n          return nextEvent;\r\n        }\r\n      }\r\n      \r\n      // 创建游戏状态对象\r\n      console.log('EventStore - 创建游戏状态对象');\r\n      console.log('EventStore - playerData:', playerData ? '已提供' : '未提供');\r\n      console.log('EventStore - marketData:', marketData ? '已提供' : '未提供');\r\n      \r\n      try {\r\n        const gameState = {\r\n          currentWeek,\r\n          player: playerData,\r\n          market: marketData,\r\n          currentLocation: marketData.currentLocation\r\n        };\r\n          \r\n        console.log('EventStore - 游戏状态对象创建成功');\r\n        console.log('EventStore - 当前地点:', gameState.currentLocation ? gameState.currentLocation.id : '未知');\r\n        \r\n        // 特殊处理：尝试触发彩蛋事件\r\n        const randomValue = Math.random();\r\n        const easterEggChance = 0.15; // 15%的概率尝试触发彩蛋事件\r\n        \r\n        if (randomValue < easterEggChance) {\r\n          console.log('EventStore - 尝试触发彩蛋事件');\r\n          const easterEggEvent = this.eventSystem.getEventById('meet_mucs');\r\n          \r\n          if (easterEggEvent && this.eventSystem.checkEventConditions(easterEggEvent, gameState)) {\r\n            console.log('EventStore - 成功触发彩蛋事件:', easterEggEvent.id, easterEggEvent.title);\r\n            \r\n            // 记录触发的事件\r\n            this.triggeredEvents.push({\r\n              id: easterEggEvent.id,\r\n              week: currentWeek\r\n            });\r\n            \r\n            // 将事件设置为活跃事件\r\n            this.activeEvent = easterEggEvent;\r\n            return easterEggEvent;\r\n          }\r\n        }\r\n        \r\n        // 计算额外的事件触发概率\r\n        const extraEventChance = Math.min(0.3, currentWeek * 0.01); // 随着游戏周数增加，额外增加事件概率\r\n      \r\n        // 使用事件系统检查是否应该触发事件\r\n        console.log('EventStore - 调用事件系统检查事件，额外概率:', extraEventChance);\r\n        let randomEvent = this.eventSystem.checkForEvents(gameState);\r\n        \r\n        // 如果没有生成事件，但随机数小于额外概率，则强制生成一个事件\r\n        if (!randomEvent && Math.random() < extraEventChance) {\r\n          console.log('EventStore - 应用额外概率，强制尝试生成事件');\r\n          // 再次尝试生成事件，使用更宽松的条件\r\n          randomEvent = this.eventSystem.generateStageAppropriateEvent(gameState);\r\n        }\r\n      \r\n        if (randomEvent) {\r\n          console.log('EventStore - 成功生成事件:', randomEvent.id, randomEvent.title);\r\n          \r\n          // 记录触发的事件\r\n          this.triggeredEvents.push({\r\n            id: randomEvent.id,\r\n            week: currentWeek\r\n          });\r\n        \r\n          // 将事件设置为活跃事件\r\n          this.activeEvent = randomEvent;\r\n          return randomEvent;\r\n        } else {\r\n          console.log('EventStore - 没有生成事件');\r\n          return null;\r\n        }\r\n      } catch (error) {\r\n        handleError(error, 'EventState.generateRandomEvent', ErrorType.GAME_LOGIC, ErrorSeverity.ERROR);\r\n        console.error('EventStore - 生成随机事件时出错:', error);\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 触发特定事件\r\n     * @param {string} eventId - 事件ID\r\n     * @param {Object} playerData - 玩家数据\r\n     * @param {Object} marketData - 市场数据\r\n     * @returns {Object|null} 触发的事件，如果事件不存在则返回null\r\n     */\r\n    triggerSpecificEvent(eventId, playerData, marketData) {\r\n      // 创建游戏状态对象\r\n      const gameState = {\r\n        currentWeek: playerData.statistics.weekCount,\r\n        player: playerData,\r\n        market: marketData,\r\n        currentLocation: marketData.currentLocation\r\n      };\r\n      \r\n      // 使用事件系统触发特定事件\r\n      const event = this.eventSystem.triggerSpecificEvent(eventId, gameState);\r\n      \r\n      if (event) {\r\n        // 记录触发的事件\r\n        this.triggeredEvents.push({\r\n          id: event.id,\r\n          week: playerData.statistics.weekCount\r\n        });\r\n        \r\n        return event;\r\n      }\r\n      \r\n      return null;\r\n    },\r\n    \r\n    /**\r\n     * 触发教程事件\r\n     * @param {string} eventId - 教程事件ID\r\n     * @returns {Object|null} 触发的事件，如果事件不存在则返回null\r\n     */\r\n    triggerTutorialEvent(eventId) {\r\n      // 教程事件通常有特殊前缀\r\n      const tutorialEventId = eventId.startsWith('tutorial_') ? eventId : `tutorial_${eventId}`;\r\n      const event = this.eventSystem.getEventById(tutorialEventId);\r\n      \r\n      if (event) {\r\n        this.activeEvent = event;\r\n        return event;\r\n      }\r\n      \r\n      return null;\r\n    },\r\n    \r\n    /**\r\n     * 通用事件触发方法\r\n     * @param {string} eventId - 事件ID\r\n     * @returns {boolean} 是否成功触发\r\n     */\r\n    triggerEvent(eventId) {\r\n      try {\r\n        // 如果是教程事件\r\n        if (eventId.startsWith('tutorial_')) {\r\n          const event = this.triggerTutorialEvent(eventId);\r\n          return !!event;\r\n        } \r\n        // 否则尝试作为普通事件触发\r\n        else {\r\n          // 由于没有playerData和marketData参数，我们只能简单地获取事件\r\n          const event = this.eventSystem?.getEventById(eventId);\r\n          if (event) {\r\n            this.activeEvent = event;\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      } catch (error) {\r\n        handleError(error, 'EventState.triggerEvent', ErrorType.GAME_LOGIC, ErrorSeverity.WARNING);\r\n        console.error('触发事件失败:', error);\r\n        return false;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * 处理事件选项选择\r\n     * @param {Object} option - 选择的选项\r\n     * @param {Object} playerData - 玩家数据\r\n     * @param {Object} marketData - 市场数据\r\n     * @returns {Object} 选项效果\r\n     */\r\n    handleEventOption(option, playerData, marketData) {\r\n      if (!this.activeEvent || !option) {\r\n        return { success: false, message: '无效的事件或选项', appliedEffects: [] };\r\n      }\r\n      \r\n      console.log('EventState - 处理事件选项:', option);\r\n      console.log('EventState - 当前事件:', this.activeEvent.id);\r\n      \r\n      // 创建游戏状态对象\r\n      const gameState = {\r\n        currentWeek: playerData.statistics.weekCount,\r\n        player: playerData,\r\n        market: marketData,\r\n        currentLocation: marketData.currentLocation,\r\n        products: marketData.products\r\n      };\r\n      \r\n      // 使用事件系统应用效果\r\n      let result;\r\n      try {\r\n        result = this.eventSystem.applyEventEffects(gameState, option.effects);\r\n      console.log('EventState - 事件效果应用结果:', result);\r\n      } catch (error) {\r\n        console.error('EventState - 应用事件效果时出错:', error);\r\n        handleError(error, 'EventState.handleEventOption', ErrorType.GAME_LOGIC, ErrorSeverity.ERROR);\r\n        result = { \r\n          success: false, \r\n          message: '应用事件效果时出错',\r\n          appliedEffects: []\r\n        };\r\n      }\r\n      \r\n      // 确保返回对象具有必要的属性\r\n      const processedResult = result || { success: true, appliedEffects: [] };\r\n      if (typeof processedResult.success === 'undefined') {\r\n        processedResult.success = true;\r\n      }\r\n      if (!processedResult.appliedEffects) {\r\n        processedResult.appliedEffects = [];\r\n      }\r\n      \r\n      // 处理下一个事件\r\n      if (option.effects && option.effects.nextEvent) {\r\n        this.nextEventId = option.effects.nextEvent;\r\n        console.log('EventState - 设置下一个事件:', this.nextEventId);\r\n      }\r\n      \r\n      // 处理强制地点变更\r\n      if (option.effects && option.effects.forceLocationChange) {\r\n        this.forceLocationChange = true;\r\n        this.targetLocation = option.effects.targetLocation;\r\n        console.log('EventState - 设置强制地点变更:', this.targetLocation);\r\n      }\r\n      \r\n      // 处理背包容量变化\r\n      if (option.effects && option.effects.capacity && option.effects.capacity > 0) {\r\n        console.log('EventState - 背包容量增加:', option.effects.capacity);\r\n        playerData.capacity += option.effects.capacity;\r\n        \r\n        // 添加到应用效果列表\r\n        if (!processedResult.appliedEffects.some(e => e.type === 'capacity')) {\r\n          processedResult.appliedEffects.push({\r\n            type: 'capacity',\r\n            value: option.effects.capacity,\r\n            success: true\r\n          });\r\n        }\r\n      }\r\n      \r\n      // 处理属性变化\r\n      if (option.effects && option.effects.attributes) {\r\n        console.log('EventState - 玩家属性变化:', option.effects.attributes);\r\n        if (!playerData.attributes) {\r\n          playerData.attributes = {};\r\n        }\r\n        \r\n        // 应用每个属性变化\r\n        for (const [key, value] of Object.entries(option.effects.attributes)) {\r\n          const oldValue = playerData.attributes[key];\r\n          playerData.attributes[key] = value;\r\n          \r\n          // 添加到应用效果列表\r\n          processedResult.appliedEffects.push({\r\n            type: 'attribute',\r\n            attribute: key,\r\n            oldValue: oldValue,\r\n            newValue: value,\r\n            success: true\r\n          });\r\n        }\r\n      }\r\n      \r\n      // 更新市场数据以反映事件效果\r\n      if (marketData && processedResult.appliedEffects) {\r\n        // 检查是否有市场效果\r\n        const marketEffects = processedResult.appliedEffects.filter(effect => effect.type === 'market');\r\n        if (marketEffects.length > 0) {\r\n          console.log('EventState - 应用市场效果到市场数据');\r\n          \r\n          // 重新计算所有商品价格\r\n          if (typeof marketData.calculateAllPrices === 'function') {\r\n            marketData.calculateAllPrices();\r\n          } else if (typeof marketData.updatePrices === 'function') {\r\n            marketData.updatePrices();\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 事件处理完成，通知事件完成\r\n      eventEmitter.emit(GameEventType.EVENT_COMPLETED, {\r\n        eventId: this.activeEvent.id,\r\n        optionId: option.id,\r\n        nextEventId: this.nextEventId,\r\n        effects: processedResult.appliedEffects\r\n      });\r\n      \r\n      // 清除当前事件\r\n      this.activeEvent = null;\r\n      \r\n      return processedResult;\r\n    },\r\n    \r\n    /**\r\n     * 获取当前活跃的市场修正因子\r\n     * @returns {Object} 市场修正因子\r\n     */\r\n    getActiveMarketModifiers() {\r\n      if (!this.eventSystem) return {};\r\n      return this.eventSystem.getActiveMarketModifiers();\r\n    },\r\n    \r\n    /**\r\n     * 清除强制地点变更标记\r\n     */\r\n    clearForceLocationChange() {\r\n      this.forceLocationChange = false;\r\n      this.targetLocation = null;\r\n    },\r\n    \r\n    /**\r\n     * 清除下一个事件标记\r\n     */\r\n    clearNextEvent() {\r\n      this.nextEventId = null;\r\n    }\r\n  },\r\n  \r\n  getters: {\r\n    /**\r\n     * 获取当前事件\r\n     * @returns {Object|null} 当前事件\r\n     */\r\n    currentEvent(state) {\r\n      return state.activeEvent;\r\n    },\r\n    \r\n    /**\r\n     * 是否需要地点变更\r\n     * @returns {boolean} 是否需要地点变更\r\n     */\r\n    needsLocationChange(state) {\r\n      return state.forceLocationChange;\r\n    },\r\n    \r\n    /**\r\n     * 目标地点ID\r\n     * @returns {string|null} 目标地点ID\r\n     */\r\n    targetLocationId(state) {\r\n      return state.targetLocation;\r\n    },\r\n    \r\n    /**\r\n     * 事件统计信息\r\n     * @returns {Object} 事件统计信息\r\n     */\r\n    eventStatistics(state) {\r\n      if (!state.eventSystem) return { total: 0, byType: {} };\r\n      \r\n      const total = state.triggeredEvents.length;\r\n      const byType = {};\r\n      \r\n      // 按类型统计事件\r\n      state.triggeredEvents.forEach(event => {\r\n        const fullEvent = state.eventSystem.getEventById(event.id);\r\n        if (fullEvent) {\r\n          const type = fullEvent.type || 'unknown';\r\n          byType[type] = (byType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      return { total, byType };\r\n    }\r\n  }\r\n}); ","import { useEventStore } from './eventState';\r\nimport { usePlayerStore } from '../player';\r\nimport { useMarketStore } from '../market';\r\n\r\n/**\r\n * 事件操作模块\r\n * 提供事件相关操作功能\r\n */\r\nexport const useEventActions = () => {\r\n  const eventStore = useEventStore();\r\n  const playerStore = usePlayerStore();\r\n  const marketStore = useMarketStore();\r\n  \r\n  /**\r\n   * 生成随机事件\r\n   * @param {number} currentWeek - 当前周数\r\n   * @returns {Object|null} 生成的事件或null\r\n   */\r\n  const generateRandomEvent = (currentWeek) => {\r\n    // 获取需要的数据\r\n    const playerData = {\r\n      money: playerStore.money,\r\n      debt: playerStore.debt,\r\n      inventory: playerStore.inventory,\r\n      statistics: playerStore.statistics,\r\n      purchasedHouses: playerStore.purchasedHouses\r\n    };\r\n    \r\n    const marketData = {\r\n      marketModifiers: marketStore.marketModifiers,\r\n      currentLocation: marketStore.currentLocation ? marketStore.currentLocation.id : null,\r\n      productPrices: marketStore.productPrices\r\n    };\r\n    \r\n    // 生成事件\r\n    return eventStore.generateRandomEvent(currentWeek, playerData, marketData);\r\n  };\r\n  \r\n  /**\r\n   * 处理事件选项\r\n   * @param {Object|number} option - 选项对象或选项索引\r\n   * @returns {Object} 处理结果\r\n   */\r\n  const handleEventOption = (option) => {\r\n    // 获取当前事件\r\n    const currentEvent = eventStore.currentEvent;\r\n    if (!currentEvent) {\r\n      return { success: false, message: '没有活跃事件' };\r\n    }\r\n    \r\n    // 如果传入索引，获取对应的选项\r\n    let selectedOption = option;\r\n    if (typeof option === 'number') {\r\n      if (option < 0 || option >= currentEvent.options.length) {\r\n        return { success: false, message: '无效的选项索引' };\r\n      }\r\n      selectedOption = currentEvent.options[option];\r\n    }\r\n    \r\n    // 如果没有提供有效的选项\r\n    if (!selectedOption) {\r\n      console.warn('EventActions - 无法处理空选项');\r\n      return { success: false, message: '无效的选项' };\r\n    }\r\n    \r\n    try {\r\n      console.log('EventActions - 处理选项:', selectedOption);\r\n      \r\n      // 获取选项的效果\r\n      const effects = selectedOption.effects || {};\r\n      \r\n      // 获取需要的数据\r\n      const playerData = playerStore;\r\n      const marketData = marketStore;\r\n      \r\n      // 处理选项前记录状态\r\n      const beforeState = {\r\n        money: playerStore.money,\r\n        debt: playerStore.debt,\r\n        capacity: playerStore.capacity,\r\n        inventoryUsed: playerStore.inventoryUsed,\r\n        inventoryCount: playerStore.inventory.length\r\n      };\r\n      \r\n      console.log('EventActions - 处理选项前状态:', beforeState);\r\n      \r\n      // 处理选项\r\n      const result = eventStore.handleEventOption(selectedOption, playerData, marketData);\r\n      \r\n      // 处理选项后记录状态\r\n      const afterState = {\r\n        money: playerStore.money,\r\n        debt: playerStore.debt,\r\n        capacity: playerStore.capacity,\r\n        inventoryUsed: playerStore.inventoryUsed,\r\n        inventoryCount: playerStore.inventory.length\r\n      };\r\n      \r\n      console.log('EventActions - 处理选项后状态:', afterState);\r\n      \r\n      // 计算变化\r\n      const changes = {\r\n        money: afterState.money - beforeState.money,\r\n        debt: afterState.debt - beforeState.debt,\r\n        capacity: afterState.capacity - beforeState.capacity,\r\n        inventoryUsed: afterState.inventoryUsed - beforeState.inventoryUsed,\r\n        inventoryCount: afterState.inventoryCount - beforeState.inventoryCount\r\n      };\r\n      \r\n      console.log('EventActions - 状态变化:', changes);\r\n      \r\n      // 确保result是一个对象\r\n      const processedResult = result || { success: true };\r\n      \r\n      // 处理结果\r\n      if (processedResult.success !== false) {\r\n        // 标记为成功\r\n        processedResult.success = true;\r\n        \r\n        // 确保result有appliedEffects属性\r\n        if (!processedResult.appliedEffects) {\r\n          processedResult.appliedEffects = [];\r\n        }\r\n        \r\n        // 添加状态变化到效果列表\r\n        if (changes.money !== 0 && !processedResult.appliedEffects.some(e => e.type === 'money')) {\r\n          processedResult.appliedEffects.push({\r\n            type: 'money',\r\n            value: changes.money,\r\n            success: true\r\n          });\r\n        }\r\n        \r\n        if (changes.debt !== 0 && !processedResult.appliedEffects.some(e => e.type === 'debt')) {\r\n          processedResult.appliedEffects.push({\r\n            type: 'debt',\r\n            value: changes.debt,\r\n            success: true\r\n          });\r\n        }\r\n        \r\n        if (changes.capacity !== 0 && !processedResult.appliedEffects.some(e => e.type === 'capacity')) {\r\n          processedResult.appliedEffects.push({\r\n            type: 'capacity',\r\n            value: changes.capacity,\r\n            success: true\r\n          });\r\n        }\r\n        \r\n        // 处理市场效果，提供更详细的市场效果信息\r\n        if (effects.market) {\r\n          // 检查是否已经添加了市场效果，避免重复\r\n          if (!processedResult.appliedEffects.some(e => e.type === 'market')) {\r\n            const marketEffect = {\r\n              type: 'market',\r\n              effect: { ...effects.market },\r\n              success: true\r\n            };\r\n            \r\n            // 确保显示所有市场修改类型\r\n            if (effects.market.globalPriceModifier || \r\n                effects.market.categoryModifiers || \r\n                effects.market.productModifiers || \r\n                effects.market.locationModifiers || \r\n                effects.market.locationProductModifiers) {\r\n              \r\n              // 如果需要添加更多详细信息，比如影响的具体商品名称等，可以在这里处理\r\n              // 但要避免信息过多导致UI显示问题\r\n              \r\n              processedResult.appliedEffects.push(marketEffect);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 处理强制地点变更\r\n        if (processedResult.effects && processedResult.effects.locationChanged && eventStore.needsLocationChange) {\r\n          const targetLocation = eventStore.targetLocationId;\r\n          if (targetLocation) {\r\n            marketStore.changeLocation(targetLocation);\r\n            eventStore.clearForceLocationChange();\r\n            \r\n            // 添加地点变更效果\r\n            processedResult.appliedEffects.push({\r\n              type: 'info',\r\n              description: `已前往${getLocationName(targetLocation)}`,\r\n              success: true\r\n            });\r\n          }\r\n        }\r\n        \r\n        // 如果没有应用任何效果，添加一个空效果\r\n        if (processedResult.appliedEffects.length === 0) {\r\n          processedResult.appliedEffects.push({\r\n            type: 'info',\r\n            description: '选项已执行，但没有产生直接效果',\r\n            success: true\r\n          });\r\n        }\r\n      }\r\n      \r\n      return processedResult;\r\n    } catch (error) {\r\n      console.error('EventActions - 处理选项出错:', error);\r\n      return {\r\n        success: false,\r\n        message: '处理选项时出错: ' + (error.message || '未知错误'),\r\n        appliedEffects: [{\r\n          type: 'error',\r\n          description: '处理选项失败: ' + (error.message || '未知错误'),\r\n          success: false\r\n        }]\r\n      };\r\n    }\r\n  };\r\n  \r\n  // 获取地点名称\r\n  const getLocationName = (locationId) => {\r\n    const locationMap = {\r\n      'commodity_market': '大宗商品市场',\r\n      'second_hand_market': '二手市场',\r\n      'premium_mall': '高端商场',\r\n      'electronics_hub': '电子产品中心',\r\n      'black_market': '黑市'\r\n    };\r\n    return locationMap[locationId] || locationId;\r\n  };\r\n  \r\n  /**\r\n   * 触发特定事件\r\n   * @param {string} eventId - 事件ID\r\n   * @returns {Object|null} 触发的事件\r\n   */\r\n  const triggerSpecificEvent = (eventId) => {\r\n    // 获取需要的数据\r\n    const playerData = {\r\n      money: playerStore.money,\r\n      debt: playerStore.debt,\r\n      inventory: playerStore.inventory,\r\n      statistics: playerStore.statistics,\r\n      purchasedHouses: playerStore.purchasedHouses\r\n    };\r\n    \r\n    const marketData = {\r\n      marketModifiers: marketStore.marketModifiers,\r\n      currentLocation: marketStore.currentLocation ? marketStore.currentLocation.id : null,\r\n      productPrices: marketStore.productPrices\r\n    };\r\n    \r\n    // 触发特定事件\r\n    return eventStore.triggerSpecificEvent(eventId, playerData, marketData);\r\n  };\r\n  \r\n  /**\r\n   * 触发教程事件\r\n   * @param {string} tutorialStep - 教程步骤\r\n   * @returns {Object|null} 触发的教程事件\r\n   */\r\n  const triggerTutorialEvent = (tutorialStep) => {\r\n    return eventStore.triggerTutorialEvent(tutorialStep);\r\n  };\r\n  \r\n  /**\r\n   * 获取当前活跃事件\r\n   * @returns {Object|null} 当前事件\r\n   */\r\n  const getCurrentEvent = () => {\r\n    return eventStore.currentEvent;\r\n  };\r\n  \r\n  /**\r\n   * 检查是否有待处理的事件\r\n   * @returns {boolean} 是否有待处理事件\r\n   */\r\n  const hasPendingEvent = () => {\r\n    return eventStore.currentEvent !== null;\r\n  };\r\n  \r\n  /**\r\n   * 获取事件统计数据\r\n   * @returns {Object} 事件统计\r\n   */\r\n  const getEventStatistics = () => {\r\n    return eventStore.eventStatistics;\r\n  };\r\n  \r\n  return {\r\n    generateRandomEvent,\r\n    handleEventOption,\r\n    triggerSpecificEvent,\r\n    triggerTutorialEvent,\r\n    getCurrentEvent,\r\n    hasPendingEvent,\r\n    getEventStatistics\r\n  };\r\n}; ","import { defineStore } from 'pinia';\nimport { usePlayerStore } from '../player';\nimport { useMarketStore } from '../market';\nimport { useEventStore } from '../events';\nimport { handleError, ErrorType, ErrorSeverity } from '../../infrastructure/utils/errorHandler';\n\n/**\n * 游戏核心状态管理\n * 负责管理游戏流程、周数和全局游戏状态\n */\nexport const useGameCoreStore = defineStore('gameCore', {\n  state: () => ({\n    currentWeek: 1,\n    maxWeeks: 52,\n    gameStarted: false,\n    gamePaused: false,\n    gameOver: false,\n    victoryAchieved: false, // 新增：标记玩家是否已达成胜利条件\n    gameResult: null,\n    notifications: [],\n    initialized: false, // 新增：标记游戏是否已初始化\n    gameGoals: {\n      requiredNetWorth: 400000,\n      targetWeeks: 30\n    }\n  }),\n\n  actions: {\n    /**\n     * 开始新游戏\n     * @param {string} playerName - 玩家名称\n     */\n    async startNewGame(playerName) {\n      console.log('GameCore - 开始新游戏:', playerName);\n\n      this.currentWeek = 1;\n      this.gameStarted = true;\n      this.gamePaused = false;\n      this.gameOver = false; // 确保游戏开始时不是结束状态\n      this.victoryAchieved = false; // 重置胜利标志\n      this.gameResult = null;\n\n      try {\n        // 初始化其他模块\n        const playerStore = usePlayerStore();\n        const marketStore = useMarketStore();\n        const eventStore = useEventStore();\n\n        // 等待玩家初始化完成\n        await playerStore.initializePlayer(playerName);\n\n        // 确保名称已被设置\n        if (!playerStore.name && playerName) {\n          playerStore.name = playerName;\n        }\n\n        marketStore.initializeMarket().then(() => {\n          // 确保市场初始化完成后立即更新当前地点的商品\n          marketStore.updateLocationProducts();\n          console.log('GameCore - 市场商品已更新');\n        });\n        eventStore.resetEvents();\n\n        // 保存玩家名称到本地存储\n        localStorage.setItem('lastPlayerName', playerName);\n\n        console.log('GameCore - 游戏初始化完成');\n      } catch (error) {\n        handleError(error, 'gameState (gameCore)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n        console.error('GameCore - 初始化游戏模块时出错:', error);\n        throw error;\n      }\n    },\n\n    /**\n     * 进入下一周\n     * @returns {boolean} 是否成功进入下一周\n     */\n    advanceWeek() {\n      // 允许当前周数等于最大周数，只有超过时才无法继续\n      if (this.currentWeek <= this.maxWeeks && !this.gameOver) {\n        this.currentWeek++;\n        console.log(`GameCore - 进入第 ${this.currentWeek} 周`);\n\n        const playerStore = usePlayerStore();\n        const marketStore = useMarketStore();\n        const eventStore = useEventStore();\n\n        // 更新玩家信息（债务等）\n        console.log('GameCore - 更新玩家状态');\n        playerStore.updateWeeklyPlayerState(this.currentWeek);\n\n        // 更新市场\n        console.log('GameCore - 更新市场状态');\n        marketStore.updateMarketState(this.currentWeek);\n\n        // 生成随机事件\n        console.log('GameCore - 准备生成随机事件');\n\n        // 准备传递给事件系统的数据\n        const playerData = {\n          money: playerStore.money,\n          debt: playerStore.debt,\n          inventory: playerStore.inventory,\n          statistics: playerStore.statistics,\n          purchasedHouses: playerStore.purchasedHouses,\n          name: playerStore.name,\n          capacity: playerStore.capacity,\n          inventoryUsed: playerStore.inventoryUsed\n        };\n\n        console.log('GameCore - 已准备玩家数据:', {\n          money: playerData.money,\n          debt: playerData.debt,\n          inventoryCount: playerData.inventory.length\n        });\n\n        // 创建市场数据对象，确保包含必要的数据\n        const marketData = {\n          marketModifiers: marketStore.marketModifiers,\n          currentLocation: marketStore.currentLocation,\n          productPrices: marketStore.productPrices,\n          products: marketStore.products,\n          locations: marketStore.locations\n        };\n\n        console.log('GameCore - 已准备市场数据:', {\n          currentLocationId: marketData.currentLocation ? marketData.currentLocation.id : '未设置',\n          productCount: marketData.products.length,\n          locationCount: marketData.locations.length\n        });\n\n        // 调用事件系统生成随机事件，传递当前周数、玩家数据和市场数据\n        console.log('GameCore - 调用事件生成函数');\n\n        // 增加事件生成概率：先尝试生成一次\n        let event = eventStore.generateRandomEvent(\n          this.currentWeek,\n          playerData,\n          marketData\n        );\n\n        // 如果第一次没有生成事件，并且当前周数是3的倍数，再尝试一次\n        if (!event && this.currentWeek % 3 === 0) {\n          console.log('GameCore - 第一次未生成事件，尝试第二次生成');\n          event = eventStore.generateRandomEvent(\n            this.currentWeek,\n            playerData,\n            marketData\n          );\n        }\n\n        // 输出事件生成结果\n        if (event) {\n          console.log('GameCore - 成功生成随机事件:', event.id, event.title);\n\n          // 将事件添加到活跃事件队列\n          if (!eventStore.activeEvents.includes(event)) {\n            eventStore.activeEvents.push(event);\n            console.log('GameCore - 事件已加入活跃队列, 当前队列长度:', eventStore.activeEvents.length);\n          }\n        } else {\n          console.log('GameCore - 本周未触发事件');\n        }\n\n        // 检查游戏结束条件\n        this.checkGameEnd();\n\n        return true;\n      } else {\n        // 只有在经典模式下（maxWeeks为52）才设置游戏结束状态\n        // 修改逻辑：currentWeek > maxWeeks 时才设置游戏结束状态\n        if (this.maxWeeks === 52 && this.currentWeek > this.maxWeeks) {\n          this.gameOver = true;\n        } else {\n          // 无尽模式下继续游戏\n          this.currentWeek++;\n\n          // 同样需要更新玩家和市场状态\n          const playerStore = usePlayerStore();\n          const marketStore = useMarketStore();\n          const eventStore = useEventStore();\n\n          // 更新玩家信息（债务等）\n          playerStore.updateWeeklyPlayerState(this.currentWeek);\n\n          // 更新市场\n          marketStore.updateMarketState(this.currentWeek);\n\n          // 生成随机事件 - 无尽模式下仍然保持事件生成\n          const playerData = {\n            money: playerStore.money,\n            debt: playerStore.debt,\n            inventory: playerStore.inventory,\n            statistics: playerStore.statistics,\n            purchasedHouses: playerStore.purchasedHouses,\n            name: playerStore.name,\n            capacity: playerStore.capacity,\n            inventoryUsed: playerStore.inventoryUsed\n          };\n\n          const marketData = {\n            marketModifiers: marketStore.marketModifiers,\n            currentLocation: marketStore.currentLocation,\n            productPrices: marketStore.productPrices,\n            products: marketStore.products,\n            locations: marketStore.locations\n          };\n\n          // 调用事件系统生成随机事件\n          let event = eventStore.generateRandomEvent(\n            this.currentWeek,\n            playerData,\n            marketData\n          );\n\n          // 如果第一次没有生成事件，并且当前周数是3的倍数，再尝试一次\n          if (!event && this.currentWeek % 3 === 0) {\n            event = eventStore.generateRandomEvent(\n              this.currentWeek,\n              playerData,\n              marketData\n            );\n          }\n\n          if (event) {\n            if (!eventStore.activeEvents.includes(event)) {\n              eventStore.activeEvents.push(event);\n            }\n          }\n\n          // 检查游戏结束条件（破产等）\n          this.checkGameEnd();\n\n          return true;\n        }\n        return false;\n      }\n    },\n\n    /**\n     * 检查是否有可购买的商品\n     * @param {boolean} [includeBankDeposit=true] - 是否考虑银行存款作为可用资金\n     * @returns {boolean} 是否有可购买的商品\n     */\n    hasAffordableProducts(includeBankDeposit = true) {\n      const playerStore = usePlayerStore();\n      const marketStore = useMarketStore();\n      // 考虑银行存款作为可用资金\n      const playerMoney = includeBankDeposit ? playerStore.money + playerStore.bankDeposit : playerStore.money;\n\n      // 如果玩家背包中有物品，则认为仍然有能力参与市场，不算破产\n      if (playerStore.inventoryUsed > 0) {\n        return true;\n      }\n\n      // 检查所有地点的所有商品\n      for (const location of marketStore.locations) {\n        // 先切换到该地点\n        const availableProductIds = marketStore.getLocationAvailableProducts(location);\n\n        // 检查该地点的所有商品\n        for (const productId of availableProductIds) {\n          const product = marketStore.products.find(p => p.id === productId);\n          if (!product) continue;\n\n          // 获取当前价格\n          const price = marketStore.getCurrentProductPrice(productId);\n\n          // 如果有任何商品价格低于玩家资金，就返回true\n          if (price <= playerMoney) {\n            return true;\n          }\n        }\n      }\n\n      // 如果所有商品都买不起，返回false\n      return false;\n    },\n\n    /**\n     * 检查游戏结束条件\n     */\n    checkGameEnd() {\n      // 如果游戏已经结束，不再检查\n      if (this.gameOver) return;\n\n      // 检查是否达到52周\n      if (this.currentWeek > this.maxWeeks) {\n        // 游戏时间限制到达\n        this.endGameWithTimeLimit();\n        return;\n      }\n\n      const playerStore = usePlayerStore();\n      const netWorth = playerStore.netWorth;\n\n      // 资产达到胜利条件 - 100万净资产\n      if (netWorth >= 1000000 && !this.victoryAchieved) {\n        // 触发胜利成就，但不结束游戏\n        this.achieveVictory();\n        return;\n      }\n\n      // 破产条件 - 只有在第一周之后才检查破产条件\n      // 这样可以避免游戏一开始就因为初始资金小于债务而直接判定破产\n      // 1. 第一周之后\n      // 2. 净资产为负（考虑银行存款和贷款）\n      // 3. 玩家无法购买任何商品（考虑银行存款）\n      if (this.currentWeek > 1 && netWorth < 0 && !this.hasAffordableProducts(true)) {\n        this.endGame('bankruptcy');\n        return;\n      }\n    },\n\n    /**\n     * 游戏时间限制达到时结束游戏\n     */\n    endGameWithTimeLimit() {\n      const playerStore = usePlayerStore();\n      const hasHouses = playerStore.purchasedHouses && playerStore.purchasedHouses.length > 0;\n\n      console.log('游戏时间限制达到 - endGameWithTimeLimit', {\n        victoryAchieved: this.victoryAchieved,\n        hasHouses,\n        purchasedHouses: playerStore.purchasedHouses?.length,\n        netWorth: playerStore.netWorth\n      });\n\n      // 如果玩家已经购买了房产，就是完美胜利\n      if (this.victoryAchieved || hasHouses) {\n        // 完美胜利 - 购买房产并坚持到游戏结束\n\n        // 直接在这里计算得分，避免endGame函数中可能的问题\n        const finalScore = this.calculateGameScore('victoryTimeLimit');\n        const scoreRank = this.calculateRank(finalScore);\n        const scoreDetails = this.calculateScoreDetails('victoryTimeLimit');\n\n        console.log('时间限制胜利 - 直接计算得分', {\n          finalScore,\n          rank: scoreRank\n        });\n\n        // 完美胜利结果对象\n        this.gameResult = {\n          reason: 'victoryTimeLimit',\n          week: this.currentWeek,\n          weeksPassed: this.currentWeek,\n          score: finalScore, // 直接设置得分\n          achievementName: null,\n          victoryAchieved: true,\n          firstVictoryWeek: this.gameResult?.firstVictoryWeek || this.currentWeek,\n          firstVictoryHouse: this.gameResult?.firstVictoryHouse || null,\n          finalMoney: playerStore.money,\n          finalAssets: playerStore.netWorth,\n          debt: playerStore.debt,\n          // 确保包含交易统计数据\n          tradeStats: {\n            totalTrades: playerStore.statistics?.transactionCount || 0,\n            totalProfit: playerStore.statistics?.totalProfit || 0,\n            averageProfit: playerStore.statistics?.transactionCount > 0\n              ? (playerStore.statistics?.totalProfit || 0) / playerStore.statistics.transactionCount\n              : 0\n          },\n          scoreDetails: {\n            score: finalScore,\n            rank: scoreRank,\n            details: scoreDetails\n          },\n          endReason: 'victoryTimeLimit'\n        };\n\n        // 标记游戏结束\n        this.gameOver = true;\n\n        // 更新房产信息，确保所有房产数据都会在结算时显示\n        if (playerStore.purchasedHouses.length > 0) {\n          // 添加多房产信息\n          this.gameResult.allPurchasedHouses = playerStore.purchasedHouses;\n          this.gameResult.houseCount = playerStore.purchasedHouses.length;\n\n          // 记录最贵和最高级别的房产\n          let mostExpensiveHouse = playerStore.purchasedHouses[0];\n          let highestLevelHouse = playerStore.purchasedHouses[0];\n\n          playerStore.purchasedHouses.forEach(house => {\n            if (house.purchasePrice > mostExpensiveHouse.purchasePrice) {\n              mostExpensiveHouse = house;\n            }\n            if (house.level > highestLevelHouse.level ||\n               (house.level === highestLevelHouse.level && house.purchasePrice > highestLevelHouse.purchasePrice)) {\n              highestLevelHouse = house;\n            }\n          });\n\n          this.gameResult.mostExpensiveHouse = mostExpensiveHouse;\n          this.gameResult.highestLevelHouse = highestLevelHouse;\n        }\n\n        console.log('时间限制胜利 - 游戏结果对象已创建', {\n          score: this.gameResult.score,\n          scoreDetails: this.gameResult.scoreDetails\n        });\n      } else {\n        // 标准结束 - 未能购买房产\n        this.endGame('timeLimit');\n      }\n    },\n\n    /**\n     * 达成胜利，但不结束游戏\n     */\n    achieveVictory() {\n      const playerStore = usePlayerStore();\n\n      // 记录胜利信息，但不设置gameOver为true\n      this.gameResult = {\n        reason: 'victory',\n        week: this.currentWeek,\n        score: this.calculateGameScore('victory'),\n        continuedPlay: true,\n        firstVictoryWeek: this.currentWeek,\n        firstVictoryHouse: playerStore.mostExpensiveHouse\n      };\n\n      // 可以在这里添加一些胜利奖励\n      // 例如增加一些资金作为奖励\n      playerStore.addMoney(50000);\n      this.addNotification('reward', '作为购买豪宅的奖励，您获得了额外的50,000元！');\n    },\n\n    /**\n     * 购买房屋后的胜利，并显示通关页面，但允许继续游戏\n     * @param {Object} house - 购买的房屋对象\n     */\n    achieveVictoryWithHouse(house) {\n      // 标记玩家已达到胜利条件\n      this.victoryAchieved = true;\n\n      const playerStore = usePlayerStore();\n      console.log('购房胜利 - 开始计算结果', {\n        houseCount: playerStore.purchasedHouses.length,\n        netWorth: playerStore.netWorth\n      });\n\n      // 确保房屋数据存在并设置默认图片路径\n      if (house) {\n        if (!house.image) {\n          house.image = '/resources/assets/images/house_1.jpeg';\n        } else if (house.image.startsWith('./')) {\n          house.image = house.image.replace('./', '/');\n        } else if (!house.image.startsWith('/')) {\n          house.image = `/${house.image}`;\n        }\n      }\n\n      // 移除重复添加房屋的代码，因为playerStore.purchaseHouse已经添加了房屋\n      // 只检查房屋是否已添加，而不再重复添加\n      const houseExists = playerStore.purchasedHouses.some(h => h.houseId === house.id || h.id === house.id);\n\n      if (!houseExists) {\n        console.warn('房屋购买记录不一致，这种情况不应该出现');\n        // 如果发现不一致，记录日志但不再重复添加\n      }\n\n      // 计算得分\n      const finalScore = this.calculateGameScore('houseVictory');\n      const scoreRank = this.calculateRank(finalScore);\n      const scoreDetails = this.calculateScoreDetails('houseVictory');\n\n      console.log('购房胜利 - 计算得分结果', {\n        finalScore,\n        scoreRank,\n        details: scoreDetails\n      });\n\n      // 确保房屋图片路径正确\n      const safeHouse = { ...house };\n      if (!safeHouse.image || safeHouse.image.includes('NaN')) {\n        console.warn('房屋图片路径无效，使用默认值');\n        safeHouse.image = '/resources/assets/images/house_1.jpeg';\n      }\n\n      // 准备游戏结果数据，包含完整的统计信息\n      this.gameResult = {\n        reason: 'houseVictory', // 自定义的胜利原因：购买房屋\n        week: this.currentWeek,\n        weeksPassed: this.currentWeek,\n        score: finalScore,\n        victoryAchieved: true,\n        firstVictoryWeek: this.currentWeek,\n        firstVictoryHouse: safeHouse,\n        canContinue: true, // 标记可继续游戏\n        finalMoney: playerStore.money,\n        finalAssets: playerStore.netWorth,\n        debt: playerStore.debt,\n        purchasedHouse: safeHouse,\n        // 确保包含交易统计数据\n        tradeStats: {\n          totalTrades: playerStore.statistics?.transactionCount || 0,\n          totalProfit: playerStore.statistics?.totalProfit || 0,\n          averageProfit: playerStore.statistics?.transactionCount > 0\n            ? (playerStore.statistics?.totalProfit || 0) / playerStore.statistics.transactionCount\n            : 0\n        },\n        scoreDetails: {\n          score: finalScore,\n          rank: scoreRank,\n          details: scoreDetails\n        },\n        endReason: 'houseVictory'\n      };\n\n      // 设置游戏为结束状态，但可继续游戏\n      this.gameOver = true;\n\n      console.log('购房胜利 - 游戏结果对象创建完成', {\n        score: this.gameResult.score,\n        scoreDetails: this.gameResult.scoreDetails\n      });\n    },\n\n    /**\n     * 继续游戏（通关后选择继续）\n     */\n    continueGame() {\n      // 重置游戏结束标志，但保持胜利状态\n      this.gameOver = false;\n\n      // 保留已经达成的胜利状态\n      this.victoryAchieved = true;\n\n      // 删除显示继续游戏的消息，避免重复显示\n      // this.addNotification('success', '您选择继续游戏！您可以继续赚钱并购买更多房产，直到第52周游戏结束。');\n    },\n\n    /**\n     * 结束游戏\n     * @param {string} reason - 结束原因\n     * @param {string} [achievementName=null] - 成就名称（如果是通过成就结束）\n     */\n    endGame(reason, achievementName = null) {\n      this.gameOver = true;\n\n      // 如果已经达成胜利，但因为其他原因结束游戏，保留胜利信息\n      if (this.victoryAchieved && reason !== 'victory' && reason !== 'victoryTimeLimit') {\n        reason = 'victoryOther';\n      }\n\n      const playerStore = usePlayerStore();\n      console.log('游戏结束 - endGame', {\n        reason,\n        week: this.currentWeek,\n        netWorth: playerStore.netWorth,\n        houseCount: playerStore.purchasedHouses?.length || 0\n      });\n\n      // 预先计算游戏得分，避免重复计算\n      const gameScore = this.calculateGameScore(reason);\n      const scoreRank = this.calculateRank(gameScore);\n      const scoreDetails = this.calculateScoreDetails(reason);\n\n      console.log('endGame得分计算完成', {\n        score: gameScore,\n        rank: scoreRank,\n        details: scoreDetails\n      });\n\n      // 构建完整的游戏结果对象，包含所有可能需要的统计数据\n      this.gameResult = {\n        reason,\n        week: this.currentWeek,\n        weeksPassed: this.currentWeek,\n        score: gameScore,\n        achievementName,\n        victoryAchieved: this.victoryAchieved,\n        firstVictoryWeek: this.gameResult?.firstVictoryWeek || null,\n        firstVictoryHouse: this.gameResult?.firstVictoryHouse || null,\n        finalMoney: playerStore.money,\n        finalAssets: playerStore.netWorth,\n        debt: playerStore.debt,\n        // 确保包含交易统计数据\n        tradeStats: {\n          totalTrades: playerStore.statistics?.transactionCount || 0,\n          totalProfit: playerStore.statistics?.totalProfit || 0,\n          averageProfit: playerStore.statistics?.transactionCount > 0\n            ? (playerStore.statistics?.totalProfit || 0) / playerStore.statistics.transactionCount\n            : 0\n        },\n        scoreDetails: {\n          score: gameScore,\n          rank: scoreRank,\n          details: scoreDetails\n        },\n        endReason: reason,\n        data: {\n          debt: playerStore.debt,\n          firstVictoryWeek: this.gameResult?.firstVictoryWeek || this.currentWeek\n        }\n      };\n\n      console.log('游戏结果对象已创建', {\n        score: this.gameResult.score,\n        scoreInDetails: this.gameResult.scoreDetails.score\n      });\n    },\n\n    /**\n     * 计算游戏得分\n     * @param {string} endReason - 结束原因\n     * @returns {number} 得分\n     */\n    calculateGameScore(endReason) {\n      const playerStore = usePlayerStore();\n\n      try {\n        // 记录输入数据\n        console.log('计算游戏得分 - 原始数据', {\n          netWorth: playerStore.netWorth,\n          money: playerStore.money,\n          debt: playerStore.debt,\n          week: this.currentWeek,\n          endReason,\n          purchasedHouses: playerStore.purchasedHouses?.length || 0\n        });\n\n        // 基础分数 = 净资产 / 1000\n        // 确保净资产是有效数字，否则使用默认值\n        let netWorth = playerStore.netWorth;\n        if (isNaN(netWorth) || netWorth === undefined) {\n          console.warn('计算游戏得分 - 净资产无效，使用备用计算');\n          // 使用备用计算：钱 - 债务\n          netWorth = (playerStore.money || 0) - (playerStore.debt || 0);\n        }\n\n        // 确保不为0或负数\n        netWorth = Math.max(1000, netWorth);\n        const baseScore = netWorth / 1000;\n\n        // 根据结束原因调整分数\n        let multiplier = 1;\n        switch (endReason) {\n          case 'victory':\n          case 'houseVictory':\n            multiplier = 1.5;\n            break;\n          case 'victoryTimeLimit':\n            // 达成胜利并玩到最后，给予最高奖励\n            multiplier = 2.0;\n            break;\n          case 'bankruptcy':\n            multiplier = 0.5;\n            break;\n          case 'achievement':\n            multiplier = 1.2;\n            break;\n          default:\n            multiplier = 1.0;\n            break;\n        }\n\n        // 根据完成速度调整分数\n        let speedMultiplier = 1;\n        const isVictory = endReason.includes('victory');\n\n        if (isVictory) {\n          // 速度系数：越早越高\n          const currentWeek = Math.max(1, this.currentWeek);\n          speedMultiplier = Math.max(0.5, 1.0 + (10.0 / currentWeek));\n        }\n\n        // 根据拥有的房产数量调整\n        let houseBonus = 1;\n        const houseCount = playerStore.purchasedHouses?.length || 0;\n\n        if (houseCount > 0) {\n          houseBonus = 1 + (houseCount * 0.2); // 每套房产增加20%分数\n        }\n\n        // 计算总分并取整\n        let totalScore = baseScore * multiplier * speedMultiplier * houseBonus;\n\n        // 确保得分至少为1\n        totalScore = Math.max(1, Math.floor(totalScore));\n\n        console.log('计算游戏得分 - 最终结果', {\n          baseScore,\n          multiplier,\n          speedMultiplier,\n          houseBonus,\n          totalScore\n        });\n\n        return totalScore;\n      } catch (error) {\n        console.error('计算游戏得分时发生错误:', error);\n        // 发生错误时返回默认分数\n        return Math.max(1, Math.floor(playerStore.netWorth / 1000));\n      }\n    },\n\n    /**\n     * 计算玩家等级\n     * @param {number} score - 玩家得分\n     * @returns {string} 等级（S, A, B, C, D）\n     */\n    calculateRank(score) {\n      if (score >= 1000000) return 'S';\n      if (score >= 500000) return 'A';\n      if (score >= 200000) return 'B';\n      if (score >= 100000) return 'C';\n      return 'D';\n    },\n\n    /**\n     * 计算得分详情\n     * @param {string} endReason - 结束原因\n     * @returns {Object} 得分详情\n     */\n    calculateScoreDetails(endReason) {\n      try {\n        const playerStore = usePlayerStore();\n        console.log('计算得分明细 - 开始', {\n          endReason,\n          playerNetWorth: playerStore.netWorth\n        });\n\n        // 资产得分 - 基于净资产\n        let assetsScore = 0;\n        try {\n          assetsScore = Math.max(0, Math.floor(playerStore.netWorth / 800));\n          console.log('资产得分计算', { netWorth: playerStore.netWorth, assetsScore });\n        } catch (err) {\n          console.error('资产得分计算错误:', err);\n          assetsScore = 100; // 默认值\n        }\n\n        // 时间效率得分 - 基于完成时间\n        let timeScore = 0;\n        try {\n          // 任何胜利结局都给予时间效率得分\n          if (endReason.includes('victory')) {\n            const currentWeek = Math.max(1, this.currentWeek);\n            timeScore = Math.round(500000 / currentWeek);\n            console.log('时间效率得分计算', { week: currentWeek, timeScore });\n          }\n        } catch (err) {\n          console.error('时间效率得分计算错误:', err);\n          timeScore = 50; // 默认值\n        }\n\n        // 房产得分 - 基于房产价值和等级\n        let houseScore = 0;\n        try {\n          if (playerStore.purchasedHouses && playerStore.purchasedHouses.length > 0) {\n            let totalHouseValue = 0;\n            // 遍历所有房产，累计总价值\n            playerStore.purchasedHouses.forEach(house => {\n              // 使用购买价格或默认价格\n              const housePrice = house.purchasePrice || house.price || 0;\n              totalHouseValue += housePrice;\n            });\n\n            // 计算房产得分\n            houseScore = Math.floor(totalHouseValue / 5000);\n\n            // 多房产奖励\n            if (playerStore.purchasedHouses.length > 1) {\n              houseScore *= (1 + (playerStore.purchasedHouses.length - 1) * 0.2);\n            }\n\n            console.log('房产得分计算', {\n              houseCount: playerStore.purchasedHouses.length,\n              totalHouseValue,\n              houseScore\n            });\n          }\n        } catch (err) {\n          console.error('房产得分计算错误:', err);\n          houseScore = 100; // 默认值\n        }\n\n        // 交易得分 - 基于交易次数和利润\n        let tradeScore = 0;\n        try {\n          const totalProfit = playerStore.statistics?.totalProfit || 0;\n          const tradeCount = playerStore.statistics?.transactionCount || 0;\n\n          if (tradeCount > 0) {\n            // 基本交易得分\n            tradeScore = Math.floor(totalProfit / 1000);\n\n            // 交易次数加成\n            if (tradeCount > 10) {\n              tradeScore *= (1 + (tradeCount - 10) * 0.02);\n            }\n          }\n\n          console.log('交易得分计算', {\n            tradeCount,\n            totalProfit,\n            tradeScore\n          });\n        } catch (err) {\n          console.error('交易得分计算错误:', err);\n          tradeScore = 50; // 默认值\n        }\n\n        // 银行管理得分 - 基于存款利息\n        let bankScore = 0;\n        try {\n          const totalInterest = playerStore.statistics?.totalInterestEarned || 0;\n          // 确保存在交易利润数据\n          if (totalInterest > 0) {\n            bankScore = Math.floor(totalInterest / 500);\n          } else {\n            // 提供最低分数\n            bankScore = Math.floor(playerStore.bankDeposit / 10000);\n          }\n\n          console.log('银行得分计算', {\n            totalInterest,\n            bankDeposit: playerStore.bankDeposit,\n            bankScore\n          });\n        } catch (err) {\n          console.error('银行得分计算错误:', err);\n          bankScore = 10; // 默认值\n        }\n\n        // 总得分\n        const totalScore = assetsScore + timeScore + houseScore + tradeScore + bankScore;\n        console.log('得分明细总结', {\n          assetsScore,\n          timeScore,\n          houseScore,\n          tradeScore,\n          bankScore,\n          totalScore\n        });\n\n        return {\n          assetsScore,\n          timeScore,\n          houseScore,\n          tradeScore,\n          bankScore,\n          totalScore\n        };\n      } catch (error) {\n        console.error('计算得分明细时出错:', error);\n        // 返回默认得分明细\n        return {\n          assetsScore: 100,\n          timeScore: 50,\n          houseScore: 100,\n          tradeScore: 50,\n          bankScore: 10,\n          totalScore: 310\n        };\n      }\n    },\n\n    /**\n     * 添加通知消息\n     * @param {string} type - 通知类型\n     * @param {string} message - 通知内容\n     */\n    addNotification(type, message) {\n      this.notifications.push({\n        id: Date.now(),\n        type,\n        message,\n        timestamp: new Date().toISOString()\n      });\n\n      // 限制通知数量\n      if (this.notifications.length > 10) {\n        this.notifications.shift();\n      }\n    },\n\n    /**\n     * 暂停游戏\n     */\n    pauseGame() {\n      if (this.gameStarted && !this.gameOver) {\n        this.gamePaused = true;\n      }\n    },\n\n    /**\n     * 继续游戏\n     */\n    resumeGame() {\n      this.gamePaused = false;\n    },\n\n    /**\n     * 手动结束游戏（玩家选择结束）\n     */\n    manualEndGame() {\n      const playerStore = usePlayerStore();\n\n      // 确定结束原因：如果购买了任何房产，视为胜利结局\n      let reason = 'playerChoice';\n\n      // 如果玩家已购买任何房产，视为购房胜利\n      if (playerStore.purchasedHouses && playerStore.purchasedHouses.length > 0) {\n        reason = 'victory';\n\n        // 如果之前没有标记胜利状态，现在标记\n        if (!this.victoryAchieved) {\n          this.victoryAchieved = true;\n          this.gameResult = {\n            firstVictoryWeek: this.currentWeek,\n            firstVictoryHouse: playerStore.purchasedHouses[playerStore.purchasedHouses.length - 1]\n          };\n        }\n      }\n\n      // 结束游戏\n      this.endGame(reason);\n    },\n\n    /**\n     * 触发教程事件\n     * @param {string} eventtry {\n        const eventStore = useEventStore();\n        if (eventStore && typeof eventStore.triggerEvent === 'function') {\n          return eventStore.triggerEvent(eventId);\n        }\n        return false;\n      } catch (error) {\n    handleError(error, 'gameState (gameCore)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n    console.error('触发教程事件失败:', error);\n        return false;}    } catch (error) {\n        console.error('触发教程事件失败:', error);\n        return false;\n      }\n    },\n\n    /**\n     * 触发特定事件\n     * @param {string} eventId - 事件ID\n     * @returns {Object|null} 触发的事件对象，如果触发失败则返回null\n     */\n    triggerSpecificEvent(eventId) {\n      console.log('GameCore - 尝试触发特定事件:', eventId);\n\n      try {\n        const eventStore = useEventStore();\n        const playerStore = usePlayerStore();\n        const marketStore = useMarketStore();\n\n        // 准备玩家数据\n        const playerData = {\n          money: playerStore.money,\n          debt: playerStore.debt,\n          inventory: playerStore.inventory,\n          statistics: playerStore.statistics,\n          purchasedHouses: playerStore.purchasedHouses,\n          name: playerStore.name,\n          capacity: playerStore.capacity,\n          inventoryUsed: playerStore.inventoryUsed\n        };\n\n        // 准备市场数据\n        const marketData = {\n          marketModifiers: marketStore.marketModifiers,\n          currentLocation: marketStore.currentLocation,\n          productPrices: marketStore.productPrices,\n          products: marketStore.products,\n          locations: marketStore.locations\n        };\n\n        // 触发特定事件\n        const event = eventStore.triggerSpecificEvent(eventId, playerData, marketData);\n\n        if (event) {\n          console.log('GameCore - 成功触发特定事件:', event.id, event.title);\n\n          // 将事件添加到活跃事件队列\n          if (!this.activeEvents.includes(event)) {\n            this.activeEvents.push(event);\n            console.log('GameCore - 事件已添加到活跃队列, 当前队列长度:', this.activeEvents.length);\n          }\n\n          return event;\n        } else {\n          console.warn('GameCore - 触发特定事件失败:', eventId);\n          return null;\n        }\n      } catch (error) {\n        handleError(error, 'gameState.triggerSpecificEvent', ErrorType.GAME_LOGIC, ErrorSeverity.ERROR);\n        console.error('GameCore - 触发特定事件时出错:', error);\n        return null;\n      }\n    },\n\n    /**\n     * 初始化游戏核心\n     * 用于游戏加载过程\n     * @returns {Promise} 初始化完成的Promise\n     */\n    initializeGameCore() {\n      return new Promise((resolve) => {\n        console.log('GameCore - 初始化游戏核心');\n\n        // 模拟一些初始化操作\n        setTimeout(() => {\n          this.initialized = true;\n          console.log('GameCore - 游戏核心初始化完成');\n          resolve();\n        }, 300);\n      });\n    },\n\n    /**\n     * 更新游戏状态\n     * 用于确保游戏状态是最新的\n     */\n    updateGameState() {\n      console.log('GameCore - 更新游戏状态');\n\n      // 检查游戏结束条件\n      if (this.gameStarted && !this.gameOver) {\n        this.checkGameEnd();\n      }\n\n      // 更新通知\n      if (this.notifications.length > 10) {\n        this.notifications = this.notifications.slice(-10);\n      }\n    }\n  },\n\n  getters: {\n    /**\n     * 获取游戏进度百分比\n     * @returns {number} 进度百分比(0-100)\n     */\n    gameProgress() {\n      // 判断是否为无尽模式\n      if (this.maxWeeks > 52) {\n        // 无尽模式下，不显示进度条，或者显示一个固定的低值\n        return Math.min(5, (this.currentWeek / 1000) * 100);\n      }\n      // 经典模式下，正常计算进度\n      // 修正计算逻辑，使第一周显示为0%，最后一周(52)显示为约98%，超过52周才显示100%\n      const progress = ((this.currentWeek - 1) / this.maxWeeks) * 100;\n      // 限制在0-100之间\n      return Math.max(0, Math.min(100, progress));\n    },\n\n    /**\n     * 判断游戏是否处于活跃状态\n     * @returns {boolean} 游戏是否活跃\n     */\n    isGameActive() {\n      return this.gameStarted && !this.gameOver && !this.gamePaused;\n    },\n\n    /**\n     * 获取剩余周数\n     * @returns {number} 剩余周数\n     */\n    remainingWeeks() {\n      // 无尽模式下显示\"无限\"\n      if (this.maxWeeks > 52) {\n        return '∞';\n      }\n      // 确保第52周显示剩余0周，而不是-1周\n      const remaining = this.maxWeeks - this.currentWeek + 1;\n      return Math.max(0, remaining);\n    },\n\n    /**\n     * 判断当前是否为无尽模式\n     * @returns {boolean} 是否为无尽模式\n     */\n    isEndlessMode() {\n      return this.maxWeeks > 52;\n    }\n  }\n});\n","/**\n * 存储服务\n * 提供数据持久化功能\n */\nimport { storageError } from '@/infrastructure/utils/errorTypes';\nimport { handleError, ErrorType, ErrorSeverity } from '../utils/errorHandler';\n\n/**\n * 存档验证与修复工具\n * 提供验证、修复和升级存档数据的功能\n */\n\n/**\n * 验证存档结构完整性\n * @param {Object} saveData 存档数据\n * @returns {Object} 验证结果 {isValid, issues}\n */\nexport function validateSaveData(saveData) {\n  const issues = [];\n\n  // 基本有效性检查\n  if (!saveData || typeof saveData !== 'object') {\n    return { isValid: false, issues: ['存档数据无效或已损坏'] };\n  }\n\n  // 检查版本\n  if (!saveData.version) {\n    issues.push('缺少版本信息');\n  }\n\n  // 检查基本结构\n  const requiredSections = ['gameCore', 'player', 'market', 'event'];\n  for (const section of requiredSections) {\n    if (!saveData[section]) {\n      issues.push(`缺少${section}部分`);\n    }\n  }\n\n  // 检查游戏核心数据\n  if (saveData.gameCore) {\n    if (typeof saveData.gameCore.currentWeek !== 'number') {\n      issues.push('游戏周数无效');\n    }\n    if (typeof saveData.gameCore.maxWeeks !== 'number') {\n      issues.push('最大周数无效');\n    }\n    if (saveData.gameCore.currentWeek > saveData.gameCore.maxWeeks) {\n      issues.push('游戏周数超过最大周数');\n    }\n  }\n\n  // 检查玩家数据\n  if (saveData.player) {\n    if (typeof saveData.player.name !== 'string') {\n      issues.push('玩家名称无效');\n    }\n    if (typeof saveData.player.money !== 'number') {\n      issues.push('玩家金钱无效');\n    }\n    if (saveData.player.money < 0) {\n      issues.push('玩家金钱为负数');\n    }\n    if (!Array.isArray(saveData.player.inventory)) {\n      issues.push('库存数据无效');\n    }\n    if (!Array.isArray(saveData.player.purchasedHouses)) {\n      issues.push('房产数据无效');\n    }\n\n    // 检查玩家统计数据\n    if (!saveData.player.statistics || typeof saveData.player.statistics !== 'object') {\n      issues.push('玩家统计数据无效');\n    } else {\n      // 检查统计数据的完整性\n      const requiredStats = ['weekCount', 'transactionCount', 'totalProfit', 'maxMoney'];\n      for (const stat of requiredStats) {\n        if (typeof saveData.player.statistics[stat] !== 'number') {\n          issues.push(`统计数据 ${stat} 无效或缺失`);\n        }\n      }\n    }\n  }\n\n  // 检查市场数据\n  if (saveData.market) {\n    if (!Array.isArray(saveData.market.locations)) {\n      issues.push('地点数据无效');\n    }\n    if (!saveData.market.productPrices || typeof saveData.market.productPrices !== 'object') {\n      issues.push('价格数据无效');\n    }\n\n    // 检查产品数据完整性\n    if (Array.isArray(saveData.market.products)) {\n      const hasDuplicateProducts = saveData.market.products.length !==\n        new Set(saveData.market.products).size;\n\n      if (hasDuplicateProducts) {\n        issues.push('产品数据包含重复项');\n      }\n    }\n  }\n\n  // 检查事件数据\n  if (saveData.event) {\n    if (saveData.event.activeEvent && typeof saveData.event.activeEvent !== 'object') {\n      issues.push('活动事件数据无效');\n    }\n\n    if (!Array.isArray(saveData.event.triggeredEvents)) {\n      issues.push('触发事件记录无效');\n    }\n  }\n\n  return {\n    isValid: issues.length === 0,\n    issues\n  };\n}\n\n/**\n * 尝试修复存档数据\n * @param {Object} saveData 可能损坏的存档数据\n * @param {Object} template 模板数据（可选，用于填充缺失部分）\n * @returns {Object} 修复后的存档数据\n */\nexport function repairSaveData(saveData, template = null) {\n  // 如果saveData完全损坏，使用空对象\n  const repairedData = saveData || {};\n  let repairLog = [];\n\n  // 使用默认模板如果没有提供\n  if (!template) {\n    template = createDefaultTemplate();\n    repairLog.push('使用默认模板数据');\n  }\n\n  // 确保基本结构存在\n  repairedData.version = repairedData.version || '0.1.1';\n  repairedData.timestamp = repairedData.timestamp || new Date().toISOString();\n  repairLog.push(`设置版本为: ${repairedData.version}`);\n\n  // 确保各部分存在\n  repairedData.gameCore = repairedData.gameCore || {};\n  repairedData.player = repairedData.player || {};\n  repairedData.market = repairedData.market || {};\n  repairedData.event = repairedData.event || {};\n\n  // 修复游戏核心数据\n  repairedData.gameCore.currentWeek = ensureNumber(repairedData.gameCore.currentWeek, 1);\n  repairedData.gameCore.maxWeeks = ensureNumber(repairedData.gameCore.maxWeeks, 52);\n  repairedData.gameCore.gameStarted = ensureBoolean(repairedData.gameCore.gameStarted, true);\n  repairedData.gameCore.gamePaused = ensureBoolean(repairedData.gameCore.gamePaused, false);\n  repairedData.gameCore.gameOver = ensureBoolean(repairedData.gameCore.gameOver, false);\n  repairedData.gameCore.notifications = Array.isArray(repairedData.gameCore.notifications)\n    ? repairedData.gameCore.notifications\n    : [];\n  repairedData.gameCore.gameGoals = repairedData.gameCore.gameGoals || {\n    requiredNetWorth: 400000,\n    targetWeeks: 30,\n    debtRatio: 0.4\n  };\n\n  if (repairedData.gameCore.currentWeek > repairedData.gameCore.maxWeeks) {\n    repairedData.gameCore.currentWeek = repairedData.gameCore.maxWeeks;\n    repairLog.push('修复: 调整当前周数不超过最大周数');\n  }\n\n  // 修复玩家数据\n  repairedData.player.name = repairedData.player.name || '玩家';\n  repairedData.player.money = ensureNumber(repairedData.player.money, 5000);\n  if (repairedData.player.money < 0) {\n    repairedData.player.money = 0;\n    repairLog.push('修复: 重置负数金钱为0');\n  }\n  repairedData.player.debt = ensureNumber(repairedData.player.debt, 2000);\n  repairedData.player.capacity = ensureNumber(repairedData.player.capacity, 100);\n  repairedData.player.inventoryUsed = ensureNumber(repairedData.player.inventoryUsed, 0);\n  repairedData.player.inventory = Array.isArray(repairedData.player.inventory)\n    ? repairedData.player.inventory\n    : [];\n  repairedData.player.purchasedHouses = Array.isArray(repairedData.player.purchasedHouses)\n    ? repairedData.player.purchasedHouses\n    : [];\n\n  // 确保库存使用量与实际库存一致\n  const calculatedInventoryUsed = repairedData.player.inventory.reduce(\n    (total, item) => total + (item.quantity || 0), 0\n  );\n\n  if (repairedData.player.inventoryUsed !== calculatedInventoryUsed) {\n    repairedData.player.inventoryUsed = calculatedInventoryUsed;\n    repairLog.push('修复: 调整库存使用量以匹配实际库存');\n  }\n\n  // 确保玩家统计数据存在\n  repairedData.player.statistics = repairedData.player.statistics || {};\n  repairedData.player.statistics.weekCount = ensureNumber(\n    repairedData.player.statistics.weekCount,\n    repairedData.gameCore.currentWeek\n  );\n  repairedData.player.statistics.transactionCount = ensureNumber(\n    repairedData.player.statistics.transactionCount, 0\n  );\n  repairedData.player.statistics.totalProfit = ensureNumber(\n    repairedData.player.statistics.totalProfit, 0\n  );\n  repairedData.player.statistics.maxMoney = ensureNumber(\n    repairedData.player.statistics.maxMoney,\n    Math.max(repairedData.player.money, 5000)\n  );\n\n  // 如果有房产但没有购房记录，修复购房记录\n  if (repairedData.player.purchasedHouses.length > 0 &&\n      (!repairedData.player.statistics.housePurchases ||\n        repairedData.player.statistics.housePurchases.length === 0)) {\n\n    repairedData.player.statistics.housePurchases =\n      repairedData.player.purchasedHouses.map(house => ({\n        houseId: house.houseId,\n        name: house.name || `${house.level}级房产`,\n        level: house.level || 1,\n        price: house.purchasePrice,\n        week: house.purchaseWeek || repairedData.gameCore.currentWeek\n      }));\n\n    repairLog.push('修复: 重建房屋购买记录');\n  } else if (!repairedData.player.statistics.housePurchases) {\n    repairedData.player.statistics.housePurchases = [];\n  }\n\n  // 确保firstHousePurchaseWeek存在\n  if (repairedData.player.purchasedHouses.length > 0 &&\n      repairedData.player.statistics.firstHousePurchaseWeek === null) {\n\n    // 找出最早购买的房屋\n    const firstHouse = [...repairedData.player.purchasedHouses].sort(\n      (a, b) => (a.purchaseWeek || Infinity) - (b.purchaseWeek || Infinity)\n    )[0];\n\n    repairedData.player.statistics.firstHousePurchaseWeek =\n      firstHouse.purchaseWeek || Math.max(1, repairedData.gameCore.currentWeek - 1);\n\n    repairLog.push('修复: 设置首次购房周数');\n  }\n\n  // 修复市场数据\n  if (!Array.isArray(repairedData.market.locations) || repairedData.market.locations.length === 0) {\n    // 如果有模板数据，使用模板的地点数据\n    repairedData.market.locations = template.market && Array.isArray(template.market.locations)\n      ? [...template.market.locations]\n      : [];\n\n    if (repairedData.market.locations.length > 0) {\n      repairLog.push('修复: 从模板恢复地点数据');\n    }\n  }\n\n  repairedData.market.productPrices = repairedData.market.productPrices || {};\n\n  // 确保价格数据有效\n  if (template && template.market && template.market.productPrices) {\n    let pricesFixed = 0;\n\n    for (const key in template.market.productPrices) {\n      if (!repairedData.market.productPrices[key]) {\n        // 如果缺少某产品的价格数据，从模板复制\n        repairedData.market.productPrices[key] = template.market.productPrices[key];\n        pricesFixed++;\n      }\n    }\n\n    if (pricesFixed > 0) {\n      repairLog.push(`修复: 从模板恢复${pricesFixed}个产品价格数据`);\n    }\n  }\n\n  // 修复事件数据\n  if (!Array.isArray(repairedData.event.triggeredEvents)) {\n    repairedData.event.triggeredEvents = [];\n    repairLog.push('修复: 初始化触发事件记录');\n  }\n\n  console.log('存档修复日志:', repairLog);\n\n  return {\n    data: repairedData,\n    repairLog\n  };\n}\n\n/**\n * 创建默认模板数据\n * 用于修复严重损坏的存档\n */\nfunction createDefaultTemplate() {\n  return {\n    version: '0.1.0',\n    gameCore: {\n      currentWeek: 1,\n      maxWeeks: 52,\n      gameStarted: true,\n      gamePaused: false,\n      gameOver: false\n    },\n    player: {\n      name: '玩家',\n      money: 5000,\n      debt: 2000,\n      capacity: 100,\n      inventory: [],\n      purchasedHouses: []\n    },\n    market: {\n      locations: [\n        { id: 'location1', name: '市中心', specialProducts: ['product1', 'product2'] },\n        { id: 'location2', name: '郊区', specialProducts: ['product3', 'product4'] },\n        { id: 'location3', name: '商业区', specialProducts: ['product5', 'product6'] },\n        { id: 'location4', name: '住宅区', specialProducts: ['product7', 'product8'] },\n        { id: 'location5', name: '工业区', specialProducts: ['product9', 'product10'] }\n      ],\n      productPrices: {}\n    },\n    event: {\n      activeEvent: null,\n      triggeredEvents: []\n    }\n  };\n}\n\n/**\n * 确保值为有效的数字\n * @param {any} value 检查的值\n * @param {number} defaultValue 默认值\n * @returns {number} 有效的数字\n */\nfunction ensureNumber(value, defaultValue) {\n  const num = Number(value);\n  return isNaN(num) ? defaultValue : num;\n}\n\n/**\n * 确保值为有效的布尔值\n * @param {any} value 检查的值\n * @param {boolean} defaultValue 默认值\n * @returns {boolean} 有效的布尔值\n */\nfunction ensureBoolean(value, defaultValue) {\n  if (typeof value === 'boolean') return value;\n  return defaultValue;\n}\n\n/**\n * 确保存档数据版本兼容性\n * @param {Object} saveData - 存档数据\n * @param {string} currentVersion - 当前游戏版本\n * @returns {Object} 修复后的存档数据\n */\nexport function ensureVersionCompatibility(saveData, currentVersion = '0.1.1') {\n  if (!saveData) return null;\n\n  // 为旧版本没有版本号的存档添加版本号\n  if (!saveData.version) {\n    saveData.version = '0.1.0'; // 假设旧版本是0.1.0\n  }\n\n  // 如果版本一致，无需修复\n  if (saveData.version === currentVersion) {\n    return saveData;\n  }\n\n  // 不同版本间的兼容性处理\n  let repairedData = { ...saveData };\n\n  // 版本0.1.0 -> 0.1.1的兼容处理\n  if (saveData.version === '0.1.0' && currentVersion === '0.1.1') {\n    // 添加可能在新版本中新增的字段，默认值等\n    if (!repairedData.gameState) repairedData.gameState = {};\n    // 其他兼容性处理...\n  }\n\n  // 更新版本号\n  repairedData.version = currentVersion;\n  return repairedData;\n}\n\n/**\n * 比较两个版本号\n * @param {string} a 版本A\n * @param {string} b 版本B\n * @returns {number} 比较结果: -1(A<B), 0(A=B), 1(A>B)\n */\nfunction compareVersions(a, b) {\n  const partsA = a.split('.').map(Number);\n  const partsB = b.split('.').map(Number);\n\n  for (let i = 0; i < Math.max(partsA.length, partsB.length); i++) {\n    const valueA = i < partsA.length ? partsA[i] : 0;\n    const valueB = i < partsB.length ? partsB[i] : 0;\n\n    if (valueA > valueB) return 1;\n    if (valueA < valueB) return -1;\n  }\n\n  return 0;\n}\n\n/**\n * 存储服务基类\n * 定义存储服务的通用接口\n */\nexport class StorageService {\n  /**\n   * 获取数据\n   * @param {string} key 存储键\n   * @returns {Promise<any>} 存储的数据\n   */\n  async getData(key) {\n    throw new Error('StorageService.getData must be implemented by subclass');\n  }\n\n  /**\n   * 设置数据\n   * @param {string} key 存储键\n   * @param {any} data 要存储的数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async setData(key, data) {\n    throw new Error('StorageService.setData must be implemented by subclass');\n  }\n\n  /**\n   * 删除数据\n   * @param {string} key 存储键\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async removeData(key) {\n    throw new Error('StorageService.removeData must be implemented by subclass');\n  }\n\n  /**\n   * 清除所有数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async clearAll() {\n    throw new Error('StorageService.clearAll must be implemented by subclass');\n  }\n}\n\n/**\n * 本地存储服务\n * 使用localStorage实现数据持久化\n */\nexport class LocalStorageService extends StorageService {\n  /**\n   * 构造函数\n   * @param {string} prefix 存储键前缀\n   */\n  constructor(prefix = 'game_') {\n    super();\n    this.prefix = prefix;\n  }\n\n  /**\n   * 获取完整存储键\n   * @param {string} key 原始键\n   * @returns {string} 添加前缀后的完整键\n   */\n  getFullKey(key) {\n    return `${this.prefix}${key}`;\n  }\n\n  /**\n   * 获取数据\n   * @param {string} key 存储键\n   * @returns {Promise<any>} 存储的数据\n   */\n  async getData(key) {\n    try {\n      const fullKey = this.getFullKey(key);\n      const data = localStorage.getItem(fullKey);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n      throw storageError(`Failed to get data for key ${key}`, { originalError: error.message });\n    }\n  }\n\n  /**\n   * 安全序列化数据\n   * @param {any} data - 要序列化的数据\n   * @returns {string} - JSON字符串\n   * @private\n   */\n  _safeStringify(data) {\n    try {\n      // 尝试常规序列化\n      return JSON.stringify(data);\n    } catch (error) {\n      console.warn('标准序列化失败，尝试手动序列化');\n\n      // 创建一个安全的可序列化版本\n      if (data === null || data === undefined) {\n        return JSON.stringify(null);\n      }\n\n      // 处理基本类型\n      if (typeof data !== 'object') {\n        return JSON.stringify(data);\n      }\n\n      // 处理数组\n      if (Array.isArray(data)) {\n        const safeArray = [];\n        for (let i = 0; i < data.length; i++) {\n          try {\n            const item = data[i];\n            if (typeof item === 'object' && item !== null) {\n              safeArray.push(JSON.parse(this._safeStringify(item)));\n            } else {\n              safeArray.push(item);\n            }\n          } catch (e) {\n            safeArray.push(null);\n          }\n        }\n        return JSON.stringify(safeArray);\n      }\n\n      // 处理对象\n      const safeObj = {};\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          try {\n            const value = data[key];\n            if (typeof value === 'object' && value !== null) {\n              safeObj[key] = JSON.parse(this._safeStringify(value));\n            } else if (typeof value === 'function') {\n              safeObj[key] = '[函数]';\n            } else {\n              safeObj[key] = value;\n            }\n          } catch (e) {\n            console.warn(`无法序列化属性 ${key}`);\n            safeObj[key] = null;\n          }\n        }\n      }\n\n      return JSON.stringify(safeObj);\n    }\n  }\n\n  /**\n   * 设置数据\n   * @param {string} key 存储键\n   * @param {any} data 要存储的数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async setData(key, data) {\n    try {\n      console.log(`LocalStorage: 保存数据到 ${key}`);\n      const fullKey = this.getFullKey(key);\n\n      // 使用安全序列化\n      let serializedData;\n      try {\n        serializedData = this._safeStringify(data);\n      } catch (serializeError) {\n        console.warn('序列化失败，使用基本数据', serializeError);\n        // 如果序列化失败，保存一个基本对象\n        serializedData = JSON.stringify({\n          _simplified: true,\n          timestamp: new Date().toISOString(),\n          key\n        });\n      }\n\n      localStorage.setItem(fullKey, serializedData);\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n      console.error(`保存数据到本地存储失败: ${key}`, error);\n      // 不抛出错误，而是返回失败状态\n      return false;\n    }\n  }\n\n  /**\n   * 删除数据\n   * @param {string} key 存储键\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async removeData(key) {\n    try {\n      const fullKey = this.getFullKey(key);\n      localStorage.removeItem(fullKey);\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n      throw storageError(`Failed to remove data for key ${key}`, { originalError: error.message });\n    }\n  }\n\n  /**\n   * 清除所有数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async clearAll() {\n    try {\n      // 只清除带有前缀的项\n      Object.keys(localStorage).forEach(key => {\n        if (key.startsWith(this.prefix)) {\n          localStorage.removeItem(key);\n        }\n      });\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n      throw storageError('Failed to clear all data', { originalError: error.message });\n    }\n  }\n}\n\n/**\n * Electron存储服务\n * 使用Electron API进行数据持久化\n */\nexport class ElectronStorageService extends StorageService {\n  /**\n   * 构造函数\n   * @param {string} prefix 键前缀\n   */\n  constructor(prefix = 'game_') {\n    super();\n    this.prefix = prefix;\n    this.isInitialized = false;\n    this.fallbackStorage = new LocalStorageService();\n    // 检查Electron API是否可用\n    this.initializeElectronAPI();\n  }\n\n  /**\n   * 初始化Electron API\n   * @returns {Promise<boolean>} 初始化是否成功\n   */\n  async initializeElectronAPI() {\n    try {\n      if (window.electronAPI && window.electronAPI.getConfig) {\n        await window.electronAPI.getConfig();\n        this.isInitialized = true;\n        console.log('ElectronStorageService初始化成功');\n      } else {\n        console.warn('Electron API不可用，将使用LocalStorage作为备用');\n      }\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n      console.error('初始化ElectronStorageService失败:', error);\n    }\n\n    return this.isInitialized;\n  }\n\n  /**\n   * 获取数据\n   * @param {string} key 存储键\n   * @returns {Promise<any>} 存储的数据\n   */\n  async getData(key) {\n    try {\n      if (!this.isInitialized) {\n        return await this.fallbackStorage.getData(key);\n      }\n\n      if (!window.electronAPI || !window.electronAPI.getConfig) {\n        throw new Error('Electron API不可用');\n      }\n\n      const fullKey = this.prefix + key;\n      const config = await window.electronAPI.getConfig();\n\n      if (config && config[fullKey] !== undefined) {\n        return config[fullKey];\n      }\n\n      return null;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n      console.error(`获取数据失败 [${key}]:`, error);\n      return await this.fallbackStorage.getData(key);\n    }\n  }\n\n  /**\n   * 安全序列化数据，处理循环引用和特殊对象\n   * @param {any} data - 要序列化的数据\n   * @returns {any} - 可安全序列化的数据\n   * @private\n   */\n  _safeSerialize(data) {\n    try {\n      console.log('尝试安全序列化数据');\n      // 尝试使用JSON序列化和反序列化来创建一个纯数据对象，移除所有函数和循环引用\n      return JSON.parse(JSON.stringify(data));\n    } catch (error) {\n      console.warn('标准JSON序列化失败，尝试手动序列化', error);\n\n      // 如果JSON序列化失败，进行手动序列化\n      if (data === null || data === undefined) {\n        return data;\n      }\n\n      // 处理基本类型\n      if (typeof data !== 'object') {\n        return data;\n      }\n\n      // 处理数组\n      if (Array.isArray(data)) {\n        return data.map(item => this._safeSerialize(item));\n      }\n\n      // 处理普通对象\n      const result = {};\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          try {\n            result[key] = this._safeSerialize(data[key]);\n          } catch (e) {\n            console.warn(`无法序列化属性 ${key}:`, e);\n            // 对于无法序列化的属性，设置为null或基本类型表示\n            if (typeof data[key] === 'function') {\n              result[key] = '[函数]';\n            } else if (typeof data[key] === 'object') {\n              result[key] = '[复杂对象]';\n            } else {\n              result[key] = null;\n            }\n          }\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * 设置数据\n   * @param {string} key 存储键\n   * @param {any} data 数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async setData(key, data) {\n    try {\n      console.log(`正在保存数据 [${key}]...`);\n\n      // 首先尝试备用存储，以防主存储失败\n      const fallbackSuccess = await this.fallbackStorage.setData(key, data);\n      console.log(`备用存储保存${fallbackSuccess ? '成功' : '失败'}`);\n\n      if (!this.isInitialized) {\n        console.log('ElectronAPI未初始化，仅使用备用存储');\n        return fallbackSuccess;\n      }\n\n      if (!window.electronAPI || !window.electronAPI.setConfig) {\n        throw new Error('Electron API不可用');\n      }\n\n      // 安全序列化数据，处理潜在的循环引用\n      const safeData = this._safeSerialize(data);\n      console.log('数据已安全序列化');\n\n      const fullKey = this.prefix + key;\n      const config = { [fullKey]: safeData };\n\n      await window.electronAPI.setConfig(config);\n      console.log(`数据成功保存到 [${key}]`);\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n      console.error(`设置数据失败 [${key}]:`, error);\n\n      // 尝试直接使用文件系统API保存游戏数据\n      if (key.includes('Save_') && window.electronAPI && window.electronAPI.saveGame) {\n        try {\n          console.log('尝试使用saveGame API保存...');\n          const saveName = key.replace(this.prefix, '').replace('Save_', '');\n\n          const result = await window.electronAPI.saveGame({\n            name: saveName,\n            gameState: data\n          });\n\n          if (result && result.success) {\n            console.log('使用saveGame API保存成功');\n            return true;\n          }\n        } catch (saveGameError) {\n          console.error('saveGame API保存失败', saveGameError);\n        }\n      }\n\n      // 尝试使用备用存储\n      return await this.fallbackStorage.setData(key, data);\n    }\n  }\n\n  /**\n   * 删除数据\n   * @param {string} key 存储键\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async removeData(key) {\n    try {\n      if (!this.isInitialized) {\n        return await this.fallbackStorage.removeData(key);\n      }\n\n      if (!window.electronAPI || !window.electronAPI.setConfig) {\n        throw new Error('Electron API不可用');\n      }\n\n      const fullKey = this.prefix + key;\n      const config = { [fullKey]: undefined };\n\n      await window.electronAPI.setConfig(config);\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n      console.error(`删除数据失败 [${key}]:`, error);\n      return await this.fallbackStorage.removeData(key);\n    }\n  }\n\n  /**\n   * 清除所有数据\n   * @returns {Promise<boolean>} 操作是否成功\n   */\n  async clearAll() {\n    try {\n      if (!this.isInitialized) {\n        return await this.fallbackStorage.clearAll();\n      }\n\n      if (!window.electronAPI || !window.electronAPI.clearConfig) {\n        throw new Error('Electron API不可用');\n      }\n\n      // 只清除带有前缀的配置项\n      const config = await window.electronAPI.getConfig();\n      const keysToRemove = Object.keys(config).filter(key => key.startsWith(this.prefix));\n\n      if (keysToRemove.length === 0) {\n        return true;\n      }\n\n      // 创建要清除的配置对象\n      const clearConfig = {};\n      keysToRemove.forEach(key => {\n        clearConfig[key] = undefined;\n      });\n\n      await window.electronAPI.setConfig(clearConfig);\n      return true;\n    } catch (error) {\n      handleError(error, 'storageService (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n      console.error('清除所有数据失败:', error);\n      return await this.fallbackStorage.clearAll();\n    }\n  }\n}\n\n// 创建默认存储服务实例\nconst storageService = new ElectronStorageService();\n\nexport default storageService;\n","import { defineStore } from 'pinia';\nimport { useGameCoreStore } from '../gameCore';\nimport { usePlayerStore } from '../player';\nimport { useMarketStore } from '../market';\nimport { useEventStore } from '../events';\nimport { withErrorHandling } from '@/infrastructure/utils/errorHandler';\nimport storageService, { validateSaveData, repairSaveData, ensureVersionCompatibility } from '@/infrastructure/persistence/storageService';\nimport { useUiStore } from '../uiStore';\nimport { handleError, ErrorType, ErrorSeverity } from '../../infrastructure/utils/errorHandler';\n\n// 存档相关常量\nconst SAVE_LIST_KEY = 'saveList';\nconst SAVE_PREFIX = 'houseJourneySave_';\nconst MAX_AUTO_SAVES = 3;\nconst AUTO_SAVE_INTERVAL = 5; // 每5周自动保存一次\nconst CURRENT_GAME_VERSION = '0.1.1';\n\n/**\n * 存档系统存储\n * 管理游戏存档的保存、加载和删除\n */\nexport const useSaveStore = defineStore('save', {\n  state: () => ({\n    saveList: [],\n    isLoading: false,\n    lastAutoSaveWeek: 0,\n    autoSaveEnabled: true,\n    saveTemplate: null, // 用于存储模板数据，用于修复损坏的存档\n    lastValidatedSave: null // 记录最后验证过的存档ID\n  }),\n\n  actions: {\n    /**\n     * 初始化存档系统\n     */\n    async init() {\n      try {\n        await this.loadSaveList();\n\n        // 创建一个新游戏模板，用于修复损坏的存档\n        this.createSaveTemplate();\n\n        // 设置自动保存\n        if (this.autoSaveEnabled) {\n          // 每分钟检查一次是否需要自动保存\n          setInterval(() => {\n            const gameCore = useGameCoreStore();\n            if (gameCore.gameStarted && !gameCore.gameOver && !gameCore.gamePaused) {\n              this.checkAutoSave(gameCore.currentWeek);\n            }\n          }, 60000);\n        }\n      } catch (error) {\n        handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n        console.error('初始化存档系统失败', error);\n      }\n    },\n\n    /**\n     * 创建存档模板\n     * 用于修复损坏的存档\n     */\n    createSaveTemplate() {\n      const gameCore = useGameCoreStore();\n      const player = usePlayerStore();\n      const market = useMarketStore();\n      const event = useEventStore();\n\n      // 创建一个基本模板数据结构\n      this.saveTemplate = {\n        version: CURRENT_GAME_VERSION,\n        timestamp: new Date().toISOString(),\n        gameCore: {\n          currentWeek: 1,\n          maxWeeks: 52,\n          gameStarted: true,\n          gamePaused: false,\n          gameOver: false,\n          gameResult: null,\n          notifications: [],\n          gameGoals: {\n            requiredNetWorth: 400000,\n            targetWeeks: 30,\n            debtRatio: 0.4\n          }\n        },\n        player: {\n          name: '玩家',\n          money: 5000,\n          debt: 2000,\n          capacity: 100,\n          inventoryUsed: 0,\n          inventory: [],\n          purchasedHouses: [],\n          statistics: {\n            weekCount: 1,\n            transactionCount: 0,\n            totalProfit: 0,\n            maxMoney: 5000,\n            visitedLocations: []\n          }\n        },\n        market: {\n          locations: market.locations || [],\n          currentLocation: null,\n          productPrices: {},\n          products: [],\n          houses: [],\n          marketModifiers: {}\n        },\n        event: {\n          activeEvent: null,\n          forceLocationChange: false,\n          targetLocation: null,\n          nextEventId: null,\n          triggeredEvents: []\n        }\n      };\n    },\n\n    /**\n     * 加载存档列表\n     * @returns {Promise<Array>} 存档列表\n     */\n    async loadSaveList() {\n      try {\n        console.log('尝试加载存档列表...');\n\n        // 使用存储服务加载存档列表\n        const saveList = await storageService.getData(SAVE_LIST_KEY);\n\n        // 如果存档列表为空，尝试从Electron API直接获取\n        if (!saveList || !Array.isArray(saveList) || saveList.length === 0) {\n          console.log('存档列表为空或无效，尝试从文件系统获取...');\n\n          try {\n            if (window.electronAPI && window.electronAPI.listSaves) {\n              const result = await window.electronAPI.listSaves();\n\n              if (result && result.success && Array.isArray(result.saves)) {\n                console.log('从Electron API获取到', result.saves.length, '个存档');\n\n                // 将文件系统返回的存档列表转换成我们需要的格式\n                const formattedSaves = result.saves.map(save => ({\n                  id: save.name,\n                  name: save.name,\n                  isAuto: save.name.startsWith('autosave_') || save.name.includes('自动存档'),\n                  timestamp: save.lastModified ? new Date(save.lastModified).getTime() : Date.now(),\n                  lastModified: save.lastModified\n                }));\n\n                // 更新存档列表\n                this.saveList = formattedSaves;\n\n                // 保存到存储服务\n                await storageService.setData(SAVE_LIST_KEY, formattedSaves);\n\n                return formattedSaves;\n              }\n            }\n          } catch (electronError) {\n            console.error('从Electron API获取存档列表失败', electronError);\n          }\n\n          // 如果Electron API也失败，使用空数组\n          this.saveList = [];\n        } else {\n          console.log('成功从存储中加载存档列表，数量:', saveList.length);\n          this.saveList = saveList;\n        }\n      } catch (error) {\n        handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n        console.error('加载存档列表失败', error);\n        this.saveList = [];\n      }\n\n      return this.saveList;\n    },\n\n    /**\n     * 验证存档\n     * @param {string} saveId - 存档ID\n     * @returns {Promise<Object>} 验证结果\n     */\n    async validateSave(saveId) {\n      try {\n        // 如果没有指定saveId，使用最后验证过的存档\n        const targetId = saveId || this.lastValidatedSave;\n        if (!targetId) {\n          return {\n            success: false,\n            message: '未指定存档ID'\n          };\n        }\n\n        // 使用存储服务加载存档数据\n        const saveData = await storageService.getData(`${SAVE_PREFIX}${targetId}`);\n        if (!saveData) {\n          return {\n            success: false,\n            message: '存档不存在或已损坏'\n          };\n        }\n\n        // 验证存档数据\n        const validationResult = validateSaveData(saveData);\n\n        return {\n          success: validationResult.isValid,\n          issues: validationResult.issues,\n          saveData,\n          canRepair: validationResult.issues.length > 0\n        };\n      } catch (error) {\n        handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n        console.error('验证存档失败', error);\n        return {\n          success: false,\n          message: `验证失败: ${error.message}`,\n          error\n        };\n      }\n    },\n\n    /**\n     * 保存游戏\n     * @param {string} saveName - 存档名称\n     * @param {boolean} isAutoSave - 是否为自动保存\n     * @returns {Promise<Object>} 保存结果\n     */\n    async saveGame(saveName, isAutoSave = false) {\n      return withErrorHandling(async () => {\n        const gameCore = useGameCoreStore();\n        const player = usePlayerStore();\n        const market = useMarketStore();\n        const event = useEventStore();\n        const uiStore = useUiStore();\n\n        // 生成存档数据 - 安全处理可能包含循环引用的对象\n        // 在外部声明变量，确保在try/catch外部可见\n        let saveData = {\n            version: CURRENT_GAME_VERSION,\n            timestamp: new Date().toISOString()\n        };\n\n        try {\n          console.log('准备存档数据...');\n\n          // 安全地获取游戏核心数据\n          const safeGameResult = gameCore.gameResult ? JSON.parse(JSON.stringify({\n            reason: gameCore.gameResult.reason,\n            week: gameCore.gameResult.week,\n            score: gameCore.gameResult.score,\n            endReason: gameCore.gameResult.endReason,\n            victoryAchieved: gameCore.gameResult.victoryAchieved,\n            firstVictoryWeek: gameCore.gameResult.firstVictoryWeek\n          })) : null;\n\n          // 安全地获取通知数据\n          const safeNotifications = gameCore.notifications ? gameCore.notifications.map(n => ({\n            id: n.id,\n            type: n.type,\n            message: n.message,\n            timestamp: n.timestamp\n          })) : [];\n\n          // 安全地处理库存物品\n          const safeInventory = player.inventory ? player.inventory.map(item => ({\n            productId: item.productId,\n            name: item.name,\n            quantity: item.quantity,\n            purchasePrice: item.purchasePrice,\n            purchaseWeek: item.purchaseWeek\n          })) : [];\n\n          // 安全地处理已购买房屋\n          const safePurchasedHouses = player.purchasedHouses ? player.purchasedHouses.map(house => ({\n            houseId: house.houseId,\n            name: house.name,\n            level: house.level,\n            purchasePrice: house.purchasePrice,\n            purchaseWeek: house.purchaseWeek,\n            location: typeof house.location === 'string' ? house.location : null\n          })) : [];\n\n          // 安全地处理事件数据\n          let safeActiveEvent = null;\n          if (event.activeEvent) {\n            safeActiveEvent = {\n              id: event.activeEvent.id,\n              title: event.activeEvent.title,\n              type: event.activeEvent.type\n            };\n          }\n\n          // 创建安全的存档对象\n          saveData = {\n          version: CURRENT_GAME_VERSION,\n          timestamp: new Date().toISOString(),\n          gameCore: {\n            currentWeek: gameCore.currentWeek,\n            maxWeeks: gameCore.maxWeeks,\n            gameStarted: gameCore.gameStarted,\n            gamePaused: gameCore.gamePaused,\n            gameOver: gameCore.gameOver,\n              gameResult: safeGameResult,\n              notifications: safeNotifications,\n              gameGoals: JSON.parse(JSON.stringify(gameCore.gameGoals || {}))\n          },\n          player: {\n            name: player.name,\n            money: player.money,\n            debt: player.debt,\n            capacity: player.capacity,\n            inventoryUsed: player.inventoryUsed,\n              inventory: safeInventory,\n              purchasedHouses: safePurchasedHouses,\n              statistics: JSON.parse(JSON.stringify(player.statistics || {}))\n          },\n          market: {\n              locations: JSON.parse(JSON.stringify(market.locations || [])),\n            currentLocation: market.currentLocation ? market.currentLocation.id : null,\n              productPrices: JSON.parse(JSON.stringify(market.productPrices || {})),\n              products: market.products ? market.products.map(p => typeof p === 'object' ? p.id : p) : [],\n              houses: market.houses ? market.houses.map(h => typeof h === 'object' ? h.id : h) : [],\n              marketModifiers: JSON.parse(JSON.stringify(market.marketModifiers || {}))\n          },\n          event: {\n              activeEvent: safeActiveEvent,\n            forceLocationChange: event.forceLocationChange,\n            targetLocation: event.targetLocation,\n            nextEventId: event.nextEventId,\n              triggeredEvents: JSON.parse(JSON.stringify(event.triggeredEvents || []))\n          }\n        };\n\n          console.log('存档数据准备完成');\n        } catch (error) {\n          handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n          console.error('准备存档数据时出错:', error);\n\n          // 创建简化版的存档数据\n          saveData = {\n            version: CURRENT_GAME_VERSION,\n            timestamp: new Date().toISOString(),\n            gameCore: {\n              currentWeek: gameCore.currentWeek,\n              maxWeeks: gameCore.maxWeeks,\n              gameStarted: true,\n              gamePaused: false,\n              gameOver: gameCore.gameOver\n            },\n            player: {\n              name: player.name,\n              money: player.money,\n              debt: player.debt,\n              capacity: 100,\n              inventoryUsed: 0,\n              inventory: [],\n              purchasedHouses: []\n            },\n            market: {\n              currentLocation: null,\n              productPrices: {},\n              products: [],\n              houses: [],\n              marketModifiers: {}\n            },\n            event: {\n              triggeredEvents: []\n            }\n          };\n\n          if (!isAutoSave) {\n            uiStore.showToast({\n              type: 'warning',\n              message: '存档数据处理出错，使用简化版本',\n              duration: 3000\n            });\n          }\n        }\n\n        // 验证存档数据\n        const validationResult = validateSaveData(saveData);\n        if (!validationResult.isValid) {\n          console.warn('生成的存档数据有问题，尝试修复...', validationResult.issues);\n\n          if (!isAutoSave) {\n            // 如果不是自动存档，显示提示\n            uiStore.showToast({\n              type: 'warning',\n              message: '存档数据有问题，正在修复...',\n              duration: 3000\n            });\n          }\n\n          // 修复数据\n          const repairResult = repairSaveData(saveData, this.saveTemplate);\n          // 使用修复后的数据\n          saveData = repairResult.data;\n\n          // 如果是用户手动保存，显示修复日志\n          if (!isAutoSave && repairResult.repairLog.length > 0) {\n            console.info('存档修复完成', repairResult.repairLog);\n            uiStore.showToast({\n              type: 'info',\n              message: `存档已修复 (${repairResult.repairLog.length}项问题)`,\n              duration: 3000\n            });\n          }\n        }\n\n        // 处理存档ID\n        let saveId;\n        let isNewSave = true;\n\n        if (isAutoSave) {\n          // 为自动存档生成ID\n          const autoSaveId = `auto_${Date.now()}`;\n          saveId = autoSaveId;\n          saveName = `自动存档 - 第${gameCore.currentWeek}周 - ${new Date().toLocaleString()}`;\n        } else {\n          // 检查是否已存在同名存档\n          const existingSave = this.saveList.find(save => save.name === saveName);\n          if (existingSave) {\n            // 如果存在同名存档，使用相同的ID进行覆盖\n            saveId = existingSave.id;\n            isNewSave = false;\n          } else {\n            // 生成新的存档ID\n            saveId = `save_${Date.now()}`;\n          }\n        }\n\n        // 创建存档元数据\n        const saveInfo = {\n          id: saveId,\n          name: saveName,\n          isAuto: isAutoSave,\n          timestamp: Date.now(),\n          week: gameCore.currentWeek,\n          playerMoney: player.money,\n          playerDebt: player.debt,\n          location: market.currentLocation ? market.currentLocation.name : '未知位置',\n          version: CURRENT_GAME_VERSION\n        };\n\n        try {\n          console.log('正在保存游戏数据到存储...');\n\n          // 保存游戏数据到本地存储\n        await storageService.setData(`${SAVE_PREFIX}${saveId}`, saveData);\n          console.log('游戏数据已保存到存储');\n\n          // 尝试使用Electron API直接保存到文件系统\n          if (window.electronAPI && window.electronAPI.saveGame) {\n            console.log('尝试使用Electron API保存游戏...');\n            const electronResult = await window.electronAPI.saveGame({\n              name: saveName,\n              gameState: saveData\n            });\n\n            if (electronResult && electronResult.success) {\n              console.log('游戏已成功保存到文件系统:', electronResult.path);\n            } else {\n              console.warn('Electron保存可能失败:', electronResult?.error || '未知错误');\n            }\n          }\n\n        // 更新存档列表\n          console.log('更新存档列表...');\n        if (isNewSave) {\n          this.saveList.unshift(saveInfo);\n        } else {\n          // 更新已存在的存档信息\n          const index = this.saveList.findIndex(save => save.id === saveId);\n          if (index !== -1) {\n            this.saveList[index] = saveInfo;\n            }\n          }\n        } catch (storageError) {\n          handleError(storageError, 'saveSystem (persistence)', ErrorType.STORAGE, ErrorSeverity.ERROR);\n          console.error('保存游戏数据时出错:', storageError);\n\n          // 尝试直接使用Electron API作为备份方案\n          if (window.electronAPI && window.electronAPI.saveGame) {\n            console.log('尝试使用备用方法保存游戏...');\n            const backupResult = await window.electronAPI.saveGame({\n              name: saveName,\n              gameState: saveData\n            });\n\n            if (!backupResult || !backupResult.success) {\n              throw storageError; // 如果备份方法也失败，重新抛出原始错误\n            }\n\n            console.log('已使用备用方法保存游戏');\n          } else {\n            throw storageError;\n          }\n        }\n\n        // 限制自动存档数量\n        if (isAutoSave) {\n          const autoSaves = this.saveList.filter(save => save.isAuto);\n          if (autoSaves.length > MAX_AUTO_SAVES) {\n            const oldestAutoSaves = autoSaves\n              .sort((a, b) => a.timestamp - b.timestamp)\n              .slice(0, autoSaves.length - MAX_AUTO_SAVES);\n\n            // 删除多余的自动存档\n            for (const oldSave of oldestAutoSaves) {\n              await this.deleteSave(oldSave.id, true);\n            }\n          }\n        }\n\n        // 保存存档列表\n        await storageService.setData(SAVE_LIST_KEY, this.saveList);\n\n        if (!isAutoSave) {\n          // 显示保存成功提示\n          uiStore.showToast({\n            type: 'success',\n            message: isNewSave ? '游戏已保存' : '存档已更新',\n            duration: 2000\n          });\n        }\n\n        // 更新最后自动保存的周数\n        if (isAutoSave) {\n          this.lastAutoSaveWeek = gameCore.currentWeek;\n        }\n\n        return {\n          success: true,\n          saveId,\n          isNewSave\n        };\n      }, 'saveGame', ErrorType.STORAGE, ErrorSeverity.ERROR);\n    },\n\n    /**\n     * 加载游戏\n     * @param {string} saveId - 存档ID\n     * @returns {Promise<Object>} 加载结果\n     */\n    async loadGame(saveId) {\n      return withErrorHandling(async () => {\n        const gameCore = useGameCoreStore();\n        const player = usePlayerStore();\n        const market = useMarketStore();\n        const event = useEventStore();\n        const uiStore = useUiStore();\n\n        try {\n          // 记录当前验证的存档ID，用于后续可能的修复操作\n          this.lastValidatedSave = saveId;\n\n          // 先验证存档完整性\n          const validationResult = await this.validateSave(saveId);\n\n          // 如果验证失败，尝试修复\n          if (!validationResult.success) {\n            uiStore.showToast({\n              type: 'warning',\n              message: '存档可能已损坏，正在尝试修复...',\n              duration: 3000\n            });\n\n            // 尝试加载存档数据，即使可能已损坏\n            const rawSaveData = await storageService.getData(`${SAVE_PREFIX}${saveId}`);\n\n            if (!rawSaveData) {\n              uiStore.showToast({\n                type: 'error',\n                message: '存档数据无法读取，无法修复',\n                duration: 5000\n              });\n              this.isLoading = false;\n              return { success: false, message: '存档数据无法读取' };\n            }\n\n            // 尝试修复数据\n            const repairResult = repairSaveData(rawSaveData, this.saveTemplate);\n            const saveData = repairResult.data;\n\n            // 如果修复后数据依然有问题，返回错误\n            const secondValidation = validateSaveData(saveData);\n            if (!secondValidation.isValid) {\n              uiStore.showToast({\n                type: 'error',\n                message: '存档损坏严重，无法修复',\n                duration: 5000\n              });\n              this.isLoading = false;\n              return { success: false, message: '存档无法修复' };\n            }\n\n            // 如果修复成功，显示提示并保存修复后的数据\n            uiStore.showToast({\n              type: 'success',\n              message: `存档已成功修复 (${repairResult.repairLog.length}项问题)`,\n              duration: 5000\n            });\n\n            // 覆盖保存修复后的数据\n            await storageService.setData(`${SAVE_PREFIX}${saveId}`, saveData);\n            console.info('已保存修复后的存档', saveData);\n\n            // 使用修复后的数据进行加载\n            await this.loadStoresFromSaveData(saveData);\n          } else {\n            // 验证成功，直接加载\n            await this.loadStoresFromSaveData(validationResult.saveData);\n          }\n\n          // 查找并更新存档信息\n          const saveInfo = this.saveList.find(save => save.id === saveId);\n          if (saveInfo) {\n            // 更新存档预览数据\n            saveInfo.previewData = {\n              purchasedHouses: player.purchasedHouses.length,\n              debt: player.debt,\n              inventory: player.inventory.length,\n              netWorth: player.netWorth\n            };\n\n            // 保存更新后的存档列表\n            await storageService.setData(SAVE_LIST_KEY, this.saveList);\n          }\n\n          // 加载完成\n          this.isLoading = false;\n\n          return {\n            success: true,\n            message: '加载成功'\n          };\n        } catch (error) {\n          handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n          console.error('加载游戏失败', error);\n          this.isLoading = false;\n\n          uiStore.showToast({\n            type: 'error',\n            message: '加载存档失败: ' + error.message,\n            duration: 5000\n          });\n\n          return {\n            success: false,\n            error,\n            message: '加载失败: ' + error.message\n          };\n        }\n      }, 'loadGame', ErrorType.STORAGE, ErrorSeverity.ERROR);\n    },\n\n    /**\n     * 从存档数据加载各个Store\n     * @param {Object} saveData - 存档数据\n     * @private\n     */\n    async loadStoresFromSaveData(saveData) {\n      const gameCore = useGameCoreStore();\n      const player = usePlayerStore();\n      const market = useMarketStore();\n      const event = useEventStore();\n\n      // 确保数据兼容性\n      saveData = ensureVersionCompatibility(saveData, CURRENT_GAME_VERSION);\n\n      // 加载游戏核心数据\n      if (saveData.gameCore) {\n        gameCore.currentWeek = saveData.gameCore.currentWeek || 1;\n        gameCore.maxWeeks = saveData.gameCore.maxWeeks || 52;\n        gameCore.gameStarted = Boolean(saveData.gameCore.gameStarted);\n        gameCore.gamePaused = Boolean(saveData.gameCore.gamePaused);\n        gameCore.gameOver = Boolean(saveData.gameCore.gameOver);\n        gameCore.gameResult = saveData.gameCore.gameResult || null;\n        gameCore.notifications = Array.isArray(saveData.gameCore.notifications)\n          ? saveData.gameCore.notifications\n          : [];\n        gameCore.gameGoals = saveData.gameCore.gameGoals || {\n          requiredNetWorth: 400000,\n          targetWeeks: 30,\n          debtRatio: 0.4\n        };\n      }\n\n      // 加载玩家数据\n      if (saveData.player) {\n        player.name = saveData.player.name || '玩家';\n        player.money = saveData.player.money || 5000;\n        player.debt = saveData.player.debt || 2000;\n        player.capacity = saveData.player.capacity || 100;\n        player.inventoryUsed = saveData.player.inventoryUsed || 0;\n        player.inventory = Array.isArray(saveData.player.inventory)\n          ? saveData.player.inventory\n          : [];\n        player.purchasedHouses = Array.isArray(saveData.player.purchasedHouses)\n          ? saveData.player.purchasedHouses\n          : [];\n        player.statistics = saveData.player.statistics || {\n          weekCount: saveData.gameCore.currentWeek || 1,\n          transactionCount: 0,\n          totalProfit: 0,\n          maxMoney: player.money,\n          visitedLocations: [],\n          housePurchases: [],\n          firstHousePurchaseWeek: null\n        };\n      }\n\n      // 加载市场数据\n      if (saveData.market) {\n        market.locations = Array.isArray(saveData.market.locations)\n          ? saveData.market.locations\n          : [];\n        market.productPrices = saveData.market.productPrices || {};\n\n        // 如果有当前地点信息，设置当前地点\n        if (saveData.market.currentLocation && market.locations.length > 0) {\n          market.currentLocation = market.locations.find(\n            location => location.id === saveData.market.currentLocation\n          ) || market.locations[0];\n        } else if (market.locations.length > 0) {\n          market.currentLocation = market.locations[0];\n        }\n\n        // 加载产品和房屋数据\n        market.loadProducts(saveData.market.products || []);\n        market.loadHouses(saveData.market.houses || []);\n        market.marketModifiers = saveData.market.marketModifiers || {};\n      }\n\n      // 加载事件数据\n      if (saveData.event) {\n        event.activeEvent = saveData.event.activeEvent || null;\n        event.forceLocationChange = Boolean(saveData.event.forceLocationChange);\n        event.targetLocation = saveData.event.targetLocation || null;\n        event.nextEventId = saveData.event.nextEventId || null;\n        event.triggeredEvents = Array.isArray(saveData.event.triggeredEvents)\n          ? saveData.event.triggeredEvents\n          : [];\n      }\n    },\n\n    /**\n     * 删除存档\n     * @param {string} saveId - 存档ID\n     * @param {boolean} [silent=false] - 是否静默删除（不显示提示）\n     * @returns {Promise<boolean>} 是否删除成功\n     */\n    async deleteSave(saveId, silent = false) {\n      return withErrorHandling(async () => {\n        // 查找存档信息\n        const saveIndex = this.saveList.findIndex(save => save.id === saveId);\n\n        try {\n          await storageService.removeData(`${SAVE_PREFIX}${saveId}`);\n\n          // 更新存档列表\n          if (saveIndex !== -1) {\n            this.saveList.splice(saveIndex, 1);\n          }\n\n          // 保存更新后的存档列表\n          await storageService.setData(SAVE_LIST_KEY, this.saveList);\n\n          if (!silent) {\n            // 显示删除成功提示\n            const uiStore = useUiStore();\n            uiStore.showToast({\n              type: 'success',\n              message: '存档已删除',\n              duration: 2000\n            });\n          }\n\n          return true;\n        } catch (error) {\n          handleError(error, 'saveSystem (persistence)', ErrorType.UNKNOWN, ErrorSeverity.ERROR);\n          console.error('删除存档失败', error);\n\n          if (!silent) {\n            // 显示删除失败提示\n            const uiStore = useUiStore();\n            uiStore.showToast({\n              type: 'error',\n              message: '删除存档失败: ' + error.message,\n              duration: 5000\n            });\n          }\n\n          return false;\n        }\n      }, 'deleteSave', ErrorType.STORAGE, ErrorSeverity.WARNING);\n    },\n\n    /**\n     * 清理过期的自动存档\n     * 保留最新的MAX_AUTO_SAVES个自动存档\n     */\n    async cleanupOldAutoSaves() {\n      // 获取所有自动存档\n      const autoSaves = this.saveList.filter(save => save.isAuto);\n\n      // 如果自动存档数量超过限制，删除最旧的\n      if (autoSaves.length > MAX_AUTO_SAVES) {\n        // 按日期排序\n        autoSaves.sort((a, b) => b.timestamp - a.timestamp);\n\n        // 删除多余的自动存档\n        for (let i = MAX_AUTO_SAVES; i < autoSaves.length; i++) {\n          await this.deleteSave(autoSaves[i].id, true);\n        }\n      }\n    },\n\n    /**\n     * 检查是否需要自动保存\n     * @param {number} currentWeek - 当前周数\n     */\n    async checkAutoSave(currentWeek) {\n      if (!this.autoSaveEnabled) return;\n\n      const gameCore = useGameCoreStore();\n\n      // 如果游戏未开始或已结束，不自动保存\n      if (!gameCore.gameStarted || gameCore.gameOver) return;\n\n      // 每AUTO_SAVE_INTERVAL周自动保存一次\n      if (currentWeek > this.lastAutoSaveWeek && currentWeek % AUTO_SAVE_INTERVAL === 0) {\n        await this.autoSave();\n      }\n    },\n\n    /**\n     * 执行自动保存\n     */\n    async autoSave() {\n      const gameCore = useGameCoreStore();\n      const player = usePlayerStore();\n\n      const saveName = `自动存档 (第${gameCore.currentWeek}周)`;\n      await this.saveGame(saveName, true);\n\n      console.log(`自动存档完成: ${saveName}`);\n    },\n\n    /**\n     * 触发重要操作后的自动保存\n     * @param {string} actionType - 操作类型\n     */\n    async triggerImportantActionAutoSave(actionType) {\n      if (!this.autoSaveEnabled) return;\n\n      const gameCore = useGameCoreStore();\n\n      // 如果游戏未开始或已结束，不自动保存\n      if (!gameCore.gameStarted || gameCore.gameOver) return;\n\n      let saveName = '';\n\n      switch (actionType) {\n        case 'house_purchase':\n          saveName = `购房存档 (第${gameCore.currentWeek}周)`;\n          break;\n        case 'major_transaction':\n          saveName = `大额交易存档 (第${gameCore.currentWeek}周)`;\n          break;\n        case 'event_completed':\n          saveName = `事件完成存档 (第${gameCore.currentWeek}周)`;\n          break;\n        case 'debt_repaid':\n          saveName = `还清债务存档 (第${gameCore.currentWeek}周)`;\n          break;\n        default:\n          saveName = `重要操作存档 (第${gameCore.currentWeek}周)`;\n      }\n\n      await this.saveGame(saveName, true);\n\n      console.log(`重要操作自动存档完成: ${saveName}`);\n    }\n  },\n\n  getters: {\n    /**\n     * 获取自动存档列表\n     */\n    autoSaves(state) {\n      return state.saveList.filter(save => save.isAuto)\n        .sort((a, b) => b.timestamp - a.timestamp);\n    },\n\n    /**\n     * 获取手动存档列表\n     */\n    manualSaves(state) {\n      return state.saveList.filter(save => !save.isAuto)\n        .sort((a, b) => b.timestamp - a.timestamp);\n    },\n\n    /**\n     * 获取最新存档\n     */\n    latestSave(state) {\n      if (state.saveList.length === 0) return null;\n\n      return state.saveList.sort((a, b) => b.timestamp - a.timestamp)[0];\n    }\n  }\n});\n","/**\r\n * 主Store入口文件\r\n * 整合所有模块化Store并提供兼容层\r\n */\r\n\r\nimport { defineStore } from 'pinia';\r\nimport { computed } from 'vue';\r\nimport { useGameCoreStore } from './gameCore';\r\nimport { usePlayerStore, useInventoryActions } from './player';\r\nimport { useMarketStore } from './market';\r\nimport { useEventStore } from './events';\r\nimport { useSaveStore } from './persistence';\r\n\r\n/**\r\n * 兼容层 - 保持与原有gameStore.js相同的API\r\n * 允许现有组件继续使用原来的API，同时逐步迁移到新的模块化结构\r\n */\r\nexport const useGameStore = defineStore('gameCompat', () => {\r\n  const gameCore = useGameCoreStore();\r\n  const player = usePlayerStore();\r\n  const market = useMarketStore();\r\n  const events = useEventStore();\r\n  const saves = useSaveStore();\r\n  const inventoryActions = useInventoryActions();\r\n\r\n  // 转发所有状态属性\r\n  const currentWeek = computed(() => gameCore.currentWeek);\r\n  const maxWeeks = computed(() => gameCore.maxWeeks);\r\n  const gameStarted = computed(() => gameCore.gameStarted);\r\n  const gamePaused = computed(() => gameCore.gamePaused);\r\n  const gameOver = computed(() => gameCore.gameOver);\r\n  const gameResult = computed(() => gameCore.gameResult);\r\n  const notifications = computed(() => gameCore.notifications);\r\n  const gameGoals = computed(() => gameCore.gameGoals);\r\n  const gameProgress = computed(() => gameCore.gameProgress);\r\n  const isGameActive = computed(() => gameCore.isGameActive);\r\n  \r\n  // 玩家相关状态\r\n  const playerState = computed(() => player);\r\n  \r\n  // 市场相关状态\r\n  const locations = computed(() => market.locations);\r\n  const currentLocation = computed(() => market.currentLocation);\r\n  const productPrices = computed(() => market.productPrices);\r\n  const products = computed(() => market.products);\r\n  const availableProducts = computed(() => market.availableProducts);\r\n  const houses = computed(() => market.houses);\r\n  const marketModifiers = computed(() => market.marketModifiers);\r\n  \r\n  // 事件相关状态\r\n  const currentEvent = computed(() => events.currentEvent);\r\n  const eventHistory = computed(() => events.eventHistory);\r\n\r\n  // 转发所有操作方法\r\n  function startNewGame(playerName) {\r\n    gameCore.startNewGame(playerName);\r\n  }\r\n  \r\n  function advanceWeek() {\r\n    return gameCore.advanceWeek();\r\n  }\r\n  \r\n  function changeLocation(locationId) {\r\n    return market.changeLocation(locationId);\r\n  }\r\n  \r\n  function updateProductPrices() {\r\n    market.updateProductPrices(gameCore.currentWeek);\r\n  }\r\n  \r\n  function updateLocationProducts() {\r\n    market.updateLocationProducts(gameCore.currentWeek);\r\n  }\r\n  \r\n  function generateRandomEvent() {\r\n    events.generateRandomEvent(gameCore.currentWeek);\r\n  }\r\n  \r\n  function buyProduct(productId, quantity) {\r\n    // 确保productId是字符串类型，以便统一比较\r\n    const productIdStr = String(productId);\r\n    \r\n    // 从市场可用商品中查找产品\r\n    const product = market.availableProducts.find(p => String(p.id) === productIdStr);\r\n    \r\n    if (!product) {\r\n      console.log('商品不存在:', productId, '可用商品IDs:', market.availableProducts.map(p => p.id));\r\n      return { success: false, message: '商品不存在' };\r\n    }\r\n    \r\n    // 使用字符串化的ID查找价格\r\n    const price = market.productPrices[productIdStr]?.price;\r\n    if (!price) {\r\n      console.log('价格未定义:', productId, '价格列表keys:', Object.keys(market.productPrices));\r\n      // 尝试获取商品的基本价格\r\n      const basePrice = product.basePrice || 0;\r\n      if (basePrice > 0) {\r\n        console.log('使用商品基本价格:', basePrice);\r\n        return buyWithBasePrice(product, basePrice, quantity);\r\n      }\r\n      return { success: false, message: '价格未定义' };\r\n    }\r\n    \r\n    const totalCost = price * quantity;\r\n    if (player.money < totalCost) {\r\n      return { success: false, message: '资金不足' };\r\n    }\r\n    \r\n    const addResult = inventoryActions.addToInventory(product, quantity, price);\r\n    if (!addResult.success) {\r\n      return addResult;\r\n    }\r\n    \r\n    player.money -= totalCost;\r\n    player.statistics.transactionCount += 1;\r\n    \r\n    return { success: true };\r\n  }\r\n  \r\n  function sellProduct(productId, quantity) {\r\n    // 参数验证\r\n    if (!productId || quantity <= 0) {\r\n      return { success: false, message: '无效的参数' };\r\n    }\r\n    \r\n    // 确保productId是字符串类型，以便统一比较\r\n    const productIdStr = String(productId);\r\n    \r\n    // 查找玩家库存中的商品（现在只会有一个条目，因为我们按产品ID合并了）\r\n    const inventoryItem = player.inventory.find(item => String(item.productId) === productIdStr);\r\n    if (!inventoryItem) {\r\n      console.log('物品不存在于库存中:', productId, '库存物品IDs:', player.inventory.map(item => item.productId));\r\n      return { success: false, message: '物品不存在' };\r\n    }\r\n    \r\n    // 检查数量是否足够\r\n    if (inventoryItem.quantity < quantity) {\r\n      return { success: false, message: '数量不足' };\r\n    }\r\n    \r\n    // 获取当前市场价格，使用字符串化的ID\r\n    const currentPrice = market.productPrices[productIdStr]?.price || 0;\r\n    if (currentPrice <= 0) {\r\n      console.log('当前市场不收购此物品:', productId, '价格:', currentPrice);\r\n      // 尝试查找商品基本价格\r\n      const product = market.products.find(p => String(p.id) === productIdStr);\r\n      if (product && product.basePrice > 0) {\r\n        console.log('使用商品基本价格出售:', product.basePrice);\r\n        return sellWithBasePrice(inventoryItem, product.basePrice, quantity);\r\n      }\r\n      return { success: false, message: '当前市场不收购此物品' };\r\n    }\r\n    \r\n    // 计算总收入\r\n    const totalIncome = currentPrice * quantity;\r\n    \r\n    // 使用平均购买价格计算成本\r\n    const inventoryIndex = player.inventory.indexOf(inventoryItem);\r\n    const avgPurchasePrice = inventoryItem.purchasePrice;\r\n    const totalCost = avgPurchasePrice * quantity;\r\n      \r\n      // 从库存中移除物品\r\n    const removeResult = inventoryActions.removeFromInventory(inventoryIndex, quantity);\r\n      if (!removeResult.success) {\r\n        return { success: false, message: '出售失败：' + removeResult.message };\r\n    }\r\n    \r\n    // 计算利润\r\n    const profit = totalIncome - totalCost;\r\n    \r\n    // 更新玩家资金和统计数据\r\n    player.money += totalIncome;\r\n    player.statistics.totalProfit += profit;\r\n    player.statistics.transactionCount += 1;\r\n    \r\n    // 返回成功结果\r\n    return { \r\n      success: true, \r\n      income: totalIncome, \r\n      profit: profit, \r\n      profitPercent: totalCost > 0 ? (profit / totalCost * 100).toFixed(1) : 0\r\n    };\r\n  }\r\n  \r\n  function saveGame(saveName, isAutoSave = false) {\r\n    return saves.saveGame(saveName, isAutoSave);\r\n  }\r\n  \r\n  function loadGame(saveId) {\r\n    return saves.loadGame(saveId);\r\n  }\r\n  \r\n  function getSaves() {\r\n    return saves.getSaves();\r\n  }\r\n  \r\n  function checkGameEnd() {\r\n    gameCore.checkGameEnd();\r\n  }\r\n  \r\n  function getCurrentProductPrice(productId) {\r\n    if (!productId) return 0;\r\n    \r\n    // 确保将productId转换为字符串进行比较\r\n    const productIdStr = String(productId);\r\n    \r\n    const price = market.productPrices[productIdStr]?.price;\r\n    if (price !== undefined && price !== null) {\r\n      return price;\r\n    }\r\n    \r\n    // 如果在productPrices中找不到价格，尝试从products列表中获取basePrice\r\n    const product = market.products.find(p => String(p.id) === productIdStr);\r\n    if (product && product.basePrice) {\r\n      return product.basePrice;\r\n    }\r\n    \r\n    return 0;\r\n  }\r\n  \r\n  // 添加getProductPriceTrend方法\r\n  function getProductPriceTrend(productId) {\r\n    return market.getProductPriceTrend(productId);\r\n  }\r\n  \r\n  function repayDebt(amount) {\r\n    if (amount <= 0 || amount > player.money) {\r\n      return { success: false, message: '无效的还款金额' };\r\n    }\r\n    \r\n    if (amount > player.debt) {\r\n      amount = player.debt;\r\n    }\r\n    \r\n    player.money -= amount;\r\n    player.debt -= amount;\r\n    \r\n    return { success: true, amountRepaid: amount };\r\n  }\r\n  \r\n  function buyHouse(houseId) {\r\n    const house = market.houses.find(h => h.id === houseId);\r\n    if (!house) {\r\n      return { success: false, message: '房屋不存在' };\r\n    }\r\n    \r\n    if (player.money < house.price) {\r\n      return { success: false, message: '资金不足' };\r\n    }\r\n    \r\n    if (player.purchasedHouses.some(h => h.houseId === houseId)) {\r\n      return { success: false, message: '已拥有此房屋' };\r\n    }\r\n    \r\n    player.money -= house.price;\r\n    player.purchasedHouses.push({\r\n      houseId: house.id,\r\n      name: house.name,\r\n      purchasePrice: house.price,\r\n      purchaseDate: new Date().toISOString()\r\n    });\r\n    \r\n    // 检查游戏结束条件\r\n    gameCore.checkGameEnd();\r\n    \r\n    return { success: true };\r\n  }\r\n  \r\n  function addNotification(type, message) {\r\n    gameCore.addNotification(type, message);\r\n  }\r\n  \r\n  // 使用基本价格购买的辅助函数\r\n  function buyWithBasePrice(product, basePrice, quantity) {\r\n    const totalCost = basePrice * quantity;\r\n    if (player.money < totalCost) {\r\n      return { success: false, message: '资金不足' };\r\n    }\r\n    \r\n    const addResult = inventoryActions.addToInventory(product, quantity, basePrice);\r\n    if (!addResult.success) {\r\n      return addResult;\r\n    }\r\n    \r\n    player.money -= totalCost;\r\n    player.statistics.transactionCount += 1;\r\n    \r\n    return { success: true };\r\n  }\r\n  \r\n  // 使用基本价格出售的辅助函数\r\n  function sellWithBasePrice(inventoryItem, basePrice, quantity) {\r\n    // 计算总收入\r\n    const totalIncome = basePrice * quantity;\r\n    \r\n    // 使用平均购买价格计算成本\r\n    const inventoryIndex = player.inventory.indexOf(inventoryItem);\r\n    const avgPurchasePrice = inventoryItem.purchasePrice;\r\n    const totalCost = avgPurchasePrice * quantity;\r\n    \r\n    // 从库存中移除物品\r\n    const removeResult = inventoryActions.removeFromInventory(inventoryIndex, quantity);\r\n    if (!removeResult.success) {\r\n      return { success: false, message: '出售失败：' + removeResult.message };\r\n    }\r\n    \r\n    // 计算利润\r\n    const profit = totalIncome - totalCost;\r\n    \r\n    // 更新玩家资金和统计数据\r\n    player.money += totalIncome;\r\n    player.statistics.totalProfit += profit;\r\n    player.statistics.transactionCount += 1;\r\n    \r\n    // 返回成功结果\r\n    return { \r\n      success: true, \r\n      income: totalIncome, \r\n      profit: profit, \r\n      profitPercent: totalCost > 0 ? (profit / totalCost * 100).toFixed(1) : 0\r\n    };\r\n  }\r\n\r\n  // 返回兼容API\r\n  return {\r\n    // 状态\r\n    currentWeek,\r\n    maxWeeks,\r\n    gameStarted,\r\n    gamePaused,\r\n    gameOver,\r\n    gameResult,\r\n    notifications,\r\n    gameGoals,\r\n    gameProgress,\r\n    isGameActive,\r\n    player: playerState,\r\n    locations,\r\n    currentLocation,\r\n    productPrices,\r\n    products,\r\n    availableProducts,\r\n    houses,\r\n    marketModifiers,\r\n    currentEvent,\r\n    eventHistory,\r\n    \r\n    // 方法\r\n    startNewGame,\r\n    advanceWeek,\r\n    changeLocation,\r\n    updateProductPrices,\r\n    updateLocationProducts,\r\n    generateRandomEvent,\r\n    buyProduct,\r\n    sellProduct,\r\n    saveGame,\r\n    loadGame,\r\n    getSaves,\r\n    checkGameEnd,\r\n    getCurrentProductPrice,\r\n    getProductPriceTrend, // 添加到返回的API中\r\n    repayDebt,\r\n    buyHouse,\r\n    addNotification\r\n  };\r\n});\r\n\r\n// 导出其他store\r\nexport { useGameCoreStore } from './gameCore';\r\nexport { usePlayerStore, useInventoryActions } from './player';\r\nexport { useMarketStore } from './market';\r\nexport { useEventStore } from './events';\r\nexport { useSaveStore } from './persistence';\r\nexport { useSettingsStore } from './settingsStore';\r\nexport { useUiStore } from './uiStore'; "],"file":"assets/stores-6a84416e.js"}