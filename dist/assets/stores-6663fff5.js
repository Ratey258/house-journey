import{c as ut,d as ce}from"./vue-core-cd9800c2.js";import{a as ie,b6 as dt,e as D}from"./vendor-e7c44fa3.js";const mt="modulepreload",pt=function(e,t){return new URL(e,t).href},Qe={},ft=function(t,r,i){if(!r||r.length===0)return t();const o=document.getElementsByTagName("link");return Promise.all(r.map(s=>{if(s=pt(s,i),s in Qe)return;Qe[s]=!0;const n=s.endsWith(".css"),a=n?'[rel="stylesheet"]':"";if(!!i)for(let h=o.length-1;h>=0;h--){const m=o[h];if(m.href===s&&(!n||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${s}"]${a}`))return;const d=document.createElement("link");if(d.rel=n?"stylesheet":mt,n||(d.as="script",d.crossOrigin=""),d.href=s,document.head.appendChild(d),n)return new Promise((h,m)=>{d.addEventListener("load",h),d.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${s}`)))})})).then(()=>t()).catch(s=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=s,window.dispatchEvent(n),!n.defaultPrevented)throw s})},S={VALIDATION:"validation",NETWORK:"network",STORAGE:"storage",GAME_LOGIC:"gameLogic",SYSTEM:"system",UNKNOWN:"unknown"},P={FATAL:"fatal",ERROR:"error",WARNING:"warning",INFO:"info"};function ht(e,t=S.UNKNOWN,r=P.ERROR,i={}){const o=new Error(e);return o.type=t,o.severity=r,o.metadata=i,o.timestamp=new Date().toISOString(),o}function Ge(e,t={}){return ht(e,S.STORAGE,P.ERROR,t)}const gt={common:{confirm:"确认",cancel:"取消",back:"返回",save:"保存",delete:"删除",loading:"加载中...",yes:"是",no:"否",ok:"确定",next:"下一步",previous:"上一步",close:"关闭",edit:"编辑",create:"创建",update:"更新",remove:"移除",search:"搜索",filter:"筛选",sort:"排序",refresh:"刷新",retry:"重试",more:"更多"},time:{week:"第{week}周",weeks:"{count}周",of:"/",remaining:"剩余: {weeks}周",day:"天",hour:"小时",minute:"分钟",second:"秒"},system:{defaultPlayerName:"玩家",autoSave:"自动存档",unknownError:"发生未知错误",criticalError:"发生严重错误",componentError:"组件错误",retry:"重试",errorLogs:"错误日志",exportLogs:"导出日志",clearLogs:"清空日志",severity:"严重程度",type:"类型",search:"搜索"},currency:"元",settings:{title:"游戏设置",game:"游戏设置",display:"显示设置",audio:"音频设置",language:"语言",difficulty:"游戏难度",difficulties:{easy:"简单",standard:"标准",hard:"困难"},autoSaveInterval:"自动保存间隔",autoSaveIntervals:{1:"每周",2:"每2周",5:"每5周",10:"每10周"},soundEnabled:"游戏音效",fullScreen:"全屏模式",textSpeed:"文本速度",textSpeeds:{slow:"慢速",normal:"正常",fast:"快速"},reset:"恢复默认设置",saveSuccess:"设置已保存",resetSuccess:"设置已重置",description:{difficulty:"调整游戏的整体难度，影响价格波动、事件触发概率等",autoSave:"设置游戏自动保存的频率",sound:"启用或禁用游戏音效",fullScreen:"以全屏模式运行游戏",textSpeed:"调整对话和提示文本的显示速度",language:"选择游戏界面语言"}},game:{title:"买房记",week:"周数",menu:"菜单",nextWeek:"进入下一周",tabs:{market:"市场",inventory:"背包",houses:"房屋"},marketStatus:{bull:"上涨(牛市)",bear:"下跌(熊市)",stable:"稳定",mixed:"混合"}},gameMenu:{title:"游戏菜单",save:"保存游戏",load:"读取游戏",mainMenu:"返回主菜单",settings:"设置",continue:"继续游戏"},saveDialog:{title:"保存游戏",namePlaceholder:"输入存档名称"},gameOver:{title:"游戏结束",victory:"恭喜！你成功购买了豪宅！",houseVictory:"恭喜！你已购买房产，完成游戏主要目标！",timeLimit:"时间已到！",weeksPlayed:"游戏周数",finalMoney:"最终资金",netWorth:"净资产",purchasedHouses:"已购房屋",backToMenu:"返回主菜单",continueGame:"继续游戏",continueDescription:"你可以选择继续游戏，直到第52周结束，或查看当前成绩",restartGame:"重新开始"},recovery:{title:"游戏恢复",defaultMessage:"检测到游戏意外中断。我们找到了您的游戏进度，是否恢复？",date:"日期",gameWeek:"游戏周",weekNumber:"第 {week} 周",playerName:"玩家名称",money:"资金",recover:"恢复游戏",cancel:"放弃恢复",success:"游戏状态已成功恢复",failed:"无法恢复游戏状态",noSnapshot:"没有可用的恢复点",automaticRecovery:"游戏将尝试自动恢复您的进度",currency:"元"},inventory:{title:"背包",capacityUsed:"容量: {used}/{total}",productName:"商品名称",quantity:"数量",purchasePrice:"购买价",currentPrice:"当前价",trend:"趋势",profit:"盈亏",action:"操作",sell:"出售",empty:"背包空空如也",full:"背包已满",almostFull:"背包即将装满"}},yt={market:{title:"{location}",selectLocation:"选择地点",productName:"商品名称",price:"价格",trend:"趋势",change:"涨跌",action:"操作",buy:"购买",noProducts:"当前地点没有可购买的商品",special:"特价商品",viewMode:{table:"表格视图",card:"卡片视图"},priceHistory:"价格历史",priceChart:{title:"价格走势图",weeks:"周数",price:"价格",high:"最高价",low:"最低价",average:"平均价",currentPrice:"当前价格",historicalPrices:"历史价格",priceRange:"价格区间",weekRange:"周数区间",noData:"暂无价格数据"},filter:{all:"全部商品",special:"特价商品",rising:"上涨商品",falling:"下跌商品",stable:"稳定商品"},sort:{default:"默认排序",priceAsc:"价格从低到高",priceDesc:"价格从高到低",changeAsc:"涨幅从低到高",changeDesc:"涨幅从高到低",nameAsc:"名称正序",nameDesc:"名称倒序"},location:{travel:"前往",currentLocation:"当前地点",travelCost:"旅行费用",travelTime:"旅行时间",travelConfirm:"确认前往{location}吗？",travelSuccess:"你已到达{location}",second_hand_market:"二手市场",premium_mall:"高端商城",electronics_hub:"电子科技城",black_market:"地下黑市",commodity_market:"大宗商品交易所",second_hand_market_desc:"各类二手物品和低价生活必需品的集散地，价格便宜但品质参差不齐",premium_mall_desc:"汇聚各类高端品牌和奢侈品的购物中心，价格昂贵但品质优良",electronics_hub_desc:"各类电子产品和数码设备的专业交易市场，价格适中且品种齐全",black_market_desc:"隐蔽的非法交易场所，各类珍稀收藏品和奇特商品云集，风险与机遇并存",commodity_market_desc:"批发市场和大宗商品交易的集中地，价格低廉但需要大量采购"},houseMarket:{title:"房产市场",affordable:"可购买",purchased:"已购买",alreadyOwned:"已拥有",price:"价格",level:"等级",size:"面积",location:"位置",buyButton:"购买",noHouses:"没有可购买的房屋",notEnoughMoney:"资金不足！您需要¥{price}，但只有¥{money}，还差¥{shortfall}",fundsChanged:"您的资金已发生变化！需要¥{price}，但只有¥{money}，还差¥{shortfall}",significantConfirm:"这笔交易将花费您{percent}%的资金，确定要购买吗？",purchaseSuccess:"恭喜！您已成功购买{house}",purchaseFailed:"购买失败，请稍后重试",confirmTitle:"确认购买房产",confirmMessage:'您确定要购买"{house}"吗？',yourMoney:"您的资金",remaining:"购买后剩余",significantWarning:"注意：这是一笔大额交易，将耗费您大部分资金！",victoryPurchase:"恭喜！您已成功购买房产",victoryMessage:`恭喜您购买了房产：{house}！

您当前处于第{week}周，游戏总共有{maxWeek}周。`,continuePrompt:"您想要结束游戏并查看结果，还是继续游戏争取更高分数？",continuePlaying:"您选择了继续游戏，争取更高分数！游戏将继续进行到第52周。",endGameNow:"结束游戏并查看成绩",continueGame:"继续游戏",details:{title:"房屋详情",price:"价格",size:"面积",location:"位置",type:"类型",features:"特色",description:"描述"},types:{apartment:"公寓",house:"独栋别墅",villa:"豪华别墅",mansion:"豪宅",penthouse:"顶层公寓"},features:{garden:"花园",pool:"游泳池",garage:"车库",security:"安保系统",view:"景观视野",central:"中心位置",quiet:"安静社区",modern:"现代装修",classic:"经典风格",luxury:"豪华装修"}}},houses:{small:{name:"单身公寓",description:"适合单身人士居住的小型公寓，位置便利但空间有限。"},medium:{name:"二手旧房",description:"年代较久的二手住宅，价格适中但可能需要装修。空间较大，非常适合改造成理想的家。"},large:{name:"高档小区",description:"现代化高档住宅小区，环境优美，配套设施齐全。社区环境安全，是家庭居住的绝佳选择。"},luxury:{name:"现代别墅",description:"独栋现代别墅，拥有私家花园和车库。宽敞的空间和精致的设计，彰显主人的品味与地位。"},mansion:{name:"私人庄园",description:"大型私人庄园，带有大片绿地和多功能区域。拥有这样的房产，代表你已达到人生巅峰！"}},buyModal:{title:"购买 {product}",price:"单价",availableMoney:"可用资金",availableSpace:"可用空间",quantity:"购买数量",totalCost:"总花费",maxQuantity:"最大",confirm:"确认购买",cancel:"取消"},sellModal:{title:"出售 {product}",purchasePrice:"买入价",currentPrice:"当前价",quantity:"持有数量",sellQuantity:"出售数量",potentialProfit:"预计盈亏",totalIncome:"总收入",maxQuantity:"全部",confirm:"确认出售",cancel:"取消"},houseModal:{title:"购买 {house}",confirmPurchase:"确认购买此房屋吗？",price:"房屋价格",availableMoney:"可用资金",remainingMoney:"购买后剩余",confirm:"确认购买",cancel:"取消",endGame:"购买此房屋将结束游戏"},trends:{rising_strong:"价格急剧上涨",rising:"价格上涨中",stable_high:"高位稳定",stable:"价格稳定",stable_low:"低位稳定",falling:"价格下跌中",falling_strong:"价格急剧下跌",volatile:"价格剧烈波动",trendAnalysis:{title:"趋势分析",shortTerm:"短期趋势",midTerm:"中期趋势",longTerm:"长期趋势",prediction:"预测",confidence:"置信度",high:"高",medium:"中",low:"低"}}},vt={playerInfo:{title:"玩家信息",name:"姓名",money:"资金",debt:"债务",capacity:"背包容量",week:"周数",repayDebt:"还款",bank:"银行",stats:{title:"玩家统计",totalProfit:"总利润",transactions:"交易次数",visitedLocations:"已访问地点",eventsTriggered:"触发事件数",highestSingleProfit:"单笔最高利润",mostProfitableProduct:"最赚钱商品",mostVisitedLocation:"最常去地点"}},inventory:{title:"背包",capacityUsed:"容量: {used}/{total}",productName:"商品名称",quantity:"数量",purchasePrice:"买入价",currentPrice:"当前价",trend:"趋势",profit:"盈亏",action:"操作",sell:"出售",empty:"背包是空的",sort:{default:"默认排序",profitDesc:"利润从高到低",profitAsc:"利润从低到高",quantityDesc:"数量从多到少",quantityAsc:"数量从少到多",nameAsc:"名称正序",nameDesc:"名称倒序"},filter:{all:"全部商品",profitable:"盈利商品",unprofitable:"亏损商品"},details:{title:"商品详情",purchaseInfo:"购买信息",purchaseDate:"购买日期",purchaseLocation:"购买地点",currentInfo:"当前信息",potentialProfit:"潜在利润",profitPercentage:"利润率"}},repayModal:{title:"偿还债务",currentDebt:"当前债务",availableMoney:"可用资金",repayAmount:"还款金额",remainingDebt:"剩余债务",remainingMoney:"剩余资金",fullRepay:"全部还清",confirm:"确认还款",cancel:"取消"},debtSystem:{title:"债务系统",currentDebt:"当前债务",interestRate:"利率",nextInterest:"下次利息",paymentDue:"应付金额",warning:{high:"警告：债务过高",critical:"危险：债务即将触发破产",bankrupt:"您已破产！"},interestApplied:"已收取{amount}元利息"},bank:{title:"银行服务",deposit:"存款",withdraw:"取款",loan:"贷款",repay:"还款",currentDeposit:"当前存款",currentLoan:"当前贷款",interestRate:"利率",depositInterest:"存款利率",loanInterest:"贷款利率",maxLoan:"最大贷款额度",availableLoan:"可贷款额度",amountToDeposit:"存款金额",amountToWithdraw:"取款金额",amountToLoan:"贷款金额",amountToRepay:"还款金额",confirmDeposit:"确认存款",confirmWithdraw:"确认取款",confirmLoan:"确认贷款",confirmRepay:"确认还款",interestInfo:"每周结算一次利息",notEnoughMoney:"资金不足",depositSuccess:"存款成功",withdrawSuccess:"取款成功",loanSuccess:"贷款成功",repaySuccess:"还款成功",weeklyInterest:"每周利息",remainingMoney:"剩余资金",remainingDeposit:"剩余存款",remainingLoan:"剩余贷款",remainingDebt:"剩余债务"},tutorial:{tips:{welcome:{title:"欢迎来到《买房记》",content:"在这个游戏中，你的目标是通过买卖商品赚取差价，最终积累足够的资金购买房产。<br><br>你有52周的时间来实现这个目标，祝你好运！"},market_intro:{title:"市场交易",content:"在市场标签页中，你可以购买各种商品。不同地点提供的商品和价格各不相同。<br><br>关注价格趋势，在价格低时购买，价格高时卖出，赚取差价。"},inventory_intro:{title:"库存管理",content:"在库存标签页中，你可以查看已购买的商品，并在合适的时机卖出。<br><br>注意背包容量有限，合理规划购买的商品数量。"},location_change:{title:"切换地点",content:"你可以在不同地点之间切换，每个地点都有不同的商品和价格。<br><br>利用不同地点之间的价格差异，可以赚取更多利润。"},price_trends:{title:"价格趋势",content:"商品价格会随时间波动，关注价格趋势是获利的关键。<br><br>上涨趋势表示价格可能继续上涨，下跌趋势表示价格可能继续下跌。"},special_products:{title:"特色商品",content:"每个地点都有特色商品，价格更优惠。特色商品在商品列表中会有特殊标记。<br><br>关注特色商品可以提高交易利润。"},houses:{title:"房产购买",content:"当你积累了足够的资金后，可以在房产标签页中购买房屋。<br><br>不同房屋有不同的价格，购买任意房屋都会结束游戏。"},mid_game:{title:"游戏进展",content:"你已经完成了游戏的四分之一！现在是时候制定更长远的计划了。<br><br>考虑积累更多资金，为购买房产做准备。"},late_game:{title:"游戏后期",content:"游戏已经过半，确保你的资金增长足够快，以便在游戏结束前购买理想的房产。<br><br>如果资金增长缓慢，可能需要调整交易策略或承担更多风险。"}},help:{title:"游戏帮助",basics:"游戏基础",trading:"交易技巧",events:"事件系统",settings:"游戏设置",gotIt:"知道了",dontShowAgain:"不再显示此提示",prev:"上一条",next:"下一条",shortcuts:{title:"键盘快捷键",space:"进入下一周",tab:"切换标签页",esc:"打开/关闭菜单",h:"打开帮助面板"}}}},bt={event:{title:"事件",debtIncrease:"债务增加",debtDecrease:"债务减少",gainProduct:"获得物品",loseProduct:"失去物品",moneyGain:"获得资金",moneyLoss:"失去资金",priceChange:"价格变动",capacityChange:"背包容量变化",specialEvent:"特殊事件",types:{positive:"正面事件",negative:"负面事件",neutral:"中性事件",mixed:"复合事件"},effects:{money:"资金 {change}",debt:"债务 {change}",capacity:"背包容量 {change}",product:"商品: {product} x {quantity}",price:"{product} 价格 {change}",location:"解锁地点: {location}"},choices:{accept:"接受",decline:"拒绝",option1:"选项1",option2:"选项2",option3:"选项3",continue:"继续"},notifications:{triggered:"触发事件: {name}",completed:"事件完成: {name}",reward:"获得奖励: {reward}",penalty:"受到惩罚: {penalty}",choiceMade:"已选择: {choice}"},common:{marketCrash:"市场崩盘",marketBoom:"市场繁荣",robbery:"遭遇抢劫",lottery:"中彩票",backpackUpgrade:"背包升级",backpackDamage:"背包损坏",investmentSuccess:"投资成功",investmentFailure:"投资失败",taxAudit:"税务审计",inheritance:"意外继承",donation:"慈善捐款",discount:"特别折扣",priceHike:"价格上涨",specialOffer:"特别优惠",blackMarket:"黑市交易"},descriptions:{marketCrash:"市场突然崩盘！所有商品价格大幅下跌。",marketBoom:"市场突然繁荣！所有商品价格大幅上涨。",robbery:"你被抢劫了！失去了一些资金和商品。",lottery:"恭喜你中了彩票！获得额外资金。",backpackUpgrade:"你找到了一个更大的背包，容量增加！",backpackDamage:"你的背包破损了，容量减少！",investmentSuccess:"你的投资获得了成功，获得额外收益。",investmentFailure:"你的投资失败了，损失了一些资金。",taxAudit:"税务部门对你进行了审计，你需要支付一些税款。",inheritance:"你意外继承了一笔财产，获得额外资金。",donation:"你决定为慈善事业捐款，失去一些资金但获得了好评。",discount:"商店推出了特别折扣，某些商品价格下降。",priceHike:"由于供应短缺，某些商品价格上涨。",specialOffer:"你收到了一个特别优惠，可以低价购买某些商品。",blackMarket:"你发现了一个黑市交易机会，可以高价出售某些商品。"}},notifications:{error:{inventoryFull:"背包空间不足",insufficientStock:"库存数量不足",houseNotFound:"找不到指定的房屋",alreadyOwned:"已经拥有此房屋",invalidRepayment:"还款金额无效",saveFailed:"保存游戏失败",loadFailed:"找不到存档或存档已损坏",insufficientFunds:"资金不足，无法购买",autoSaveFailed:"自动保存失败",autoSaveError:"自动保存过程出错"},success:{purchased:"成功购买",sold:"成功出售",housePurchased:"成功购买房屋",repaid:"成功还款",gameSaved:"游戏已保存",gameLoaded:"已加载游戏",autoSaved:"自动保存成功"},info:{endGame:"你选择了结束游戏",timeUp:"时间已到！游戏结束",bankrupt:"你已破产！游戏结束",weekProgress:"进入第 {week} 周",locationChange:"你已到达 {location}"},achievement:{earlyGoal:"提前达成目标",noDebtHouse:"零负债购房",victory:"恭喜！你成功购买了最贵的房产！",achieved:"你达成了成就: {name}"}}},Et={ui:{mainMenu:{title:"买房记",newGame:"新游戏",loadGame:"加载游戏",settings:"设置",exit:"退出",version:"版本 {version}",credits:"制作团队"},saveMenu:{title:"存档管理",newSave:"新建存档",loadSave:"加载存档",deleteSave:"删除存档",back:"返回",noSaves:"没有找到存档",saveDate:"保存日期: {date}",saveWeek:"游戏周: {week}",playerName:"玩家: {name}",playerMoney:"资金: {money}",confirmDelete:"确定要删除这个存档吗？",overwriteConfirm:"存档已存在，是否覆盖？",invalidSave:"无效的存档文件"},gameView:{nextWeek:"下一周",menu:"菜单",tabs:{market:"市场",inventory:"背包",houses:"房屋"},weekDisplay:"第 {current}/{total} 周",moneyDisplay:"{amount} 元",debtDisplay:"债务: {amount} 元",loading:"加载中...",saving:"保存中..."},dialogs:{confirm:{title:"确认",ok:"确定",cancel:"取消"},alert:{title:"提示",ok:"确定"},input:{title:"输入",ok:"确定",cancel:"取消"},error:{title:"错误",ok:"确定",details:"详细信息"}},toast:{success:"成功",error:"错误",info:"提示",warning:"警告"},loading:{initializing:"初始化游戏...",loadingAssets:"加载资源...",loadingGame:"加载游戏...",savingGame:"保存游戏...",processingTurn:"处理游戏回合...",generatingWorld:"生成游戏世界...",ready:"准备就绪"},devTools:{title:"开发工具",addMoney:"添加资金",removeMoney:"减少资金",addDebt:"添加债务",removeDebt:"减少债务",skipWeek:"跳过周数",unlockAllLocations:"解锁所有地点",resetPrices:"重置价格",triggerEvent:"触发事件",amount:"数量",apply:"应用",cancel:"取消",eventType:"事件类型",warning:"警告：使用开发工具可能会影响游戏平衡和体验"},charts:{title:"图表",priceHistory:"价格历史",playerNetWorth:"玩家净资产",weeklyProfit:"每周利润",zoom:"缩放",period:"周期",showAll:"显示全部",last10Weeks:"最近10周",last20Weeks:"最近20周",custom:"自定义",noData:"暂无数据",exportData:"导出数据",importData:"导入数据"},errorHandling:{title:"错误处理",message:"发生错误",details:"详细信息",stackTrace:"堆栈跟踪",retry:"重试",ignore:"忽略",report:"报告问题",close:"关闭",errorBoundary:{title:"组件错误",message:"组件渲染出错",reset:"重置组件"}}}},kt={errors:{defaultError:"发生了一个错误",severity:{fatal:"致命错误",error:"错误",warning:"警告",info:"提示"},type:{validation:{default:"数据验证错误: {message}",specific:{required_field:"必填字段不能为空",invalid_format:"数据格式不正确",out_of_range:"数值超出允许范围",invalid_type:"数据类型不正确",duplicate_entry:"数据已存在",too_short:"输入内容过短",too_long:"输入内容过长"}},network:{default:"网络错误: {message}",specific:{connection_failed:"连接服务器失败，请检查您的网络连接",timeout:"请求超时，请稍后重试",server_error:"服务器错误",api_error:"API错误",invalid_response:"无效的服务器响应",offline:"您当前处于离线状态"}},storage:{default:"存储错误: {message}",specific:{file_not_found:"找不到文件",permission_denied:"没有足够权限",quota_exceeded:"存储空间不足",data_corrupt:"数据已损坏",unknown:"未知存储错误",save_failed:"保存游戏失败",load_failed:"加载游戏失败",file_io_error:"文件读写错误",invalid_format:"无效的文件格式",version_mismatch:"版本不兼容"}},game_logic:{default:"游戏逻辑错误: {message}",specific:{invalid_operation:"无效的操作",insufficient_funds:"资金不足",inventory_full:"背包已满",invalid_state:"无效的游戏状态",invalid_transition:"无效的状态转换",out_of_bounds:"超出边界",dependency_missing:"缺少依赖项",invalid_parameter:"无效的参数",calculation_error:"计算错误",rule_violation:"违反游戏规则"}},system:{default:"系统错误: {message}",specific:{initialization_failed:"初始化游戏失败",resource_not_found:"找不到需要的资源",memory_error:"内存错误",performance_issue:"性能问题",render_error:"渲染错误",audio_error:"音频错误",plugin_error:"插件错误",compatibility_issue:"兼容性问题",unexpected_state:"意外的系统状态",critical_failure:"严重故障"}},unknown:{default:"{message}"}},recovery:{title:"错误恢复",message:"游戏遇到了一个问题，正在尝试恢复...",success:"恢复成功",failed:"恢复失败",options:{retry:"重试",reload:"重新加载",reset:"重置游戏",ignore:"忽略并继续",report:"报告问题"},autoSave:{corrupted:"自动存档已损坏",notFound:"找不到自动存档",incompatible:"自动存档与当前版本不兼容",loadFailed:"加载自动存档失败"},stateSnapshot:{restoring:"正在恢复游戏状态...",noValidSnapshot:"没有可用的游戏状态快照",partialRestore:"部分游戏状态已恢复",fullRestore:"游戏状态已完全恢复"}},errorLog:{title:"错误日志",empty:"没有记录的错误",timestamp:"时间",message:"消息",type:"类型",severity:"严重程度",details:"详细信息",actions:{clear:"清空日志",export:"导出日志",filter:"筛选日志",search:"搜索",showDetails:"显示详情",hideDetails:"隐藏详情"}}}},Pt={...gt,...yt,...vt,...bt,...Et,...kt};function _t(){return(navigator.language||navigator.userLanguage).startsWith("zh"),"zh-CN"}function St(){try{const e=localStorage.getItem("userLanguage");if(e)return e}catch(e){L(e,"i18n.getUserLanguage",S.STORAGE,P.INFO),console.warn("无法从本地存储读取语言设置:",e)}return _t()}function Mt(){const e=ut({legacy:!1,locale:St(),fallbackLocale:"zh-CN",messages:{"zh-CN":Pt},datetimeFormats:{"zh-CN":{short:{year:"numeric",month:"2-digit",day:"2-digit"},long:{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"}}},numberFormats:{"zh-CN":{currency:{style:"currency",currency:"CNY",notation:"standard"},decimal:{style:"decimal",minimumFractionDigits:0,maximumFractionDigits:2},percent:{style:"percent",useGrouping:!1}}}});return e.global.setLanguage=t=>{e.global.availableLocales.includes(t)||(console.warn(`语言 ${t} 不可用，使用默认语言`),t=e.global.fallbackLocale.value),e.global.locale.value=t,document.querySelector("html").setAttribute("lang",t);try{localStorage.setItem("userLanguage",t)}catch(r){L(r,"i18n.setLanguage",S.STORAGE,P.INFO),console.warn("无法保存语言设置到本地存储:",r)}},e.global.getSupportedLanguages=()=>[{code:"zh-CN",name:"简体中文",flag:"🇨🇳"}],e.global.formatCurrency=t=>e.global.n(t,"currency"),e.global.formatDate=(t,r="long")=>e.global.d(t,r),e.global.formatNumber=t=>e.global.n(t,"decimal"),e.global.formatPercent=t=>e.global.n(t,"percent"),e}const $=Mt();$.global.t;$.global.d;$.global.n;$.global.setLanguage;const Er=$.global.getSupportedLanguages;$.global.formatCurrency;$.global.formatDate;$.global.formatNumber;$.global.formatPercent;const Q=ie([]),Ce=200,Ke="gameRunning",rt="lastGameActivity",Lt=3e5;let He=null;async function it(){if(He)return He;const e=3,t=300,r=async(i=0)=>{try{const o=await ft(()=>Promise.resolve().then(()=>Ct),void 0,import.meta.url);if(o&&typeof o.useUiStore=="function"){const s=o.useUiStore();if(s&&typeof s=="object")return He=s,s;throw new Error("Invalid uiStore instance")}else throw new Error("useUiStore function not found")}catch(o){return console.error(`Failed to import uiStore (attempt ${i+1}/${e}):`,o),i<e-1?(console.log(`Retrying in ${t}ms...`),await new Promise(s=>setTimeout(s,t)),r(i+1)):null}};return r()}function L(e,t,r=S.UNKNOWN,i=P.ERROR){const o={message:e.message||"未知错误",context:t,type:r,severity:i,timestamp:new Date().toISOString(),stack:e.stack,metadata:e.metadata||{}};return wt(o),i===P.FATAL||i===P.ERROR?At(o):i===P.WARNING&&It(o),window.electronAPI&&window.electronAPI.logError?window.electronAPI.logError(o):dt.error(`[${r}][${t}]`,e),o}function wt(e){Q.value.unshift(e),Q.value.length>Ce&&(Q.value=Q.value.slice(0,Ce));try{const t=JSON.stringify(Q.value);localStorage.setItem("errorLogs",t)}catch(t){console.error("Failed to save error logs to localStorage:",t)}}function Rt(){return new Promise(e=>{try{const t=localStorage.getItem("errorLogs");if(t){const r=JSON.parse(t);Q.value=r,Q.value.length>Ce&&(Q.value=Q.value.slice(0,Ce))}e([...Q.value])}catch(t){console.error("Failed to load error logs from localStorage:",t),e([])}})}function Pe(e){try{const t=`errors.${e.type}.specific.${e.message.toLowerCase().replace(/\s+/g,"_").replace(/[^\w]/g,"")}`,r=`errors.${e.type}.default`,i="发生错误";return $.global&&$.global.te&&$.global.te(t)?$.global.t(t):$.global&&$.global.te&&$.global.te(r)?$.global.t(r,{message:e.message}):e.message||i}catch(t){return console.error("Error getting localized error message:",t),e.message||"发生错误"}}async function At(e){try{const t=await it();t&&typeof t.showErrorDialog=="function"?t.showErrorDialog({title:e.severity===P.FATAL?"严重错误":"错误",message:Pe(e),details:void 0,timestamp:e.timestamp,context:e.context}):(console.error("UI Store不可用，使用备用错误提示"),alert(Pe(e)))}catch(t){console.error("Error showing error dialog:",t),alert(Pe(e))}}async function It(e){try{const t=await it();t&&typeof t.showToast=="function"?t.showToast({type:"error",message:Pe(e),duration:5e3}):console.warn(Pe(e))}catch(t){console.warn("Error showing toast:",t)}}async function De(e,t,r=S.UNKNOWN,i=P.ERROR){try{return await e()}catch(o){throw L(o,t,r,i),o}}function kr(e){if(!e||!e.config){console.warn("无法设置全局错误处理：app实例无效");return}e.config.errorHandler=(t,r,i)=>{let o="Unknown";try{r&&r.$options&&r.$options.name?o=r.$options.name:r&&r.$root&&(o="Root Component")}catch{o="Error getting component name"}L(t,`Vue组件: ${o}`,S.COMPONENT,P.ERROR)},window.addEventListener("unhandledrejection",t=>{L(t.reason||new Error("未处理的Promise异常"),"Promise",S.ASYNC,P.ERROR)}),window.addEventListener("error",t=>{t.error&&L(t.error,"全局异常",S.RUNTIME,P.ERROR)}),Rt(),window.addEventListener("beforeunload",()=>{Ot()})}function Pr(){try{localStorage.setItem(Ke,"true"),xt()}catch(e){console.warn("Failed to set game running flag:",e)}}function Ot(){try{localStorage.removeItem(Ke)}catch(e){console.warn("Failed to clear game running flag:",e)}}function _r(){try{if(!(localStorage.getItem(Ke)==="true"))return!1;const t=localStorage.getItem(rt);if(t){const r=parseInt(t,10);if(Date.now()-r<Lt)return!0}return!1}catch(e){return console.warn("Failed to check game running flag:",e),!1}}function xt(){try{localStorage.setItem(rt,Date.now().toString())}catch(e){console.warn("Failed to update game activity timestamp:",e)}}function Tt(e){if(!e||e==="undefined"||e==="null")return"/resources/assets/images/house_1.jpeg";const t={apartment:"/resources/assets/images/house_1.jpeg",second_hand:"/resources/assets/images/house_2.jpeg",highend:"/resources/assets/images/house_3.jpeg",villa:"/resources/assets/images/house_4.jpeg",mansion:"/resources/assets/images/house_5.jpeg"};if(!isNaN(parseInt(e))){const r=parseInt(e);return`/resources/assets/images/house_${r?Math.max(1,Math.min(5,r%5||1)):1}.jpeg`}return t[e]||"/resources/assets/images/house_1.jpeg"}const ke=ce("ui",()=>{const e=ie(!1),t=ie(null),r=ie([]),i=ie({}),o=ie(!1),s=ie(null),n=ie(!1),a=ie(null);function l(M){t.value=M,e.value=!0}function d(){e.value=!1,setTimeout(()=>{t.value=null},300)}function h({type:M="info",message:I="",duration:x=3e3,action:w=null,actionText:O="确定",actionCallback:U=null}){const W=r.value.find(q=>q.message===I);W&&m(W.id);const V=Date.now()+Math.random().toString(36).substring(2,10),ee={id:V,type:M,message:I,action:w,actionText:O,actionCallback:U};if(r.value.unshift(ee),r.value.length>5){const q=r.value.pop();i.value[q.id]&&(clearTimeout(i.value[q.id]),delete i.value[q.id])}return i.value[V]=setTimeout(()=>{m(V)},3e3),V}function m(M){const I=r.value.findIndex(x=>x.id===M);I!==-1&&(r.value.splice(I,1),i.value[M]&&(clearTimeout(i.value[M]),delete i.value[M]))}function p({snapshot:M,message:I,title:x,allowCancel:w=!0,onRecover:O,onCancel:U}){s.value={snapshot:M,message:I||"检测到游戏意外中断。是否恢复上次保存的游戏状态？",title:x||"游戏恢复",allowCancel:w,onRecover:O||(()=>y()),onCancel:U||(()=>y())},o.value=!0}function y(){o.value=!1,setTimeout(()=>{s.value=null},300)}function k(M){a.value=M,n.value=!0}function C(){n.value=!1,setTimeout(()=>{a.value=null},300)}function N({type:M="info",message:I="",duration:x=3e3}){return h({type:M,message:I,duration:x})}function b(){r.value.forEach(M=>{m(M.id)})}return{errorDialogVisible:e,errorDialogData:t,showErrorDialog:l,closeErrorDialog:d,toasts:r,addToast:h,removeToast:m,showToast:N,closeToast:b,recoveryDialogVisible:o,recoveryDialogData:s,showRecoveryDialog:p,closeRecoveryDialog:y,dialogVisible:n,dialogData:a,showDialog:k,closeDialog:C}}),Ct=Object.freeze(Object.defineProperty({__proto__:null,useUiStore:ke},Symbol.toStringTag,{value:"Module"})),Wt=ce("settings",{state:()=>({difficulty:"normal",tutorialEnabled:!0,autoSave:!0,autoSaveInterval:5,soundEnabled:!0,soundVolume:.7,musicEnabled:!0,musicVolume:.5,language:"zh-CN",theme:"light",uiScale:1,animationsEnabled:!0,graphicsQuality:"medium",currentScene:"menu"}),actions:{updateSetting(e,t){e in this.$state&&(this[e]=t,this.saveSettings())},updateSettings(e){Object.entries(e).forEach(([t,r])=>{t in this.$state&&(this[t]=r)}),this.saveSettings()},resetSettings(){this.$reset(),this.saveSettings()},saveSettings(){try{const e=JSON.stringify(this.$state);localStorage.setItem("house-journey-settings",e)}catch(e){L(e,"SettingsStore",S.STORAGE,P.WARNING),console.error("保存设置失败:",e)}},loadSettings(){try{const e=localStorage.getItem("house-journey-settings");if(e){const t=JSON.parse(e);this.updateSettings(t)}}catch(e){L(e,"SettingsStore",S.STORAGE,P.WARNING),console.error("加载设置失败:",e)}},setCurrentScene(e){this.currentScene=e,window.gameAudio&&this.musicEnabled&&window.gameAudio.playBGM(e)}}}),Sr=Object.freeze(Object.defineProperty({__proto__:null,useSettingsStore:Wt},Symbol.toStringTag,{value:"Module"})),H=ce("player",{state:()=>({name:"",money:2e3,debt:5e3,loanPrincipal:5e3,capacity:100,inventoryUsed:0,inventory:[],purchasedHouses:[],initialized:!1,bankDeposit:0,maxLoanAmount:2e4,statistics:{weekCount:1,transactionCount:0,totalProfit:0,maxMoney:2e3,visitedLocations:[],housePurchases:[],firstHousePurchaseWeek:null,mostExpensiveHouse:null,highestLevelHouse:null}}),actions:{initializePlayer(e){return console.log("PlayerStore - 初始化玩家:",e),new Promise(t=>{setTimeout(()=>{this.name=e||$.global.t("system.defaultPlayerName"),this.money=2e3,this.debt=5e3,this.loanPrincipal=5e3,this.capacity=100,this.inventoryUsed=0,this.inventory=[],this.purchasedHouses=[],this.initialized=!0,this.bankDeposit=0,this.maxLoanAmount=2e4,this.statistics={weekCount:1,transactionCount:0,totalProfit:0,maxMoney:2e3,visitedLocations:[],housePurchases:[],firstHousePurchaseWeek:null,mostExpensiveHouse:null,highestLevelHouse:null},console.log("PlayerStore - 玩家初始化完成"),t()},400)})},updateWeeklyPlayerState(e){if(this.statistics.weekCount=e,this.debt>0){const t=Math.floor(this.debt*.005);this.debt+=t}if(this.bankDeposit>0){const t=Math.floor(this.bankDeposit*.003);this.bankDeposit+=t}this.money>this.statistics.maxMoney&&(this.statistics.maxMoney=this.money)},addMoney(e){return e<=0?!1:(this.money+=e,this.money>this.statistics.maxMoney&&(this.statistics.maxMoney=this.money),!0)},spendMoney(e){return e<=0||e>this.money?!1:(this.money-=e,!0)},repayDebt(e){return e<=0||e>this.money?!1:(e>this.debt&&(e=this.debt),this.money-=e,this.debt-=e,e<=this.loanPrincipal?this.loanPrincipal-=e:this.loanPrincipal=0,!0)},addVisitedLocation(e){return this.statistics.visitedLocations.includes(e)?!1:(this.statistics.visitedLocations.push(e),!0)},purchaseHouse(e){if(!e||typeof e!="object")return console.error("无效的房屋对象传递给purchaseHouse"),!1;const t=["id","name","level","price"];for(const s of t)if(!(s in e))return console.error(`购买房屋失败：房屋对象缺少必需属性 ${s}`),!1;if(e.price>this.money)return console.warn(`购买失败：资金不足 (拥有: ${this.money}, 需要: ${e.price}, 差额: ${e.price-this.money})`),!1;if(this.purchasedHouses.some(s=>s.houseId===e.id))return console.warn(`购买失败：已拥有ID为 ${e.id} 的房屋`),!1;this.money-=e.price;const i=K().currentWeek,o={houseId:e.id,name:e.name,level:e.level,purchasePrice:e.price,purchaseWeek:i,description:e.description||`${e.level}级房产`,purchaseDate:new Date().toISOString()};return this.purchasedHouses.push(o),this.statistics.housePurchases||(this.statistics.housePurchases=[]),this.statistics.housePurchases.push({houseId:e.id,name:e.name,level:e.level,price:e.price,week:i}),this.statistics.firstHousePurchaseWeek===null&&(this.statistics.firstHousePurchaseWeek=i),(!this.statistics.mostExpensiveHouse||e.price>this.statistics.mostExpensiveHouse.price)&&(this.statistics.mostExpensiveHouse={id:e.id,name:e.name,price:e.price,level:e.level,week:i}),(!this.statistics.highestLevelHouse||e.level>this.statistics.highestLevelHouse.level)&&(this.statistics.highestLevelHouse={id:e.id,name:e.name,price:e.price,level:e.level,week:i}),console.log(`成功购买房产: ${e.name} - ¥${e.price} (第${i}周)`),!0},depositToBank(e){return e<=0||e>this.money?!1:(this.money-=e,this.bankDeposit+=e,!0)},withdrawFromBank(e){return e<=0||e>this.bankDeposit?!1:(this.bankDeposit-=e,this.money+=e,!0)},takeLoan(e){const t=this.availableLoanAmount;return e<=0||e>t?!1:(this.debt+=e,this.loanPrincipal+=e,this.money+=e,!0)}},getters:{netWorth:e=>{const t=e.inventory.reduce((i,o)=>i+o.quantity*o.purchasePrice,0),r=e.purchasedHouses.reduce((i,o)=>i+o.purchasePrice,0);return e.money+e.bankDeposit+t+r-e.debt},totalMoney:e=>{const t=e.inventory.reduce((r,i)=>r+i.quantity*i.purchasePrice,0);return e.money+t},hasHighestHouse:e=>e.purchasedHouses.some(t=>t.level>=5),mostExpensiveHouse:e=>e.purchasedHouses.length===0?null:e.purchasedHouses.reduce((t,r)=>r.purchasePrice>t.purchasePrice?r:t,e.purchasedHouses[0]),availableCapacity:e=>e.capacity-e.inventoryUsed,availableLoanAmount:e=>{e.loanPrincipal===void 0&&(e.loanPrincipal=e.debt);const t=e.maxLoanAmount;return Math.max(0,Math.floor(t-e.loanPrincipal))},depositInterestRate:()=>.003,loanInterestRate:()=>.005}}),Nt=()=>{const e=H();return{addToInventory:(a,l,d)=>{if(!a||l<=0||d<0)return{success:!1,message:"无效的产品数据"};const h=l;if(e.inventoryUsed+h>e.capacity)return{success:!1,message:"背包容量不足"};const m=e.inventory.findIndex(y=>y.productId===a.id),p=d*l;if(m!==-1){const y=e.inventory[m],k=y.totalValue||y.purchasePrice*y.quantity,C=y.quantity+l,N=k+d*l,b=Math.round(N/C);e.inventory[m].quantity=C,e.inventory[m].purchasePrice=b,e.inventory[m].totalValue=N}else e.inventory.push({productId:a.id,name:a.name,quantity:l,purchasePrice:d,totalValue:p,size:1});return e.inventoryUsed+=h,{success:!0}},removeFromInventory:(a,l)=>{if(a<0||a>=e.inventory.length)return{success:!1,message:"无效的物品索引"};const d=e.inventory[a];if(l<=0||l>d.quantity)return{success:!1,message:"无效的移除数量"};const h=l,m={...d,quantity:l};return d.quantity-=l,d.quantity<=0&&e.inventory.splice(a,1),e.inventoryUsed-=h,{success:!0,product:m}},findByProductId:a=>e.inventory.filter(l=>l.productId===a),getTotalQuantity:a=>e.inventory.filter(l=>l.productId===a).reduce((l,d)=>l+d.quantity,0),getTotalValue:()=>e.inventory.reduce((a,l)=>a+l.quantity*l.purchasePrice,0),clearInventory:()=>{e.inventory=[],e.inventoryUsed=0}}},A={DAILY:"DAILY",FOOD:"FOOD",ELECTRONICS:"ELECTRONICS",LUXURY:"LUXURY",COLLECTIBLE:"COLLECTIBLE"};class Gt{constructor({id:t,name:r,description:i="",basePrice:o,minPrice:s,maxPrice:n,volatility:a=5,category:l=A.DAILY,size:d=1,icon:h="box",availableAt:m=[]}){this.id=t,this.name=r,this.description=i,this.basePrice=o,this.minPrice=s,this.maxPrice=n,this.volatility=Math.min(Math.max(a,1),10),this.category=l,this.size=d,this.icon=h,this.availableAt=m}getPriceRange(){return{min:this.minPrice,max:this.maxPrice,range:this.maxPrice-this.minPrice}}isValidPrice(t){return t>=this.minPrice&&t<=this.maxPrice}adjustPriceToRange(t){return Math.max(this.minPrice,Math.min(t,this.maxPrice))}}function Ht(e){return new Gt(e)}const Dt=[{id:101,name:"卫生纸",description:"日常必备用品",basePrice:15,minPrice:10,maxPrice:30,volatility:2,category:A.DAILY,size:3,icon:"paper",availableAt:["second_hand_market","commodity_market"]},{id:102,name:"洗发水",description:"日常洗护用品",basePrice:35,minPrice:20,maxPrice:50,volatility:2,category:A.DAILY,size:1,icon:"bottle",availableAt:["second_hand_market","commodity_market"]},{id:103,name:"牙膏",description:"日常洗护用品",basePrice:8,minPrice:5,maxPrice:15,volatility:2,category:A.DAILY,size:1,icon:"hygiene",availableAt:["second_hand_market","commodity_market"]},{id:104,name:"肥皂",description:"日常洗护用品",basePrice:6,minPrice:3,maxPrice:12,volatility:2,category:A.DAILY,size:1,icon:"soap",availableAt:["second_hand_market","commodity_market"]},{id:105,name:"毛巾",description:"日常洗护用品",basePrice:25,minPrice:15,maxPrice:40,volatility:2,category:A.DAILY,size:2,icon:"towel",availableAt:["second_hand_market","commodity_market"]},{id:106,name:"二手衣物",description:"二手服装，价格便宜但品质一般",basePrice:40,minPrice:20,maxPrice:80,volatility:3,category:A.DAILY,size:4,icon:"clothes",availableAt:["second_hand_market"]},{id:107,name:"二手家具",description:"二手家具，价格实惠",basePrice:200,minPrice:100,maxPrice:500,volatility:4,category:A.DAILY,size:10,icon:"furniture",availableAt:["second_hand_market"]},{id:201,name:"鸡蛋",description:"新鲜食品，价格波动较大",basePrice:15,minPrice:8,maxPrice:25,volatility:4,category:A.FOOD,size:2,icon:"egg",availableAt:["commodity_market"]},{id:202,name:"大米",description:"主食，价格相对稳定",basePrice:50,minPrice:30,maxPrice:80,volatility:4,category:A.FOOD,size:5,icon:"rice",availableAt:["commodity_market"]},{id:203,name:"食用油",description:"烹饪必备，价格波动适中",basePrice:70,minPrice:40,maxPrice:120,volatility:4,category:A.FOOD,size:3,icon:"oil",availableAt:["commodity_market"]},{id:204,name:"新鲜蔬菜",description:"时令蔬菜，价格波动较大",basePrice:30,minPrice:15,maxPrice:50,volatility:4,category:A.FOOD,size:4,icon:"vegetable",availableAt:["commodity_market"]},{id:205,name:"水果",description:"时令水果，价格波动较大",basePrice:35,minPrice:20,maxPrice:60,volatility:4,category:A.FOOD,size:4,icon:"fruit",availableAt:["commodity_market"]},{id:301,name:"手机",description:"智能手机，价格波动适中",basePrice:1800,minPrice:1e3,maxPrice:3e3,volatility:6,category:A.ELECTRONICS,size:1,icon:"phone",availableAt:["electronics_hub","premium_mall"]},{id:302,name:"电视",description:"家用电视，价格波动适中",basePrice:3500,minPrice:2e3,maxPrice:6e3,volatility:6,category:A.ELECTRONICS,size:15,icon:"tv",availableAt:["electronics_hub"]},{id:303,name:"笔记本电脑",description:"便携式电脑，价格波动适中",basePrice:4500,minPrice:3e3,maxPrice:8e3,volatility:6,category:A.ELECTRONICS,size:5,icon:"laptop",availableAt:["electronics_hub"]},{id:304,name:"平板电脑",description:"触屏平板设备，价格波动适中",basePrice:2e3,minPrice:1200,maxPrice:3500,volatility:6,category:A.ELECTRONICS,size:3,icon:"tablet",availableAt:["electronics_hub"]},{id:305,name:"智能手表",description:"可穿戴设备，价格波动较大",basePrice:1500,minPrice:800,maxPrice:2500,volatility:7,category:A.ELECTRONICS,size:1,icon:"watch",availableAt:["electronics_hub","premium_mall"]},{id:401,name:"名牌手表",description:"奢侈品，价格昂贵但保值",basePrice:12e3,minPrice:8e3,maxPrice:2e4,volatility:8,category:A.LUXURY,size:1,icon:"luxury-watch",availableAt:["premium_mall"]},{id:402,name:"钻石项链",description:"奢侈品，价格昂贵且波动较大",basePrice:15e3,minPrice:1e4,maxPrice:25e3,volatility:8,category:A.LUXURY,size:1,icon:"diamond",availableAt:["premium_mall"]},{id:403,name:"设计师包包",description:"高档手袋，有一定保值能力",basePrice:8e3,minPrice:5e3,maxPrice:15e3,volatility:7,category:A.LUXURY,size:2,icon:"bag",availableAt:["premium_mall"]},{id:404,name:"高级香水",description:"知名品牌香水，价格适中",basePrice:1200,minPrice:800,maxPrice:2e3,volatility:5,category:A.LUXURY,size:1,icon:"perfume",availableAt:["premium_mall"]},{id:501,name:"古董花瓶",description:"收藏品，价格波动非常大",basePrice:9e3,minPrice:4e3,maxPrice:2e4,volatility:9,category:A.COLLECTIBLE,size:4,icon:"vase",availableAt:["black_market"]},{id:502,name:"邮票",description:"收藏邮票，价格波动极大",basePrice:3e3,minPrice:1e3,maxPrice:1e4,volatility:10,category:A.COLLECTIBLE,size:1,icon:"stamp",availableAt:["black_market"]},{id:503,name:"古画",description:"艺术收藏品，价格波动极大",basePrice:2e4,minPrice:1e4,maxPrice:5e4,volatility:10,category:A.COLLECTIBLE,size:8,icon:"painting",availableAt:["black_market"]},{id:504,name:"老式相机",description:"古董相机，收藏价值高",basePrice:4500,minPrice:2e3,maxPrice:1e4,volatility:8,category:A.COLLECTIBLE,size:3,icon:"camera",availableAt:["black_market","electronics_hub"]},{id:505,name:"纪念币",description:"限量发行的纪念币，收藏价值高",basePrice:2500,minPrice:1e3,maxPrice:8e3,volatility:9,category:A.COLLECTIBLE,size:1,icon:"coin",availableAt:["black_market"]}];function $e(){return Dt.map(e=>Ht(e))}class $t{constructor({id:t,name:r,description:i="",availableProducts:o=[],specialProducts:s=[],modifiers:n={priceFactor:1},icon:a="map-marker",image:l="",eventProbability:d=.3}){this.id=t,this.name=r,this.description=i,this.availableProducts=o,this.specialProducts=s,this.modifiers=n,this.icon=a,this.image=l,this.eventProbability=d}getPriceFactor(){return this.modifiers.priceFactor||1}isSpecialProduct(t){return this.specialProducts.includes(t)}hasProduct(t){return this.availableProducts.includes(t)||this.specialProducts.includes(t)}applyPriceModifiers(t,r){let i=t*this.getPriceFactor();return this.isSpecialProduct(r)&&(i*=.85),Math.round(i)}}function jt(e){return new $t(e)}const Ft=[{id:"commodity_market",name:"大宗商品交易所",description:"批发市场和大宗商品交易的集中地，价格低廉但需要大量采购。这里适合大量进货获取更好的价格优势。",modifiers:{priceFactor:.75},specialProducts:[202,203],availableProducts:["bulk_rice","bulk_goods","industrial_materials"],eventProbability:.2,icon:"commodity.png",image:"commodity_market.jpg"},{id:"second_hand_market",name:"二手市场",description:"各类二手物品和低价生活必需品的集散地，价格便宜但品质参差不齐。这里是淘宝和囤积日常用品的好地方。",modifiers:{priceFactor:.8},specialProducts:[101,104,106,107],availableProducts:["clothes","toiletries","used_items","furniture"],eventProbability:.3,icon:"second-hand.png",image:"second_hand_market.jpg"},{id:"premium_mall",name:"高端商城",description:"汇聚各类高端品牌和奢侈品的购物中心，价格昂贵但品质优良。这里是购买珠宝、手表等高端商品的地方。",modifiers:{priceFactor:1.3},specialProducts:[401,404],availableProducts:["jewelry","watch","designer_clothes"],eventProbability:.25,icon:"premium.png",image:"premium_mall.jpg"},{id:"electronics_hub",name:"电子科技城",description:"各类电子产品和数码设备的专业交易市场，价格适中且品种齐全。这里是购买手机、电脑等电子产品的理想之地。",modifiers:{priceFactor:.95},specialProducts:[301,305],availableProducts:["phone","laptop","tablet","camera"],eventProbability:.3,icon:"electronics.png",image:"electronics_hub.jpg"},{id:"black_market",name:"地下黑市",description:"隐蔽的非法交易场所，各类珍稀收藏品和奇特商品云集。风险与机遇并存，是寻找稀有物品的绝佳地点。",modifiers:{priceFactor:1.1},specialProducts:[502,503],availableProducts:["stamp","antique","artwork","rare_coin"],eventProbability:.35,icon:"black-market.png",image:"black_market.jpg"}];function Ut(){return Ft.map(e=>jt(e))}class Vt{constructor({id:t,name:r,price:i,level:o=1,description:s="",specialFeature:n="",purchaseCondition:a="",image:l=""}){this.id=t,this.name=r,this.price=i,this.level=o,this.description=s,this.specialFeature=n,this.purchaseCondition=a||`需要${i}元现金`,this.image=l||zt(t)}canBePurchasedWith(t){return t>=this.price}getValueRating(){return this.price<4e5?7:this.price<8e5?6:this.price<15e5?5:this.price<25e5?4:3}}function qt(e){return new Vt(e)}function zt(e){try{return!e||e==="undefined"||e==="null"?"/resources/assets/images/house_1.jpeg":Tt(e)}catch(t){console.warn("获取房屋图片路径时出错:",t);const r={apartment:"/resources/assets/images/house_1.jpeg",second_hand:"/resources/assets/images/house_2.jpeg",highend:"/resources/assets/images/house_3.jpeg",villa:"/resources/assets/images/house_4.jpeg",mansion:"/resources/assets/images/house_5.jpeg"};if(!isNaN(parseInt(e))){const i=parseInt(e);return`/resources/assets/images/house_${i?Math.max(1,Math.min(5,i%5||1)):1}.jpeg`}return r[e]||"/resources/assets/images/house_1.jpeg"}}const Bt=[{id:"apartment",name:"单身公寓",price:35e4,level:1,description:"适合单身人士居住的小型公寓，位置便利但空间有限。这是迈向房产阶梯的第一步！",specialFeature:"交通便利，月供较低，首次置业的理想选择",image:"/resources/assets/images/house_1.jpeg"},{id:"second_hand",name:"二手旧房",price:58e4,level:2,description:"年代较久的二手住宅，价格适中但可能需要装修。空间较大，非常适合改造成理想的家。",specialFeature:"空间较大，周边配套完善，性价比较高",image:"/resources/assets/images/house_2.jpeg"},{id:"highend",name:"高档小区",price:8e5,level:3,description:"现代化高档住宅小区，环境优美，配套设施齐全。社区环境安全，是家庭居住的绝佳选择。",specialFeature:"环境优美，物业管理完善，社区活动丰富",image:"/resources/assets/images/house_3.jpeg"},{id:"villa",name:"现代别墅",price:15e5,level:4,description:"独栋现代别墅，拥有私家花园和车库。宽敞的空间和精致的设计，彰显主人的品味与地位。",specialFeature:"独立空间，居住品质高，是成功人士的标志",image:"/resources/assets/images/house_4.jpeg"},{id:"mansion",name:"私人庄园",price:3e6,level:5,description:"大型私人庄园，带有大片绿地和多功能区域。拥有这样的房产，代表你已达到人生巅峰！",specialFeature:"终极豪宅，私密性极佳，社会地位的象征",image:"/resources/assets/images/house_5.jpeg"}];function je(){return Bt.map(e=>qt(e))}const E={RISING_STRONG:"rising_strong",RISING:"rising",STABLE_HIGH:"stable_high",STABLE:"stable",STABLE_LOW:"stable_low",FALLING:"falling",FALLING_STRONG:"falling_strong",VOLATILE:"volatile"},Te=new Map;function fe(e){if(e=e%(2*Math.PI),e===0||e===Math.PI)return 0;if(e===Math.PI/2)return 1;if(e===3*Math.PI/2)return-1;const t=e*e,r=t*e,i=r*t,o=i*t;return e-r/6+i/120-o/5040}function Yt(e,t,r,i,o){const s=`${e.id}_${t}_${(r==null?void 0:r.price)||0}_${i}_${JSON.stringify(o)}`;if(Te.has(s))return Te.get(s);const n=Kt(e,t,r,i,o);return Te.set(s,n),n}function Ze(){Te.clear(),console.log("价格计算缓存已清除")}function Kt(e,t,r=null,i=1,o={}){var Le,we,Re,Ae,Ie,Oe;const s=(r==null?void 0:r.price)||e.basePrice,n=(r==null?void 0:r.trend)||E.STABLE,a=e.id,l=e.minPrice,d=e.maxPrice,h=e.volatility,m=e.category,p=t&1023,y=.6+h*.15,k={[E.RISING]:.05,[E.RISING_STRONG]:.08,[E.FALLING]:-.12,[E.FALLING_STRONG]:-.15,[E.STABLE]:-.01,[E.STABLE_HIGH]:-.04,[E.STABLE_LOW]:.02,[E.VOLATILE]:-.02},N=(a*1e3+t)%997/997,b=Math.random();let M;N<.3?M=b<.75?k[n]||0:(Math.random()-.35)*.08:M=b<.75?k[n]||0:(Math.random()-.65)*.08;const I=(()=>{console.log("计算类别周期因子:",{category:m,weekMod:p});let z=0;switch(m){case"DAILY":z=fe(p*.077)*.1-.03;break;case"FOOD":z=fe(p*.167)*.2-.05;break;case"ELECTRONICS":z=fe(p*.1)*.15-.08;break;case"LUXURY":z=fe(p*.067)*.25-.03;break;case"COLLECTIBLE":const R=fe(p*.125)*.3-.04,T=Math.cos(p*.2)*.15-.02;z=R+T;break;default:z=0}const _=(a%10-5)*.01;return z+=_,console.log("类别周期因子结果:",z),z})(),x=a%10*.1,w=fe((p+x)*.1+(a&15)*.01)*.12-.03,O=i||1,U=(Le=o.specialProducts)!=null&&Le.includes(a)?.8:1,V=.9+(Math.sin(a*t*.01)*.5+.5)*.16,ee=o.globalPriceModifier||1,q=((we=o.categoryModifiers)==null?void 0:we[m])||1,ue=((Re=o.productModifiers)==null?void 0:Re[a])||1,le=o.currentLocationId;let de=1,me=1;le&&(de=((Ae=o.locationModifiers)==null?void 0:Ae[le])||1,(Oe=(Ie=o.locationProductModifiers)==null?void 0:Ie[le])!=null&&Oe[a]&&(me=o.locationProductModifiers[le][a]),(de!==1||me!==1)&&console.log(`应用地区价格修正 - 地区: ${le}, 商品: ${a}, 地区修正: ${de.toFixed(2)}, 地区商品修正: ${me.toFixed(2)}`));const Se=y*(1+M)*(1+I)*(1+w)*O*U*V*ee*q*ue*de*me,Me=.005;let ye=Se;Math.abs(Se-1)<Me&&(ye=1+(a*t%2===0?1:-1)*(Me+Math.random()*.01),console.log(`商品 ${a} 价格变化太小，强制调整为 ${((ye-1)*100).toFixed(2)}%`));let te=s*ye;te=Jt(te,s,e,o),te=Math.max(l,Math.min(te,d));const ve=(te-e.basePrice)/e.basePrice,We=Xt(ve,te,l,d);return{price:Math.round(te),trend:We,changePercent:parseFloat((ve*100).toFixed(1)),originalPricePercent:ve}}function Jt(e,t,r,i){const o=r.volatility/10,s=i.volatilityMultiplier||1,a=.2*(1+o)*s,l=t*(1+a),d=t*(1-a),h=t*.005;if(Math.abs(e-t)<h){const k=r.id%2===0?1:-1;e=t*(1+k*(.005+Math.random()*.01))}let m=Math.max(d,Math.min(e,l));const p=r.minPrice+(r.maxPrice-r.minPrice)*.5,y=Math.abs(m-p)/(r.maxPrice-r.minPrice);if(y>.4){const k=(y-.4)*.05,C=m>p?-1:1,N=k*(r.maxPrice-r.minPrice)*C;m+=N}return m}function Xt(e,t,r,i){if(e>.15)return E.RISING_STRONG;if(e>.05)return E.RISING;if(e<-.15)return E.FALLING_STRONG;if(e<-.05)return E.FALLING;const l=i-r;if(l<=0)return E.STABLE;const d=(t-r)/l;return d>.8?E.STABLE_HIGH:d<.2?E.STABLE_LOW:E.STABLE}function Qt(e,t,r={},i={}){console.time("BatchPriceUpdate"),i.currentLocation&&(i.currentLocationId=i.currentLocation.id);const o={},s=e.length;console.log(`批量更新价格 - 商品总数: ${s}, 当前周数: ${t}, 市场修正因子:`,{global:i.globalPriceModifier||1,categories:Object.keys(i.categoryModifiers||{}).length,products:Object.keys(i.productModifiers||{}).length,locations:Object.keys(i.locationModifiers||{}).length,locationProducts:Object.keys(i.locationProductModifiers||{}).reduce((n,a)=>n+Object.keys(i.locationProductModifiers[a]||{}).length,0),currentLocationId:i.currentLocationId});for(let n=0;n<s;n++){const a=e[n],l=a.id,d=r[l]||null;try{o[l]=Yt(a,t,d,1,i)}catch(h){console.error(`更新商品 ${l} 价格时出错:`,h),o[l]={price:a.basePrice,trend:"stable",changePercent:0}}}return console.timeEnd("BatchPriceUpdate"),o}function Zt(e){return{[E.RISING_STRONG]:"大幅上涨",[E.RISING]:"上涨",[E.STABLE_HIGH]:"高位稳定",[E.STABLE]:"稳定",[E.STABLE_LOW]:"低位稳定",[E.FALLING]:"下跌",[E.FALLING_STRONG]:"大幅下跌",[E.VOLATILE]:"剧烈波动"}[e]||"未知"}function er(e){return{[E.RISING_STRONG]:"↑↑",[E.RISING]:"↑",[E.STABLE_HIGH]:"↗",[E.STABLE]:"→",[E.STABLE_LOW]:"↘",[E.FALLING]:"↓",[E.FALLING_STRONG]:"↓↓",[E.VOLATILE]:"↕"}[e]||"→"}function tr(e){return{[E.RISING_STRONG]:"#e53935",[E.RISING]:"#f44336",[E.STABLE_HIGH]:"#ff9800",[E.STABLE]:"#9e9e9e",[E.STABLE_LOW]:"#8bc34a",[E.FALLING]:"#4caf50",[E.FALLING_STRONG]:"#2e7d32",[E.VOLATILE]:"#9c27b0"}[e]||"#9e9e9e"}const rr=()=>{const e=B();return{updateProductPrices:s=>{console.log("开始更新产品价格，当前周数:",s);const n=e.products;console.log("产品总数:",n.length);const a={...e.productPrices},l=e.marketModifiers;console.log("市场修正因子:",l),Ze();const d=Qt(n,s,a,l);console.log("批量更新后的新价格数量:",Object.keys(d).length),Object.keys(d).forEach(h=>{var C,N;const m=a[h]||{price:0,history:[]},p=d[h],y=m.price||((C=n.find(b=>b.id===Number(h)))==null?void 0:C.basePrice)||0;if(!(Math.abs(p.price-y)>=1)||Math.abs(p.changePercent)<1){const M=parseInt(h)||0,I=s||0,x=(M*31+I)%100,w=x<30?1:-1,O=Math.abs(Math.sin(x*.1))*12,U=Math.max(3,O),W=1+w*U/100;p.price=Math.round(y*W),console.log(`强制价格波动 - 商品ID: ${h}, 原价: ${y}, 新价: ${p.price}, 方向: ${w>0?"上涨":"下跌"}, 变化幅度: ${U.toFixed(1)}%`)}if(p.changePercent===0&&y>0){const b=((N=n.find(M=>M.id===Number(h)))==null?void 0:N.basePrice)||y;p.changePercent=(p.price-b)/b*100,p.changePercent=parseFloat(p.changePercent.toFixed(1))}e.productPrices[h]={price:p.price,prevPrice:y,trend:p.trend,changePercent:p.changePercent,originalPricePercent:p.originalPricePercent,history:[...m.history||[],p.price].slice(-20)};const k=n.find(b=>b.id===Number(h));if(k){console.log(`商品 ${k.name}(ID:${h}) 价格更新 - 基础价格: ${k.basePrice}, 当前价格: ${p.price}, 历史: [${e.productPrices[h].history.join(", ")}]`);const{trend:b,changePercent:M}=e.calculateLongTermTrend(h,k.basePrice);e.productPrices[h].trend=b,e.productPrices[h].changePercent=M,console.log(`商品 ${k.name}(ID:${h}) 趋势更新 - 趋势: ${b}, 变化百分比: ${M}%`)}}),e.updateLocationProducts(),console.log("价格更新完成")},getProductTrendInfo:s=>{const n=e.getProductPriceTrend(s);return{text:Zt(n),icon:er(n),color:tr(n)}},getPriceChangeText:s=>{const n=e.productPrices[s];if(!n||n.changePercent===void 0)return"0%";const a=n.changePercent;return`${a>0?"+":""}${a.toFixed(1)}%`},measurePricePerformance:(s,n)=>null,clearPriceCache:Ze}},B=ce("market",{state:()=>({locations:[],currentLocation:null,productPrices:{},products:[],availableProducts:[],houses:[],marketModifiers:{globalPriceModifier:1,categoryModifiers:{},productModifiers:{},locationModifiers:{},locationProductModifiers:{},weeksSinceLastGlobalChange:0,categoryUnchangedWeeks:{},productUnchangedWeeks:{},locationUnchangedWeeks:{},locationProductUnchangedWeeks:{}},initialized:!1}),actions:{initializeMarket(){return new Promise((e,t)=>{try{setTimeout(()=>{this.locations=Ut(),this.products=$e(),this.houses=je(),this.initializeProductPrices(),this.marketModifiers={globalPriceModifier:1,categoryModifiers:{},productModifiers:{},locationModifiers:{},locationProductModifiers:{},weeksSinceLastGlobalChange:0,categoryUnchangedWeeks:{},productUnchangedWeeks:{},locationUnchangedWeeks:{},locationProductUnchangedWeeks:{}},this.locations.length>0&&(this.changeLocation(this.locations[0].id),this.updateLocationProducts()),this.initialized=!0,console.log("MarketStore - 市场初始化完成"),console.log("可用商品数量:",this.availableProducts.length),e()},500)}catch(r){L(r,"marketState (market)",S.UNKNOWN,P.ERROR),console.error("MarketStore - 初始化市场失败:",r),t(r)}})},initializeProductPrices(){this.productPrices={},this.products.forEach(e=>{const t=Math.floor(Math.random()*(e.maxPrice-e.minPrice)+e.minPrice);this.productPrices[e.id]={price:t,trend:E.STABLE,history:[t],changePercent:0}})},updateMarketState(e){console.log("MarketStore - 更新市场状态, 当前周数:",e),this.updateMarketModifiers();try{const{updateProductPrices:t}=rr();if(typeof t!="function"){console.error("MarketStore - updateProductPrices 不是一个函数");return}this.currentLocation&&(this.marketModifiers.currentLocation=this.currentLocation),t(e),console.log("MarketStore - 商品价格已更新")}catch(t){console.error("MarketStore - 更新商品价格时出错:",t)}this.updateLocationProducts()},updateMarketModifiers(){const e=this.marketModifiers;if(console.log("MarketStore - 更新市场调整因子"),e.weeksSinceLastGlobalChange++,e.weeksSinceLastGlobalChange>=Math.max(4,Math.floor(Math.random()*5)+4)&&(e.weeksSinceLastGlobalChange=0,Math.random()<.7)){const r=e.globalPriceModifier,i=(Math.random()-.5)*.2;e.globalPriceModifier=Math.max(.8,Math.min(1.2,r+i)),console.log(`MarketStore - 全局价格修正因子已更新: ${r.toFixed(2)} -> ${e.globalPriceModifier.toFixed(2)}`)}if(["food","electronics","luxury","daily","collectible"].forEach(r=>{if(e.categoryUnchangedWeeks[r]=(e.categoryUnchangedWeeks[r]||0)+1,e.categoryUnchangedWeeks[r]>=4||Math.random()<.3){e.categoryUnchangedWeeks[r]=0;const i=e.categoryModifiers[r]||1,o=(Math.random()-.5)*.3;e.categoryModifiers[r]=Math.max(.7,Math.min(1.3,i+o)),console.log(`MarketStore - ${r}类别价格修正因子已更新: ${i.toFixed(2)} -> ${e.categoryModifiers[r].toFixed(2)}`)}}),Math.random()<.15){const r=Math.floor(Math.random()*3)+1,i=Object.keys(this.productPrices);for(let o=0;o<r&&i.length>0;o++){const s=Math.floor(Math.random()*i.length),n=i[s];e.productUnchangedWeeks[n]=0;const a=e.productModifiers[n]||1,l=(Math.random()-.5)*.6;e.productModifiers[n]=Math.max(.5,Math.min(1.5,a+l));const d=this.products.find(h=>h.id===Number(n));console.log(`MarketStore - 商品价格修正因子已更新: ${(d==null?void 0:d.name)||n} ${a.toFixed(2)} -> ${e.productModifiers[n].toFixed(2)}`)}}if(Math.random()<.2){const r=Math.floor(Math.random()*2)+1,i=this.locations.map(o=>o.id);for(let o=0;o<r&&i.length>0;o++){const s=Math.floor(Math.random()*i.length),n=i[s];e.locationUnchangedWeeks[n]=0;const a=e.locationModifiers[n]||1,l=(Math.random()-.5)*.4;e.locationModifiers[n]=Math.max(.6,Math.min(1.4,a+l));const d=this.locations.find(h=>h.id===n);console.log(`MarketStore - 地区价格修正因子已更新: ${(d==null?void 0:d.name)||n} ${a.toFixed(2)} -> ${e.locationModifiers[n].toFixed(2)}`)}}if(Math.random()<.1){const r=this.locations.map(a=>a.id),i=Math.floor(Math.random()*r.length),o=r[i],s=Math.floor(Math.random()*3)+1,n=Object.keys(this.productPrices);e.locationProductModifiers[o]||(e.locationProductModifiers[o]={}),e.locationProductUnchangedWeeks[o]||(e.locationProductUnchangedWeeks[o]={});for(let a=0;a<s&&n.length>0;a++){const l=Math.floor(Math.random()*n.length),d=n[l];e.locationProductUnchangedWeeks[o][d]=0;const h=e.locationProductModifiers[o][d]||1,m=(Math.random()-.5)*.8;e.locationProductModifiers[o][d]=Math.max(.4,Math.min(1.6,h+m));const p=this.products.find(k=>k.id===Number(d)),y=this.locations.find(k=>k.id===o);console.log(`MarketStore - 地区内商品价格修正因子已更新: ${(y==null?void 0:y.name)||o} 的 ${(p==null?void 0:p.name)||d} ${h.toFixed(2)} -> ${e.locationProductModifiers[o][d].toFixed(2)}`)}}(e.globalPriceModifier<.8||e.globalPriceModifier>1.2)&&(e.globalPriceModifier=1)},changeLocation(e){const t=this.locations.find(r=>r.id===e);return t?(this.currentLocation=t,this.updateLocationProducts(),!0):!1},updateLocationProducts(){if(console.log("MarketStore - 更新当前地点可用商品"),!this.currentLocation){console.warn("MarketStore - 更新可用商品失败: 当前地点未设置"),this.availableProducts=[];return}try{const e=this.getLocationAvailableProducts(this.currentLocation);console.log("MarketStore - 当前地点可用商品ID:",e),this.availableProducts=this.products.filter(t=>e.includes(t.id)).map(t=>{const r=this.getCurrentProductPrice(t.id),i=this.isSpecialProduct(t.id),{trend:o,changePercent:s}=this.calculateLongTermTrend(t.id,t.basePrice);return this.productPrices[t.id]&&(this.productPrices[t.id].trend=o,this.productPrices[t.id].changePercent=s),console.log(`商品 ${t.name} - 价格: ${r}, 趋势: ${o}, 变化百分比: ${s}%`),{...t,currentPrice:r,trend:o,changePercent:s,isSpecial:i}}),console.log(`MarketStore - 更新完成，可用商品数量: ${this.availableProducts.length}`)}catch(e){L(e,"marketState (market)",S.UNKNOWN,P.ERROR),console.error("MarketStore - 更新当前地点可用商品时出错:",e),this.availableProducts=[]}},calculateLongTermTrend(e,t){const r=this.productPrices[e];if(!r||!r.history||r.history.length===0)return console.log(`商品 ${e} 没有价格历史数据，使用默认趋势`),{trend:E.STABLE,changePercent:0};const i=r.history,o=i[i.length-1],s=(o-t)/t*100;console.log(`商品 ${e} 趋势计算 - 基础价格: ${t}, 当前价格: ${o}, 历史记录: [${i.join(", ")}], 变化百分比: ${s.toFixed(1)}%`);let n;if(s>15)n=E.RISING_STRONG;else if(s>5)n=E.RISING;else if(s<-15)n=E.FALLING_STRONG;else if(s<-5)n=E.FALLING;else{const a=this.products.find(l=>l.id===Number(e));if(!a)console.log(`商品 ${e} 未找到产品信息，使用默认趋势`),n=E.STABLE;else{const l=a.minPrice,d=a.maxPrice,h=d-l;if(h<=0)console.log(`商品 ${e} 价格范围为0，使用默认趋势`),n=E.STABLE;else{const m=(o-l)/h;console.log(`商品 ${e} 相对位置计算 - 最低价: ${l}, 最高价: ${d}, 相对位置: ${(m*100).toFixed(1)}%`),m>.8?n=E.STABLE_HIGH:m<.2?n=E.STABLE_LOW:n=E.STABLE}}}if(i.length>=3){const a=i.slice(-3),l=this.calculateVolatility(a);console.log(`商品 ${e} 波动性计算 - 最近价格: [${a.join(", ")}], 波动性: ${l.toFixed(3)}`),l>.1&&(n=E.VOLATILE)}return console.log(`商品 ${e} 最终趋势: ${n}, 变化百分比: ${s.toFixed(1)}%`),{trend:n,changePercent:parseFloat(s.toFixed(1))}},calculateVolatility(e){if(!e||e.length<2)return 0;let t=0;for(let r=1;r<e.length;r++){const i=e[r-1],o=e[r];if(i>0){const s=Math.abs((o-i)/i);t+=s}}return t/(e.length-1)},getLocationAvailableProducts(e){if(!e)return[];try{const t=this.products.filter(r=>r.availableAt&&r.availableAt.includes(e.id)).map(r=>r.id);return e.specialProducts&&e.specialProducts.length>0&&e.specialProducts.forEach(r=>{t.includes(r)||t.push(r)}),t}catch(t){return console.error("获取地点可用商品列表出错:",t),[]}},isSpecialProduct(e){return!this.currentLocation||!this.currentLocation.specialProducts?!1:this.currentLocation.specialProducts.includes(e)},getCurrentProductPrice(e){if(!e)return console.warn(`MarketStore - getCurrentProductPrice: 无效的商品ID: ${e}`),0;const t=String(e);if(!this.productPrices||!this.productPrices[t]){console.warn(`MarketStore - getCurrentProductPrice: 找不到商品价格 (ID: ${t})`);const r=this.products.find(i=>String(i.id)===t);return r?(console.log(`MarketStore - 使用商品基础价格: ${r.basePrice}`),r.basePrice||0):0}return this.productPrices[t].price||0},getProductPriceHistory(e){var t;return((t=this.productPrices[e])==null?void 0:t.history)||[]},getProductPriceTrend(e){var t;return((t=this.productPrices[e])==null?void 0:t.trend)||E.STABLE},addMarketModifier(e,t){switch(e){case"global":this.marketModifiers.globalPriceModifier=t.value;break;case"category":this.marketModifiers.categoryModifiers[t.category]=t.value;break;case"product":this.marketModifiers.productModifiers[t.productId]=t.value;break;case"location":this.marketModifiers.locationModifiers[t.locationId]=t.value;break;case"locationProduct":this.marketModifiers.locationProductModifiers[t.locationId]||(this.marketModifiers.locationProductModifiers[t.locationId]={}),this.marketModifiers.locationProductModifiers[t.locationId][t.productId]=t.value;break}},loadProducts(e){if(console.log("MarketStore - 加载产品数据:",e),!Array.isArray(e)){console.warn("MarketStore - 加载产品数据时传入的不是数组:",e);return}if(this.products.length===0&&(this.products=$e()),e.length>0&&typeof e[0]=="string"){const t=$e();this.products=t.filter(r=>e.includes(r.id)),console.log("MarketStore - 已加载指定产品:",this.products.length)}this.updateLocationProducts()},loadHouses(e){if(console.log("MarketStore - 加载房屋数据:",e),!Array.isArray(e)){console.warn("MarketStore - 加载房屋数据时传入的不是数组:",e);return}if(this.houses.length===0&&(this.houses=je()),e.length>0&&typeof e[0]=="string"){const t=je();this.houses=t.filter(r=>e.includes(r.id)),console.log("MarketStore - 已加载指定房屋:",this.houses.length)}}},getters:{availableHouses(e){return e.houses},currentLocationInfo(e){return e.currentLocation?{id:e.currentLocation.id,name:e.currentLocation.name,description:e.currentLocation.description,modifiers:e.currentLocation.modifiers,hasSpecialProducts:e.currentLocation.specialProducts&&e.currentLocation.specialProducts.length>0}:null},marketStatus(e){const t=e.marketModifiers.globalPriceModifier;let r="neutral";t>1.1?r="bull":t<.9&&(r="bear");const i=e.products.filter(n=>e.productPrices[n.id]),o=i.filter(n=>(e.productPrices[n.id].price-n.minPrice)/(n.maxPrice-n.minPrice)>.7),s=i.filter(n=>(e.productPrices[n.id].price-n.minPrice)/(n.maxPrice-n.minPrice)<.3);return{status:r,globalModifier:t,highPriceProductsRatio:i.length>0?o.length/i.length:0,lowPriceProductsRatio:i.length>0?s.length/i.length:0,activeModifiersCount:Object.keys(e.marketModifiers.categoryModifiers).length+Object.keys(e.marketModifiers.productModifiers).length}}}}),f={RANDOM:"random",STORY:"story",LOCATION:"location",MARKET:"market",PERSONAL:"personal",TUTORIAL:"tutorial"};let qe=class{constructor({id:t,title:r,description:i,options:o=[],conditions:s={},repeatable:n=!1,type:a=f.RANDOM,weight:l=1,imageUrl:d=null}){this.id=t,this.title=r,this.description=i,this.options=o,this.conditions=s,this.repeatable=n,this.type=a,this.weight=l,this.imageUrl=null}canTrigger(t,r=[]){var o,s;const i=this.conditions;if(!this.repeatable&&r.includes(this.id)||i.minWeek!==null&&t.currentWeek<i.minWeek||i.maxWeek!==null&&t.currentWeek>i.maxWeek||i.locations!==null&&!i.locations.includes((o=t.currentLocation)==null?void 0:o.id))return!1;if(i.playerMoney!==null){const n=t.player.money;if(i.playerMoney.min!==void 0&&n<i.playerMoney.min||i.playerMoney.max!==void 0&&n>i.playerMoney.max)return!1}if(i.playerDebt!==null){const n=t.player.debt;if(i.playerDebt.min!==void 0&&n<i.playerDebt.min||i.playerDebt.max!==void 0&&n>i.playerDebt.max)return!1}if(i.inventoryItems!==null)for(const n of i.inventoryItems){const a=t.player.inventory.find(d=>d.productId===n.productId),l=a?a.quantity:0;if(n.minQuantity!==void 0&&l<n.minQuantity||n.maxQuantity!==void 0&&l>n.maxQuantity)return!1}if(i.attributes!==null)for(const[n,a]of Object.entries(i.attributes)){const l=((s=t.player.attributes)==null?void 0:s[n])||0;if(a.min!==void 0&&l<a.min||a.max!==void 0&&l>a.max)return!1}if(i.requiredEvents!==null){for(const n of i.requiredEvents)if(!r.includes(n))return!1}if(i.excludedEvents!==null){for(const n of i.excludedEvents)if(r.includes(n))return!1}return i.customCondition!==null&&!i.customCondition(t)?!1:Math.random()<=(i.probability||1)}getAvailableOptions(t){return this.options.filter(r=>r.condition===null||r.condition(t))}};class ze{constructor({text:t,result:r,effects:i,condition:o=null}){this.text=t,this.result=r,this.effects=i,this.condition=o}isAvailable(t){return this.condition===null||this.condition(t)}}class ir{constructor({money:t=0,debt:r=0,inventory:i=[],attributes:o={},market:s=null,forceLocationChange:n=!1,targetLocation:a=null,capacity:l=0,nextEvent:d=null,gameState:h=null}){this.money=t,this.debt=r,this.inventory=i,this.attributes=o,this.market=s,this.forceLocationChange=n,this.targetLocation=a,this.capacity=l,this.nextEvent=d,this.gameState=h}}class sr{constructor({minWeek:t=null,maxWeek:r=null,locations:i=null,probability:o=1,playerMoney:s=null,playerDebt:n=null,inventoryItems:a=null,attributes:l=null,requiredEvents:d=null,excludedEvents:h=null,customCondition:m=null}){this.minWeek=t,this.maxWeek=r,this.locations=i,this.probability=o,this.playerMoney=s,this.playerDebt=n,this.inventoryItems=a,this.attributes=l,this.requiredEvents=d,this.excludedEvents=h,this.customCondition=m}}function g(e){if(typeof e=="object"&&!Array.isArray(e))return new qe(e);{const[t,r,i,o,s,n,a,l,d]=arguments;return new qe({id:t,title:r,description:i,options:o,conditions:s,repeatable:n,type:a,weight:l,imageUrl:d})}}const c=(e,t,r,i=null)=>new ze({text:e,result:t,effects:r,condition:i}),u=e=>new ir(e),v=e=>new sr(e),or=[g("market_boom","局部市场繁荣","最新经济报道：高端商城和电子科技城迎来消费热潮，商品价格普遍上涨！这可能是调整购买策略的好时机。",[c("抓住机会在热门地区采购","你决定前往这些繁荣地区采购更多商品，希望能从价格波动中获益。",u({market:{locationModifiers:{premium_mall:1.25,electronics_hub:1.15},duration:2}})),c("观望市场走势","你决定保持观望态度，不做任何特别的操作。",u({})),c("趁高价出售相关库存商品","你决定利用这些地区价格上涨的机会出售一些库存商品。",u({market:{locationModifiers:{premium_mall:1.2,electronics_hub:1.1},duration:1}}),e=>e.player.inventoryUsed>0)],v({minWeek:5,probability:.2}),!0,f.MARKET,1.5,"/assets/images/events/market_boom.jpg"),g("market_crash","局部市场崩盘","突发消息：二手市场和地下黑市爆发安全事件，导致这些地区交易萎缩，商品价格大幅下跌！你需要决定是否利用这次低价机会。",[c("抄底购买","你决定趁低价前往受影响地区大量购入商品，希望能在价格回升时获利。",u({market:{locationModifiers:{second_hand_market:.65,black_market:.7},duration:3}})),c("等待市场稳定","你决定等待市场稳定后再行动，避免在动荡时期冒险。",u({})),c("提前卖出持有商品","你担心其他地区也会受影响，决定立即出售部分商品减少可能的损失。",u({market:{locationModifiers:{second_hand_market:.75,black_market:.8},duration:1}}),e=>e.player.inventoryUsed>0)],v({minWeek:10,probability:.15}),!0,f.MARKET,1.5,"/assets/images/events/market_crash.jpg"),g("lucky_money","意外之财","你在路上捡到了一个钱包，里面有一些现金和失主的联系方式。这是个考验你诚信的时刻。",[c("归还钱包","你联系了失主并归还了钱包，对方非常感谢并给了你500元酬金。",u({money:500,attributes:{creditRating:1,reputation:1}})),c("据为己有","你决定把钱包里的钱据为己有，获得了2000元，但感到有些愧疚。",u({money:2e3,attributes:{creditRating:-2,reputation:-2}}))],v({probability:.1,minWeek:3}),!1,f.PERSONAL,1,"/assets/images/events/lucky_money.jpg"),g("health_problem","健康问题","你突然感到身体不适，医生建议你及时就医。不及时处理可能会影响到你的日常工作和生活。",[c("立即就医","你选择立即去医院检查治疗，花费了一些医疗费，但迅速恢复了健康。",u({money:-800,attributes:{health:1}})),c("暂时忍耐","你决定先忍着，希望症状会自行好转，省下医疗费用。但这导致你的健康状况有所下降。",u({attributes:{health:-1}})),c("寻求中药调理","你选择购买一些中药进行调理，花费较少但效果温和。",u({money:-300,attributes:{health:.5}}))],v({probability:.15,minWeek:8}),!0,f.PERSONAL,1,"/assets/images/events/health_problem.jpg"),g("market_raid","黑市突袭","警方突然突袭了地下黑市！所有人都在慌乱中逃窜，你需要快速做出决定。",[c("迅速离开","你迅速逃离了现场，虽然没能完成交易，但避免了不必要的麻烦。",u({forceLocationChange:!0,targetLocation:"commodity_market"})),c("冒险完成交易","你冒险留下来完成交易，获得了低价商品，但差点被执法人员抓住。",u({market:{globalPriceModifier:.6,duration:1},attributes:{businessSkill:1,risk_tolerance:1}}))],v({locations:["black_market"],probability:.25}),!0,f.LOCATION,1.5,"/assets/images/events/market_raid.jpg"),g("celebrity_appearance","名人现身","一位知名明星在高端商城现身购物，引起一阵轰动。人流激增，商家纷纷调高价格。",[c("趁机提高售价","你抓住机会在附近设摊，以略高的价格出售商品，赚了一笔。",u({money:1500,market:{globalPriceModifier:1.2,duration:1}})),c("尝试接近名人","你试图接近名人获取合影，结果不小心被保安推搡，手机摔坏了。",u({money:-500}))],v({locations:["premium_mall"],probability:.2}),!0,f.LOCATION,1,"/assets/images/events/celebrity.jpg"),g("debt_relief","债务减免","银行推出了债务重组计划，你收到了参与机会。这可能是减轻债务负担的好机会。",[c("申请参与","你成功申请了债务减免计划，债务减少了20%。",u({debt:-.2})),c("放弃机会","你认为这可能有隐藏条款，决定放弃这个机会。",u({}))],v({minWeek:15,playerDebt:{min:5e3},probability:.3}),!1,f.PERSONAL,1,"/assets/images/events/debt_relief.jpg"),g("electronics_discount","电子产品促销","电子产品市场推出大规模促销活动，价格大幅下降！这是囤积电子产品的好时机。",[c("购买电子产品","你趁机购买了一些电子产品，价格比平时便宜很多。",u({market:{categoryModifier:"ELECTRONICS",modifier:.7,duration:2}})),c("不感兴趣","你对电子产品不感兴趣，决定忽略这次促销。",u({}))],v({probability:.15,minWeek:5}),!0,f.MARKET,1,"/assets/images/events/electronics_sale.jpg"),g("luxury_tax","奢侈品征税","政府宣布对奢侈品征收额外税费，导致奢侈品价格全面上涨。",[c("提前囤货","你决定在税收政策实施前囤积一些奢侈品，以备后续高价出售。",u({market:{categoryModifier:"LUXURY",modifier:1.1,duration:1},nextEvent:"luxury_tax_aftermath"})),c("观望市场","你决定等待看看市场如何反应，避免做出冒险决策。",u({market:{categoryModifier:"LUXURY",modifier:1.3,duration:4}}))],v({probability:.1,minWeek:12,excludedEvents:["luxury_tax","luxury_tax_aftermath"]}),!1,f.MARKET,1,"/assets/images/events/luxury_tax.jpg"),g("luxury_tax_aftermath","奢侈品价格飙升","奢侈品征税政策正式实施，市场价格如预期般大幅上涨。你之前的准备是否充分？",[c("高价出售囤货","你将之前囤积的奢侈品以高价出售，获得了可观利润。",u({money:3e3,market:{categoryModifier:"LUXURY",modifier:1.4,duration:3}}),e=>e.player.inventory.some(t=>{const r=e.products.find(i=>i.id===t.productId);return r&&r.category==="LUXURY"})),c("继续持有","你认为价格还会进一步上涨，决定继续持有囤积的商品。",u({market:{categoryModifier:"LUXURY",modifier:1.3,duration:3}}))],v({requiredEvents:["luxury_tax"]}),!1,f.MARKET,1,"/assets/images/events/luxury_price_rise.jpg"),g("storage_expansion","存储空间扩展","你发现一个可以扩展背包容量的好机会，但需要投入一些资金。",[c("购买新背包","你花钱购买了一个更大的背包，提升了存储容量。",u({money:-1500,capacity:20})),c("租用仓库空间","你租了一个小型仓库空间，花费较低但容量提升有限。",u({money:-500,capacity:10})),c("放弃机会","你认为当前容量够用，决定节约资金不进行扩展。",u({}))],v({probability:.15,minWeek:10,playerMoney:{min:500},inventoryUsed:{min:.7}}),!0,f.PERSONAL,1,"/assets/images/events/storage_expansion.jpg"),g("tutorial_trading","交易入门","欢迎来到《买房记》！在这个游戏中，你的目标是通过买卖商品赚取差价，最终积累足够的资金购买理想的房产。",[c("了解基本交易","你学习了基本的交易知识，明白了如何在不同地点之间买卖商品赚取差价。",u({nextEvent:"tutorial_market"}))],v({minWeek:1,maxWeek:1}),!1,f.TUTORIAL,1,"/assets/images/events/tutorial.jpg"),g("tutorial_market","市场解析","不同地点的商品价格会有差异，同时还会随时间波动。关注价格趋势是获利的关键！",[c("继续学习","你了解了价格趋势系统，以及如何利用价格波动获利。",u({nextEvent:"tutorial_goal"}))],v({requiredEvents:["tutorial_trading"]}),!1,f.TUTORIAL,1,"/assets/images/events/tutorial_market.jpg"),g("tutorial_goal","游戏目标","游戏中你有52周的时间来积累财富。最终目标是购买一套理想住房，房屋种类从便宜的小公寓到豪华别墅不等。祝你好运！",[c("开始游戏","你已经了解了游戏的基本规则，现在可以开始你的买房之旅了！",u({attributes:{businessSkill:1}}))],v({requiredEvents:["tutorial_market"]}),!1,f.TUTORIAL,1,"/assets/images/events/tutorial_goal.jpg"),g("unexpected_inheritance","意外继承","你收到一份律师函，一位远房亲戚去世后将一笔资金留给了你。这是个意外之喜！",[c("接受继承","你接受了这笔意外之财，获得了一笔可观的资金。",u({money:5e3,attributes:{happiness:1}})),c("捐赠一部分","你决定将一部分继承的钱捐给慈善机构，感觉心情舒畅。",u({money:3500,attributes:{happiness:2,reputation:2}}))],v({probability:.05,minWeek:15}),!1,f.PERSONAL,.8,"/assets/images/events/inheritance.jpg"),g("business_training","商业培训","你发现一个商业技能培训班的广告，参加可能会提升你的交易能力，但需要付出一定费用和时间。",[c("参加培训","你投入时间和金钱参加了培训，商业技能得到了提升。",u({money:-1e3,attributes:{businessSkill:2}})),c("自学商业知识","你决定通过书籍和网络自学商业知识，花费较少但效果有限。",u({money:-200,attributes:{businessSkill:1}})),c("忽略这个机会","你认为实践出真知，决定把时间和金钱用在实际交易上。",u({}))],v({probability:.15,minWeek:4,playerMoney:{min:1e3}}),!0,f.PERSONAL,1,"/assets/images/events/business_training.jpg"),g("social_networking","社交机会","你被邀请参加一个商业人士的社交聚会，这可能是结识人脉、获取信息的好机会。",[c("积极参与","你在聚会上积极社交，结识了几位有价值的商业伙伴，获得了一些市场内幕。",u({money:-300,attributes:{socialSkill:1,businessSkill:.5},market:{insiderInfo:!0,duration:2}})),c("简单出席","你低调地参加了聚会，没有特别的收获，但也开阔了眼界。",u({money:-300,attributes:{socialSkill:.5}})),c("婉拒邀请","你因为忙于其他事务婉拒了邀请，错过了这次社交机会。",u({}))],v({probability:.12,minWeek:8,playerMoney:{min:300}}),!0,f.PERSONAL,1,"/assets/images/events/social_networking.jpg"),g("investment_opportunity","投资机会","一个朋友向你推荐了一个小型创业公司的投资机会，声称有高回报，但风险未知。",[c("大笔投资","你决定投入一大笔资金，希望获得高回报。",u({money:-4e3,nextEvent:"investment_result_big"})),c("小额投资","你谨慎地投入一小笔资金，降低可能的风险。",u({money:-1500,nextEvent:"investment_result_small"})),c("拒绝投资","你对这个机会持怀疑态度，决定不冒险投资。",u({}))],v({probability:.1,minWeek:20,playerMoney:{min:4e3}}),!1,f.PERSONAL,1,"/assets/images/events/investment_opportunity.jpg"),g("investment_result_big","投资结果","几周后，你投资的创业公司有了新进展...",[c("查看结果","你满怀期待地查看投资结果...",u({money:Math.random()>.3?8e3:-2e3,attributes:{businessSkill:1}}))],v({requiredEvents:["investment_opportunity"]}),!1,f.PERSONAL,1,"/assets/images/events/investment_result.jpg"),g("investment_result_small","投资结果","几周后，你投资的创业公司有了新进展...",[c("查看结果","你满怀期待地查看投资结果...",u({money:Math.random()>.2?2500:-500,attributes:{businessSkill:.5}}))],v({requiredEvents:["investment_opportunity"]}),!1,f.PERSONAL,1,"/assets/images/events/investment_result.jpg"),g("clothing_fashion_trend","时尚潮流","一股新的时尚潮流席卷全城，服装类产品的需求突然增加！",[c("囤积服装类商品","你预见到这是一个商机，决定大量购入服装类商品。",u({market:{categoryModifier:"CLOTHING",modifier:1.3,duration:3}})),c("观望市场变化","你对时尚潮流持观望态度，决定继续关注市场变化再做决定。",u({})),c("出售现有服装库存","你决定趁机出售手中的服装类商品，获得一定利润。",u({money:800}),e=>e.player.inventory.some(t=>{const r=e.products.find(i=>i.id===t.productId);return r&&r.category==="CLOTHING"}))],v({probability:.15,minWeek:4}),!0,f.MARKET,1,"/assets/images/events/fashion_trend.jpg"),g("food_shortage","食品短缺","由于恶劣天气影响，市场上出现了食品短缺的情况，价格开始上涨。",[c("大量购入食品","你预计价格会进一步上涨，决定趁现在大量购入食品类商品。",u({market:{categoryModifiers:{FOOD:1.4},productModifiers:{201:1.6,202:1.5,204:1.7},duration:4}})),c("寻找替代食品来源","你开始寻找替代的食品来源，避免受到价格波动的影响。",u({market:{categoryModifiers:{FOOD:1.2},productModifiers:{201:1.3,202:1.25},duration:2}}))],v({probability:.12,minWeek:8,excludedEvents:["food_shortage"]}),!0,f.MARKET,1,"/assets/images/events/food_shortage.jpg"),g("tech_innovation","科技创新","一项突破性的科技创新引起了市场关注，相关电子产品需求激增。",[c("投资科技产品","你决定购入一批最新的科技产品，希望能够获得高额利润。",u({market:{categoryModifiers:{ELECTRONICS:1.25},productModifiers:{301:1.4,303:1.35,305:1.45},locationModifiers:{electronics_hub:1.15},duration:3}})),c("继续关注传统产品","你认为科技创新只是短期效应，决定继续专注于传统产品。",u({market:{productModifiers:{301:1.2,305:1.25},duration:2}}))],v({probability:.15,minWeek:6}),!0,f.MARKET,1,"/assets/images/events/tech_innovation.jpg"),g("supply_chain_disruption","供应链中断","全球供应链出现严重中断，多种商品的供应受到影响，价格开始波动。",[c("囤积受影响商品","你决定趁价格还未大幅上涨前，囤积一批受影响的商品。",u({market:{globalPriceModifier:1.15,duration:5}})),c("转向本地产品","你决定转向采购本地生产的商品，减少对全球供应链的依赖。",u({market:{globalPriceModifier:1.1,duration:3}})),c("延迟采购计划","你决定暂时延迟采购计划，等待供应链恢复正常。",u({nextEvent:"supply_chain_recovery"}))],v({probability:.1,minWeek:15}),!1,f.MARKET,1.2,"/assets/images/events/supply_chain.jpg"),g("supply_chain_recovery","全球供应链逐步恢复","经过一段时间的调整，全球供应链开始逐步恢复，但不同地区和商品的恢复速度存在显著差异。",[c("把握恢复机会","你分析了市场恢复趋势，决定有选择地投资于价格开始恢复正常的商品。",u({market:{globalPriceModifier:.95,locationModifiers:{commodity_market:.9,electronics_hub:1.1,black_market:.85},locationProductModifiers:{commodity_market:{202:.85,203:.9},electronics_hub:{301:1.2,305:1.15},black_market:{502:.7,503:.75}},duration:3}})),c("稳健策略","你决定采取稳健策略，平衡调整你的库存和交易计划。",u({market:{globalPriceModifier:.98,locationModifiers:{commodity_market:.95,premium_mall:.95,second_hand_market:.95},duration:2}}))],v({requiredEvents:["supply_chain_disruption","old_supply_chain_disruption"]}),!1,f.MARKET,1,"/assets/images/events/supply_recovery.jpg"),g("seasonal_sales","季节性促销","年度大促销活动开始了，各大商家纷纷降价吸引顾客。这是囤货的好时机！",[c("大量采购","你决定利用促销活动大量采购各类商品，为未来的销售做准备。",u({market:{globalPriceModifier:.75,duration:2}})),c("选择性采购","你有选择地购买一些特价商品，避免资金过度占用。",u({market:{globalPriceModifier:.85,duration:1}})),c("跳过促销","你认为促销商品质量可能不高，决定跳过这次活动。",u({}))],v({probability:.2,minWeek:12,maxWeek:40}),!0,f.MARKET,1,"/assets/images/events/seasonal_sales.jpg"),g("market_discount","大宗交易优惠","大宗商品交易所今天推出特别优惠，所有商品都有额外折扣！",[c("大量采购","你决定利用这个机会大量采购各类商品，为未来的销售做准备。",u({market:{locationModifiers:{commodity_market:.8},categoryModifiers:{FOOD:.75,DAILY:.7},productModifiers:{201:.6,202:.65,101:.6},duration:1},forceLocationChange:!0,targetLocation:"commodity_market"})),c("有选择地购买","你仔细挑选，只购买那些真正划算的商品。",u({market:{locationModifiers:{commodity_market:.9},productModifiers:{202:.7,203:.75},duration:1},forceLocationChange:!0,targetLocation:"commodity_market"})),c("放弃此次机会","你觉得价格优惠幅度不够大，决定不参与此次优惠活动。",u({market:{locationModifiers:{commodity_market:.95},duration:1}}))],v({locations:["commodity_market"],probability:.25}),!0,f.LOCATION,1,"/assets/images/events/wholesale_discount.jpg"),g("mall_event","商城名人活动","高端商城举办了一场名人见面会，吸引了大量人流。商场内的商品价格临时上调。",[c("趁机设摊销售","你在商城外设置临时摊位，利用人流量增加销售额。",u({money:1200,inventory:[{productId:"random",quantity:-5}]}),e=>e.player.inventoryUsed>=5),c("避开人群","你决定避开拥挤的人群，改天再来购物。",u({forceLocationChange:!0}))],v({locations:["premium_mall"],probability:.2}),!0,f.LOCATION,1,"/assets/images/events/mall_celebrity.jpg"),g("electronics_expo","电子科技城展销会","电子科技城举办大型数码产品展销会，最新款手机和智能手表都有特别优惠！这是采购电子产品的绝佳时机。",[c("参观展会","你花费一些时间参观展销会，了解最新的科技趋势。",u({money:-100,market:{locationModifiers:{electronics_hub:.95},duration:1}})),c("采购特价电子产品","你决定投资购买展会上的特价手机和智能手表，期望能在价格上涨前转售获利。",u({money:-2e3,market:{locationProductModifiers:{electronics_hub:{301:.7,305:.75}},duration:2}}),e=>e.player.money>=2e3)],v({locations:["electronics_hub"],probability:.3}),!0,f.LOCATION,1,"/assets/images/events/electronics_expo.jpg"),g("market_inspection","市场检查","市场管理人员突然来到折扣市场进行检查，查验摊位合规性！你需要快速决定如何应对。",[c("配合检查","你主动配合检查，展示自己的合规经营，获得了管理人员的好感。",u({money:-50,attributes:{businessSkill:1}})),c("暂时离场","你决定暂时收摊离场，避开这次检查，但损失了一天的生意。",u({money:-300,attributes:{businessSkill:-1}}))],v({locations:["discount_market"],probability:.25}),!0,f.LOCATION,1,"/assets/images/events/market_inspection.jpg"),g("business_competition","商业竞赛","当地举办了一场商业技能竞赛，测试参赛者的商业头脑和决策能力。这可能是展示你实力的好机会！",[c("全力参赛","你决定全力以赴参加比赛，希望能获得好名次。",u({money:e=>{const t=e.player.attributes.businessSkill||0;return t>=8?5e3:t>=5?2e3:t>=3?500:0},attributes:{businessSkill:1,reputation:1}})),c("随便参与","你抱着学习的态度参加比赛，不期望获奖。",u({money:200,attributes:{businessSkill:.5}})),c("放弃参赛","你认为自己还没准备好，决定放弃这次比赛机会。",u({}))],v({probability:.08,minWeek:25}),!1,f.PERSONAL,1,"/assets/images/events/business_competition.jpg"),g("market_insider_info","内幕消息","你的一个朋友透露给你一个市场内幕消息，暗示某类商品即将大涨价。这可能是一个发财的好机会！",[c("相信消息并行动","你相信这个内幕消息，决定投入大量资金购买相关商品。",u({nextEvent:"insider_info_result"})),c("小规模试水","你不确定消息的可靠性，决定小规模投资以降低风险。",u({nextEvent:"insider_info_result_small"})),c("忽略消息","你对这种内幕消息持怀疑态度，决定不采取任何行动。",u({}))],v({probability:.1,minWeek:15,playerMoney:{min:3e3}}),!1,f.MARKET,1,"/assets/images/events/insider_info.jpg"),g("insider_info_result","内幕消息结果","一周后，你等待看到内幕消息的结果...",[c("查看结果","你满怀期待地查看市场变化。",u({market:Math.random()>.3?{categoryModifier:["LUXURY","ELECTRONICS","CLOTHING"][Math.floor(Math.random()*3)],modifier:1.8,duration:2}:{globalPriceModifier:.9,duration:1}}))],v({requiredEvents:["market_insider_info"]}),!1,f.MARKET,1,"/assets/images/events/insider_result.jpg"),g("insider_info_result_small","内幕消息小规模试水结果","一周后，你等待看到内幕消息的结果...",[c("查看结果","你查看小规模投资的结果。",u({market:Math.random()>.3?{categoryModifier:["LUXURY","ELECTRONICS","CLOTHING"][Math.floor(Math.random()*3)],modifier:1.5,duration:1}:{globalPriceModifier:.95,duration:1}}))],v({requiredEvents:["market_insider_info"]}),!1,f.MARKET,1,"/assets/images/events/insider_result.jpg"),g("real_estate_opportunity","房产机会","你偶然听说有一处房产即将以低于市场价的价格出售，这可能是一个难得的买房机会。",[c("立即考察","你决定立即去考察这处房产，看看是否值得购买。",u({nextEvent:"real_estate_inspection"})),c("咨询专业人士","你决定先咨询一位房产专家，获取专业意见。",u({money:-500,nextEvent:"real_estate_expert_advice"}),e=>e.player.money>=500),c("忽略这个消息","你认为目前还没有准备好购房，决定忽略这个消息。",u({}))],v({probability:.1,minWeek:30,playerMoney:{min:5e4}}),!1,f.STORY,1,"/assets/images/events/real_estate_opportunity.jpg"),g("real_estate_inspection","房产考察","你仔细考察了这处房产，发现它确实低于市场价，但需要一些维修。",[c("以优惠价购买","你决定抓住这个机会，以优惠价格购买这处房产。",u({money:-6e4,attributes:{housingValue:8e4}}),e=>e.player.money>=6e4),c("继续等待更好的机会","你认为这处房产不够完美，决定继续等待更好的机会。",u({}))],v({requiredEvents:["real_estate_opportunity"]}),!1,f.STORY,1,"/assets/images/events/real_estate_inspection.jpg"),g("real_estate_expert_advice","专家建议","房产专家仔细分析后告诉你，这处房产位置很好，但维修成本可能比预期高。",[c("接受建议并购买","你接受专家建议并决定购买这处房产，同时为维修预留资金。",u({money:-65e3,attributes:{housingValue:85e3}}),e=>e.player.money>=65e3),c("放弃这次机会","专家的分析让你意识到风险，你决定放弃这次购房机会。",u({}))],v({requiredEvents:["real_estate_opportunity"]}),!1,f.STORY,1,"/assets/images/events/real_estate_expert.jpg"),g("housing_market_boom","房市繁荣","最近房地产市场异常火爆，房价普遍上涨。现在可能是购房或出售现有房产的好时机。",[c("抓紧购房","你认为房价还会继续上涨，决定趁现在抓紧购房。",u({market:{houseMarketModifier:1.1,duration:4}})),c("出售现有房产","你决定趁房价高点出售现有房产，获得可观利润。",u({money:e=>(e.player.attributes.housingValue||0)*1.15,attributes:{housingValue:0}}),e=>e.player.attributes.housingValue>0),c("观望市场","你认为目前房价过高，可能是泡沫，决定继续观望。",u({}))],v({probability:.1,minWeek:35}),!0,f.MARKET,1,"/assets/images/events/housing_boom.jpg"),g("housing_market_crash","房市崩盘","突发经济危机导致房地产市场急剧降温，房价开始下跌。这可能是低价购入的机会，也可能带来风险。",[c("逆势购房","你认为这是难得的低价购房机会，决定逆势而上。",u({market:{houseMarketModifier:.8,duration:3}})),c("观望市场","你决定等待市场进一步稳定后再做决定。",u({market:{houseMarketModifier:.85,duration:2}}))],v({probability:.08,minWeek:40,excludedEvents:["housing_market_boom"]}),!1,f.MARKET,1,"/assets/images/events/housing_crash.jpg"),g("business_partner_proposal","商业合作提议","一位经验丰富的商人提议与你合作开展更大规模的贸易，但需要你投入一笔资金作为启动资本。",[c("接受合作","你决定与这位商人合作，投入一笔资金开展大规模贸易。",u({money:-1e4,nextEvent:"business_partnership_result"}),e=>e.player.money>=1e4),c("小规模试水","你对合作持谨慎态度，决定先小规模投资测试。",u({money:-3e3,nextEvent:"business_partnership_small_result"}),e=>e.player.money>=3e3),c("拒绝合作","你对这个合作提议持怀疑态度，决定婉拒。",u({}))],v({probability:.1,minWeek:30,playerMoney:{min:1e4},attributes:{businessSkill:{min:5}}}),!1,f.STORY,1,"/assets/images/events/business_partner.jpg"),g("business_partnership_result","商业合作结果","几周过去了，你与商业伙伴的合作项目有了结果...",[c("查看结果","你期待地查看合作的成果。",u({money:e=>{const t=e.player.attributes.businessSkill||0,r=15e3,i=t*1e3;return r+i},attributes:{businessSkill:2}}))],v({requiredEvents:["business_partner_proposal"]}),!1,f.STORY,1,"/assets/images/events/partnership_result.jpg"),g("business_partnership_small_result","小规模合作结果","几周过去了，你的小规模合作项目有了结果...",[c("查看结果","你查看小规模合作的成果。",u({money:e=>{const t=e.player.attributes.businessSkill||0,r=4500,i=t*300;return r+i},attributes:{businessSkill:1}}))],v({requiredEvents:["business_partner_proposal"]}),!1,f.STORY,1,"/assets/images/events/partnership_result.jpg"),g("final_opportunity","最终机会","游戏接近尾声，市场出现了一次难得的价格波动，这可能是你最后的发财机会！",[c("全力投入","你决定将大部分资金投入到这次机会中，希望能实现最后的翻盘。",u({market:{globalPriceModifier:.6,duration:1},nextEvent:"final_market_surge"})),c("谨慎投资","你决定谨慎投资，避免在最后关头冒过大风险。",u({market:{globalPriceModifier:.8,duration:1}}))],v({minWeek:45,probability:.5}),!1,f.STORY,2,"/assets/images/events/final_opportunity.jpg"),g("final_market_surge","最终市场大涨","就在游戏即将结束前，市场出现了戏剧性的价格上涨！这是最后的变现机会。",[c("全部卖出","你决定趁这次价格上涨全部卖出库存，最大化你的利润。",u({market:{globalPriceModifier:2,duration:1}})),c("部分卖出","你决定卖出部分库存，保留一些以防后市继续上涨。",u({market:{globalPriceModifier:1.7,duration:1}}))],v({requiredEvents:["final_opportunity"],minWeek:48}),!1,f.STORY,1,"/assets/images/events/market_surge.jpg"),g("property_expo","房产展览会","城市中心正在举办一场大型房产展览会，各个开发商都带来了他们最新的楼盘项目。这是了解市场动态和获取优惠信息的好机会。",[c("参观展览会","你决定花时间参观房产展览会，了解市场最新动态。",u({money:-200,nextEvent:"property_expo_discover"}),e=>e.player.money>=200),c("与中介交谈","你决定只与几位房产中介交谈，不花太多时间。",u({nextEvent:"property_broker_info"})),c("忽略这个活动","你现在没有购房计划，决定忽略这次展览会。",u({}))],v({probability:.15,minWeek:15,playerMoney:{min:3e4}}),!1,f.STORY,1,"/assets/images/events/property_expo.jpg"),g("property_expo_discover","展会发现","在展览会上，你发现一个正在预售的新楼盘，开发商提供了独特的折扣方案。销售人员告诉你，如果现在预订，可以获得比市场价低15%的优惠。",[c("预付定金","你决定抓住这个机会，预付10%的定金锁定这个优惠。",u({money:e=>-1e4,nextEvent:"property_investment_result"}),e=>e.player.money>=1e4),c("记录信息","你记下了这个楼盘的信息，但决定先不付定金，回去再考虑。",u({nextEvent:"property_later_decision"})),c("寻找其他机会","你对这个楼盘不太感兴趣，决定继续寻找其他机会。",u({}))],v({requiredEvents:["property_expo"]}),!1,f.STORY,1,"/assets/images/events/property_discover.jpg"),g("property_investment_result","房产投资结果","几周后，你收到开发商的通知，你预订的楼盘项目进展顺利，已经开始正式建设。根据最新的市场评估，类似房产的价值已经上涨了。",[c("继续持有","你决定继续持有这项投资，期待房产完工后的升值。",u({attributes:{housingInvestment:1e4,propertyValue:1e5},nextEvent:"property_completion_notice"})),c("转让投资","你决定趁着市场上涨，将你的预购权转让给其他买家，获取快速利润。",u({money:13e3,attributes:{housingInvestment:0,propertyValue:0}}))],v({requiredEvents:["property_expo_discover"]}),!1,f.STORY,1,"/assets/images/events/property_investment.jpg"),g("property_completion_notice","房产完工通知","你收到了开发商的通知，你投资的房产项目已经完工，现在价值约120,000元。你可以选择支付剩余的购房款完成购买，或者出售你的预购权。",[c("完成购买","你决定支付剩余的购房款，完成这处房产的购买。",u({money:-9e4,attributes:{housingInvestment:0,propertyValue:12e4,hasHouse:!0},nextEvent:"new_house_celebration"}),e=>e.player.money>=9e4),c("出售预购权","你决定出售你的预购权，获取投资回报。",u({money:25e3,attributes:{housingInvestment:0,propertyValue:0}})),c("继续等待","你认为房产价值还会上涨，决定继续持有，但暂不付款。",u({nextEvent:"property_market_change"}))],v({requiredEvents:["property_investment_result"],minWeek:35}),!1,f.STORY,1,"/assets/images/events/property_completion.jpg"),g("property_market_change","房产市场变化","由于市场条件变化，你持有的房产预购权价值出现了波动。",[c("查看市场变化","你密切关注市场动态，查看你的投资受到了什么影响。",u({attributes:{propertyValue:Math.random()>.5?13e4:11e4}}))],v({requiredEvents:["property_completion_notice"]}),!1,f.MARKET,1,"/assets/images/events/market_change.jpg"),g("new_house_celebration","新房庆祝","你终于拥有了自己的房产！这是人生的一个重要里程碑。朋友们提议举办一个小型聚会来庆祝这一时刻。",[c("举办庆祝派对","你决定举办一个庆祝派对，邀请朋友们一起分享这个喜悦时刻。",u({money:-2e3,attributes:{happiness:5,socialNetwork:2}}),e=>e.player.money>=2e3),c("简单庆祝","你决定简单地请几个好友吃顿饭庆祝一下。",u({money:-500,attributes:{happiness:3}}),e=>e.player.money>=500),c("独自欣赏","你决定独自一人好好欣赏你的新家，享受这份成就感。",u({attributes:{happiness:2}}))],v({requiredEvents:["property_completion_notice"]}),!1,f.PERSONAL,1,"/assets/images/events/house_celebration.jpg"),g("property_broker_info","房产中介信息","与房产中介交谈后，你获得了一些关于当前房市的内部信息。中介表示，某些特定区域的房产可能即将升值。",[c("深入了解","你决定与中介进一步交流，了解更多细节。",u({money:-500,nextEvent:"property_insider_tip"}),e=>e.player.money>=500),c("保持关注","你对这些信息表示感谢，但决定暂时只是保持关注。",u({}))],v({requiredEvents:["property_expo"]}),!1,f.STORY,1,"/assets/images/events/broker_info.jpg"),g("property_insider_tip","内部消息","支付咨询费后，中介向你透露了一个内部消息：城市规划部门即将宣布在某区域建设新的地铁线，这很可能导致该区域房价上涨。",[c("投资该区域房产","你决定相信这个消息，投资该区域的房产。",u({money:-3e4,nextEvent:"property_insider_result"}),e=>e.player.money>=3e4),c("谨慎观望","你对这个消息持谨慎态度，决定先观察一段时间。",u({nextEvent:"property_missed_opportunity"}))],v({requiredEvents:["property_broker_info"]}),!1,f.STORY,1,"/assets/images/events/insider_tip.jpg"),g("property_insider_result","内部消息结果","几周后，城市规划部门果然宣布了新地铁线的建设计划，你投资的区域房产价值开始上涨！",[c("继续持有","你决定继续持有这项投资，期待更大的升值空间。",u({attributes:{propertyValue:45e3}})),c("立即出售","你决定趁着消息公布后的价格上涨立即出售获利。",u({money:4e4,attributes:{propertyValue:0}}))],v({requiredEvents:["property_insider_tip"]}),!1,f.STORY,1,"/assets/images/events/insider_result.jpg"),g("property_missed_opportunity","错失机会","城市规划部门宣布了新地铁线的建设计划，中介提到的区域房价果然上涨了。你有些遗憾没有把握这个投资机会。",[c("寻找新机会","错过了这次机会，但你决定继续寻找新的投资机会。",u({nextEvent:"property_new_opportunity"})),c("接受教训","你接受这个教训，决定以后在有内部消息时更加果断。",u({attributes:{businessSkill:1}}))],v({requiredEvents:["property_insider_tip"]}),!1,f.STORY,1,"/assets/images/events/missed_opportunity.jpg"),g("property_new_opportunity","新的房产机会","尽管错过了之前的机会，但你很快发现了另一个潜在的房产投资机会。一处位置较好但略显老旧的房产正在出售，价格相对较低。",[c("购买并翻新","你决定购买这处房产并进行翻新，提升其价值。",u({money:-4e4,attributes:{propertyValue:4e4},nextEvent:"property_renovation_results"}),e=>e.player.money>=4e4),c("仅购买不翻新","你决定购买这处房产，但暂不进行翻新。",u({money:-35e3,attributes:{propertyValue:35e3}}),e=>e.player.money>=35e3),c("放弃这个机会","经过评估，你认为这个机会风险太大，决定放弃。",u({}))],v({requiredEvents:["property_missed_opportunity"]}),!1,f.STORY,1,"/assets/images/events/new_opportunity.jpg"),g("property_renovation_results","房产翻新结果","经过一段时间的翻新，你的房产焕然一新。周边邻居和房产评估师都对你的翻新工作表示赞赏。",[c("查看房产估值","你请房产评估师对翻新后的房产进行正式估值。",u({money:-500,attributes:{propertyValue:55e3}}),e=>e.player.money>=500),c("挂牌出售","你决定将翻新后的房产立即挂牌出售。",u({nextEvent:"property_sale_result"})),c("继续持有","你决定暂时继续持有这处房产，观察市场变化。",u({}))],v({requiredEvents:["property_new_opportunity"]}),!1,f.STORY,1,"/assets/images/events/renovation_results.jpg"),g("property_sale_result","房产出售结果","经过几周的挂牌，你的房产终于找到了买家。买家对房子的状况非常满意，愿意支付一个不错的价格。",[c("接受报价","你决定接受买家的报价，完成房产交易。",u({money:6e4,attributes:{propertyValue:0,businessSkill:2}})),c("继续等待更高报价","你认为房产价值更高，决定拒绝当前报价，继续等待。",u({nextEvent:"property_price_negotiation"}))],v({requiredEvents:["property_renovation_results"]}),!1,f.STORY,1,"/assets/images/events/sale_result.jpg"),g("property_price_negotiation","房价谈判","在拒绝了第一位买家的报价后，又有新买家对你的房产表示了兴趣，双方开始了价格谈判。",[c("坚持要价","你坚持自己的定价，表示这是最终价格。",u({money:Math.random()>.5?65e3:0,attributes:Math.random()>.5?{propertyValue:0,businessSkill:3}:{businessSkill:1}})),c("适当让步","你决定在价格上适当让步，以确保交易成功。",u({money:58e3,attributes:{propertyValue:0,businessSkill:1}}))],v({requiredEvents:["property_sale_result"]}),!1,f.STORY,1,"/assets/images/events/price_negotiation.jpg"),g("property_later_decision","延迟购房决定","在记录了楼盘信息后，你一直在考虑是否应该投资这个项目。最近，你注意到该项目的市场反响很好，销售进展迅速。",[c("现在投资","你决定不再犹豫，立即投资这个项目，尽管价格已经略有上涨。",u({money:-12e3,nextEvent:"property_investment_result"}),e=>e.player.money>=12e3),c("放弃这个项目","你决定放弃这个项目，继续寻找其他投资机会。",u({}))],v({requiredEvents:["property_expo_discover"]}),!1,f.STORY,1,"/assets/images/events/later_decision.jpg"),g("bag_expansion_opportunity","背包扩展机会","你遇到一个旅行用品店，店主正在出售一款特制的高容量背包，看起来很实用。",[c("购买高级背包","你购买了高级背包，现在你可以携带更多物品了。",u({money:-5e3,capacity:20}),e=>e.player.money>=5e3),c("购买普通背包","你购买了一个普通背包，略微增加了携带容量。",u({money:-2e3,capacity:10}),e=>e.player.money>=2e3),c("放弃购买","你决定暂时不购买新背包。",u({}))],v({probability:.8,playerMoney:{min:3e3}}),!1,f.RANDOM,2,"/assets/images/events/bag_expansion.jpg"),g("market_price_surge","奢侈品与收藏品价格飙升","最新财经报道：随着富裕阶层消费回暖，高端商城的奢侈品和地下黑市的稀有收藏品价格大幅上涨，其中尤以名表和古董涨幅最大。",[c("调整投资策略","你仔细分析了价格波动趋势，决定调整你的交易策略，重点关注高端商品。",u({market:{globalPriceModifier:1.05,locationModifiers:{premium_mall:1.15,black_market:1.2},locationProductModifiers:{premium_mall:{401:1.5},black_market:{503:1.6}},duration:2}})),c("前往高端市场","你决定立即前往高端商城和地下黑市，希望能在价格进一步上涨前采购一些潜力商品。",u({forceLocationChange:!0,targetLocation:"premium_mall",market:{locationProductModifiers:{premium_mall:{401:1.3},black_market:{503:1.4}},duration:1}}))],v({probability:.3,minWeek:8}),!0,f.MARKET,1,"/assets/images/events/price_surge.jpg"),g("market_price_drop","市场价格下跌","全球经济出现波动，导致多个市场的商品价格出现下跌趋势。",[c("观察市场","你决定观察市场动向，寻找低价购入的机会。",u({market:{globalPriceModifier:.85,duration:1}}))],v({probability:.7}),!0,f.MARKET,1,"/assets/images/events/price_drop.jpg"),g("property_investment_chance","房产投资机会","你听说一个新兴区域正在开发，现在购买房产可能会有不错的升值空间。",[c("投资房产","你决定投资这个新兴区域的房产项目。",u({money:-3e4,attributes:{housingInvestment:3e4,propertyValue:3e4},nextEvent:"property_investment_result"}),e=>e.player.money>=3e4),c("谨慎观望","你觉得目前时机不成熟，决定继续观望。",u({}))],v({minWeek:10,playerMoney:{min:3e4}}),!1,f.STORY,1,"/assets/images/events/property_investment.jpg"),g("financial_advisor","理财顾问","你遇到了一位专业的理财顾问，他愿意为你提供一些投资建议。",[c("咨询建议","你支付咨询费，获得了一些关于当前市场的专业建议。",u({money:-1e3,market:{productModifiers:{house_a:1.05,house_b:.95,land_a:1.1},duration:604800}}),e=>e.player.money>=1e3),c("委托投资","你决定委托他进行一些小额投资。",u({money:-3e3,nextEvent:"financial_advisor_result"}),e=>e.player.money>=3e3),c("婉拒","你礼貌地拒绝了他的建议。",u({}))],v({probability:.6,minWeek:5}),!0,f.RANDOM,1,"/assets/images/events/financial_advisor.jpg"),g("financial_advisor_result","投资结果","你之前委托理财顾问进行的投资有了结果。",[c("查看结果",Math.random()<.7?"你的投资取得了不错的回报，获得了4000元。":"很遗憾，由于市场波动，你的投资出现了亏损，只收回了2000元。",u({money:Math.random()<.7?4e3:2e3}))],v({requiredEvents:["financial_advisor"]}),!1,f.STORY,1,"/assets/images/events/investment_result.jpg"),g({id:"supply_chain_disruption",title:"全球供应链中断危机",description:"突发新闻：全球贸易遭遇严重供应链中断！各地区不同商品价格出现剧烈波动，部分商品短缺涨价，部分商品积压降价。此次危机预计将对市场产生深远影响。",type:f.MARKET,options:[c("在大宗市场囤积基本物资","你预判到基本生活物资将会短缺，决定前往大宗商品交易所囤积必需品。",{market:{globalPriceModifier:1.05,locationProductModifiers:{commodity_market:{202:1.6,203:1.5,101:1.4},electronics_hub:{301:.7,305:.75},premium_mall:{404:.8}},duration:4},forceLocationChange:!0,targetLocation:"commodity_market"}),c("投资受影响商品","你认为这是投资低价电子产品的好机会，决定前往电子科技城大量购入。",{market:{locationModifiers:{electronics_hub:.85},locationProductModifiers:{electronics_hub:{301:.6,305:.65},commodity_market:{202:1.45,203:1.4}},duration:3},forceLocationChange:!0,targetLocation:"electronics_hub"}),c("寻找黑市稀缺资源","你猜测某些特殊商品可能在黑市变得更加稀缺且价值上升，决定前往地下黑市探索机会。",{market:{locationModifiers:{black_market:1.2},locationProductModifiers:{black_market:{502:1.8,503:1.9},second_hand_market:{107:.7,106:.75}},duration:3},forceLocationChange:!0,targetLocation:"black_market"}),c("保持观望","你决定暂时不介入这次混乱的市场波动，等待形势更加明朗。",{market:{globalPriceModifier:1.02,duration:2}})],conditions:{probability:.15,minWeek:15},repeatable:!1,weight:3}),g({id:"market_contrast_event",title:"城市区域发展不均",description:"最新城市规划调整导致电子科技城获得大量投资和客流，而地下黑市却因管控加强而客流锐减。这种发展不均衡引发了明显的市场差异。",type:f.MARKET,options:[c("分析市场机会","你仔细分析了城市不同区域的发展变化，寻找其中的交易机会。",{market:{locationModifiers:{electronics_hub:.8,black_market:1.4},duration:5}})],conditions:{probability:.2,minWeek:12},repeatable:!0,weight:2})];let Fe=[];const Be=[],Ye=[],st=[],ot=[],nt=[],at=[];function nr(){Be.length>0||or.forEach(e=>{const t=e.options.map(i=>i instanceof ze?i:new ze(i)),r=new qe({...e,options:t,imageUrl:e.imageUrl||(typeof e[8]=="string"?e[8]:null)});switch(r.type){case f.TUTORIAL:Be.push(r);break;case f.RANDOM:Ye.push(r);break;case f.LOCATION:st.push(r);break;case f.MARKET:ot.push(r);break;case f.PERSONAL:nt.push(r);break;case f.STORY:at.push(r);break;default:Ye.push(r)}})}function ar(){if(nr(),Fe.length>0)return Fe;const e=[];return e.push(...Be),e.push(...Ye),e.push(...st),e.push(...ot),e.push(...nt),e.push(...at),e.push(g({id:"location_inflation_electronics_hub",title:"电子科技城芯片短缺",description:"最新消息：电子科技城的主要芯片供应商工厂停产，导致该地区电子产品整体涨价。分析师预计这种情况将持续数周。",type:f.MARKET,options:[c("了解情况","你记下了这个信息，这可能影响你在电子科技城的交易策略。",{market:{locationModifiers:{electronics_hub:1.3},duration:4}})],conditions:{probability:.3,minWeek:5},repeatable:!0,weight:2}),g({id:"premium_mall_luxury_watch_discount",title:"高端商城名表促销",description:"高端商城的名表专柜开始大规模促销活动，所有品牌手表都有特别折扣。这是购买奢侈手表的好机会！",type:f.MARKET,options:[c("记下信息","你记下了这个促销信息，可以考虑去高端商城购买手表。",{market:{locationProductModifiers:{premium_mall:{401:.6}},duration:2}})],conditions:{probability:.3,minWeek:3},repeatable:!0,weight:1}),g({id:"nationwide_paper_shortage",title:"全国性纸张短缺",description:"由于环保政策收紧和原料价格上涨，全国范围内出现纸张短缺现象。大宗商品交易所和二手市场的卫生纸价格飙升，而其他地区受影响较小。",type:f.MARKET,options:[c("分析影响","你分析了这次纸张短缺对各个市场的影响，并调整了你的交易策略。",{market:{locationProductModifiers:{commodity_market:{101:1.7},second_hand_market:{101:1.5}},duration:3}})],conditions:{probability:.25,minWeek:8},repeatable:!0,weight:2}),g({id:"market_contrast_event",title:"城市区域发展不均",description:"最新城市规划调整导致电子科技城获得大量投资和客流，而地下黑市却因管控加强而客流锐减。这种发展不均衡引发了明显的市场差异。",type:f.MARKET,options:[c("分析市场机会","你仔细分析了城市不同区域的发展变化，寻找其中的交易机会。",{market:{locationModifiers:{electronics_hub:.8,black_market:1.4},duration:5}})],conditions:{probability:.2,minWeek:12},repeatable:!0,weight:2}),g({id:"supply_chain_disruption",title:"全球供应链中断危机",description:"突发新闻：全球贸易遭遇严重供应链中断！各地区不同商品价格出现剧烈波动，部分商品短缺涨价，部分商品积压降价。此次危机预计将对市场产生深远影响。",type:f.MARKET,options:[c("在大宗市场囤积基本物资","你预判到基本生活物资将会短缺，决定前往大宗商品交易所囤积必需品。",{market:{globalPriceModifier:1.05,locationProductModifiers:{commodity_market:{202:1.6,203:1.5,101:1.4},electronics_hub:{301:.7,305:.75},premium_mall:{404:.8}},duration:4},forceLocationChange:!0,targetLocation:"commodity_market"}),c("投资受影响商品","你认为这是投资低价电子产品的好机会，决定前往电子科技城大量购入。",{market:{locationModifiers:{electronics_hub:.85},locationProductModifiers:{electronics_hub:{301:.6,305:.65},commodity_market:{202:1.45,203:1.4}},duration:3},forceLocationChange:!0,targetLocation:"electronics_hub"}),c("寻找黑市稀缺资源","你猜测某些特殊商品可能在黑市变得更加稀缺且价值上升，决定前往地下黑市探索机会。",{market:{locationModifiers:{black_market:1.2},locationProductModifiers:{black_market:{502:1.8,503:1.9},second_hand_market:{107:.7,106:.75}},duration:3},forceLocationChange:!0,targetLocation:"black_market"}),c("保持观望","你决定暂时不介入这次混乱的市场波动，等待形势更加明朗。",{market:{globalPriceModifier:1.02,duration:2}})],conditions:{probability:.15,minWeek:15},repeatable:!1,weight:3})),Fe=e,e}class cr{constructor(){this.events={},this.onceEvents={}}on(t,r){return this.events[t]||(this.events[t]=[]),this.events[t].push(r),()=>this.off(t,r)}once(t,r){return this.onceEvents[t]||(this.onceEvents[t]=[]),this.onceEvents[t].push(r),()=>{if(this.onceEvents[t]){const i=this.onceEvents[t].indexOf(r);i!==-1&&this.onceEvents[t].splice(i,1)}}}off(t,r){if(this.events[t]){const i=this.events[t].indexOf(r);i!==-1&&this.events[t].splice(i,1)}}emit(t,r){if(this.events[t]&&this.events[t].forEach(i=>{try{i(r)}catch(o){L(o,`EventEmitter.emit(${t})`,S.SYSTEM,P.WARNING),console.error(`Error in event listener for ${t}:`,o)}}),this.onceEvents[t]){const i=[...this.onceEvents[t]];this.onceEvents[t]=[],i.forEach(o=>{try{o(r)}catch(s){L(s,`EventEmitter.emit.once(${t})`,S.SYSTEM,P.WARNING),console.error(`Error in once event listener for ${t}:`,s)}})}}clear(){this.events={},this.onceEvents={}}clearEvent(t){t&&(this.events[t]=[],this.onceEvents[t]=[])}}const ne=new cr,_e={EASY:"easy",NORMAL:"normal",HARD:"hard"},et={[_e.EASY]:{player:{initialMoney:8e3,initialDebt:1e3,initialCapacity:150,debtInterestRate:.004,debtGracePeriod:4},market:{priceTrendStrength:.8,priceVolatility:.8,specialProductDiscount:.25,trendContinuationChance:.8},events:{positiveEventChance:.7,eventFrequency:.3,earlyGameEventMultiplier:.7,lateGameEventMultiplier:1.1},houses:{housePriceMultipliers:{apartment:.9,house:.9,villa:.85,mansion:.85}},gameGoals:{requiredNetWorth:35e4,targetWeeks:52,debtRatio:.5}},[_e.NORMAL]:{player:{initialMoney:5e3,initialDebt:2e3,initialCapacity:100,debtInterestRate:.005,debtGracePeriod:3},market:{priceTrendStrength:1,priceVolatility:1,specialProductDiscount:.15,trendContinuationChance:.75},events:{positiveEventChance:.5,eventFrequency:.4,earlyGameEventMultiplier:.8,lateGameEventMultiplier:1.2},houses:{housePriceMultipliers:{apartment:1,house:1,villa:1,mansion:1}},gameGoals:{requiredNetWorth:4e5,targetWeeks:52,debtRatio:.4}},[_e.HARD]:{player:{initialMoney:3500,initialDebt:3e3,initialCapacity:80,debtInterestRate:.006,debtGracePeriod:2},market:{priceTrendStrength:1.2,priceVolatility:1.3,specialProductDiscount:.1,trendContinuationChance:.7},events:{positiveEventChance:.4,eventFrequency:.5,earlyGameEventMultiplier:.9,lateGameEventMultiplier:1.3},houses:{housePriceMultipliers:{apartment:1.1,house:1.15,villa:1.2,mansion:1.25}},gameGoals:{requiredNetWorth:45e4,targetWeeks:52,debtRatio:.35}}};function lr(e=_e.NORMAL){return et[e]||et[_e.NORMAL]}function ur(e,t=52){const r=e/t;return r<.2?{phase:"early",eventMultiplier:.8,priceVolatilityMultiplier:.9}:r<.4?{phase:"early_mid",eventMultiplier:.9,priceVolatilityMultiplier:1}:r<.6?{phase:"mid",eventMultiplier:1,priceVolatilityMultiplier:1}:r<.8?{phase:"mid_late",eventMultiplier:1.1,priceVolatilityMultiplier:1.1}:{phase:"late",eventMultiplier:1.2,priceVolatilityMultiplier:1.2}}const ae={EVENT_TRIGGERED:"event:triggered",EVENT_COMPLETED:"event:completed",EVENT_OPTION_SELECTED:"event:option_selected",EVENT_EFFECTS_APPLIED:"event:effects_applied"},he={POSITIVE:"positive",NEGATIVE:"negative",NEUTRAL:"neutral"},Y={EARLY:"early",MID:"mid",LATE:"late"};class dr{constructor(t){this.events=t||[],this.triggeredEvents=new Set,this.activeEvents=[],this.eventHistory=[],this.cooldowns={},this.difficultyLevel="normal"}setDifficulty(t){this.difficultyLevel=t}generateStageAppropriateEvent(t){var w,O,U;console.log("尝试生成阶段适当的事件，当前周数:",t.currentWeek);const{currentWeek:r,maxWeeks:i=52}=t,o=r/i;let s;o<.3?s=Y.EARLY:o<.7?s=Y.MID:s=Y.LATE,console.log("当前游戏阶段:",s,"进度:",o);const n=lr(this.difficultyLevel),a=ur(r,i),l=n.events.eventFrequency*1.8,d=a.eventMultiplier*1.3,h=Math.min(.95,l*d);console.log("事件触发概率计算:",{baseEventChance:l,stageMultiplier:d,finalEventChance:h});const m=Math.random(),p=m<=h;if(console.log(`随机值: ${m}, 是否触发事件: ${p}`),!p)return null;let y=n.events.positiveEventChance;s===Y.EARLY?y*=1.3:s===Y.LATE&&(y*=.8);const k=(w=t.currentLocation)==null?void 0:w.id;if(k){const W=this.eventHistory.filter(V=>{var q,ue;const ee=this.getEventById(V.id);return(ue=(q=ee==null?void 0:ee.conditions)==null?void 0:q.locations)==null?void 0:ue.includes(k)});if(W.length>3){const V=Math.min(.8,Math.pow(.9,W.length-3));eventProbability*=V}}t.player.money<5e3?y*=1.2:t.player.money>1e5&&(y*=.9);let C=1;const N=((O=t.player.attributes)==null?void 0:O.hasHouse)||!1,b=((U=t.player.attributes)==null?void 0:U.propertyValue)||0;!N&&b<1e3&&r>20?C=1.5:(N||b>5e4)&&(C=.7);const M=Math.random()<y?he.POSITIVE:he.NEGATIVE;console.log("事件类型确定:",{positiveChance:y,eventEffectType:M});const I=this.events.filter(W=>this.isEventInCooldown(W.id,r)||W.repeatable===!1&&this.triggeredEvents.has(W.id)||M===he.POSITIVE&&W.effectType===he.NEGATIVE||M===he.NEGATIVE&&W.effectType===he.POSITIVE||W.gameStage&&(W.gameStage===Y.EARLY&&s!==Y.EARLY||W.gameStage===Y.MID&&s!==Y.MID||W.gameStage===Y.LATE&&s!==Y.LATE)||W.id.startsWith("property_")&&Math.random()>C?!1:this.checkEventConditions(W,t));if(console.log(`筛选后的符合条件事件数量: ${I.length}`),I.length===0)return null;const x=this.selectEventByWeight(I,o);return console.log("选择的事件:",x?x.id:"null"),x}checkForEvents(t,r=null){console.log("事件系统 - 检查是否触发事件, 当前周数:",t.currentWeek),console.log("事件系统 - 当前地点:",t.currentLocation?t.currentLocation.id:"未知");let i=.6;t.currentLocation&&t.currentLocation.eventProbability&&(i=t.currentLocation.eventProbability*1.5,console.log(`事件系统 - 当前地点事件触发概率: ${i}`));const o=Math.min(1,(t.currentWeek||1)/52),s=o*.2;i+=s,i=Math.min(.95,i);const n=Math.random();if(console.log(`事件系统 - 事件随机检定: ${n.toFixed(2)} vs ${i.toFixed(2)} (触发阈值)`),r){const l=this.getEligibleEvents(t,r);if(console.log(`事件系统 - 找到 ${l.length} 个符合条件的 ${r} 类型事件`),l.length===0)return null;const d=this.selectEventByWeight(l,o);return d&&(console.log("事件系统 - 已选择事件:",d.id,d.title),this.recordEvent(d.id,t.currentWeek),ne.emit(ae.EVENT_TRIGGERED,{event:d,week:t.currentWeek})),d}let a;if(n<i&&this.events.length>0){const l=this.getEligibleEvents(t);if(console.log(`事件系统 - 找到 ${l.length} 个符合条件的事件`),l.length>0)a=this.selectEventByWeight(l,o),console.log("事件系统 - 选择事件:",a?a.id:"无");else return console.log("事件系统 - 没有找到符合条件的事件"),null}else return console.log("事件系统 - 随机检定未通过，本周不触发事件"),null;return a?(console.log("事件系统 - 生成事件成功:",a.id,a.title),this.recordEvent(a.id,t.currentWeek),ne.emit(ae.EVENT_TRIGGERED,{event:a,week:t.currentWeek})):console.log("事件系统 - 没有生成事件"),a}getEligibleEvents(t,r=null){return this.events.filter(i=>r&&i.type!==r||this.isEventInCooldown(i.id,t.currentWeek)||i.repeatable===!1&&this.triggeredEvents.has(i.id)||this.eventHistory.filter(s=>s.id===i.id&&t.currentWeek-s.week<=10).length>=2&&Math.random()>.3?!1:this.checkEventConditions(i,t))}checkEventConditions(t,r){var o;const i=t.conditions||{};if(i.minWeek&&r.currentWeek<i.minWeek||i.maxWeek&&r.currentWeek>i.maxWeek||i.locations&&r.currentLocation&&!i.locations.includes(r.currentLocation.id))return!1;if(i.playerMoney){const{min:s,max:n}=i.playerMoney;if(s!==void 0&&r.player.money<s||n!==void 0&&r.player.money>n)return!1}if(i.playerDebt){const{min:s,max:n}=i.playerDebt;if(s!==void 0&&r.player.debt<s||n!==void 0&&r.player.debt>n)return!1}if(i.inventoryItems)for(const s of i.inventoryItems){const n=r.player.inventory.find(l=>l.productId===s.productId),a=n?n.quantity:0;if(s.minQuantity!==void 0&&a<s.minQuantity||s.maxQuantity!==void 0&&a>s.maxQuantity)return!1}if(i.attributes)for(const[s,{min:n,max:a}]of Object.entries(i.attributes)){const l=((o=r.player.attributes)==null?void 0:o[s])||0;if(n!==void 0&&l<n||a!==void 0&&l>a)return!1}if(i.requiredEvents){for(const s of i.requiredEvents)if(!this.triggeredEvents.has(s))return!1}if(i.excludedEvents){for(const s of i.excludedEvents)if(this.triggeredEvents.has(s))return!1}if(i.customCondition&&!i.customCondition(r))return!1;if(i.probability!==void 0){let s=i.probability;if(this.triggeredEvents.has(t.id)||(s=Math.min(.95,s*1.5)),Math.random()>s)return!1}return!0}isEventInCooldown(t,r){return this.cooldowns[t]?this.cooldowns[t]>r:!1}setEventCooldown(t,r,i=5){this.cooldowns[t]=r+i}recordEvent(t,r){this.triggeredEvents.add(t),this.eventHistory.push({id:t,week:r,timestamp:new Date().toISOString()});const i=this.getEventById(t);let o;switch(i==null?void 0:i.type){case f.PERSONAL:o=6;break;case f.MARKET:o=3;break;case f.LOCATION:o=2;break;default:o=4}i&&!i.repeatable&&(o=999),this.setEventCooldown(t,r,o)}selectEventByWeight(t,r=.5){if(!t||t.length===0)return null;let i=0;const o=t.map(n=>{let a=n.weight||1;if(n.type===f.STORY?a*=1.2:n.type===f.MARKET&&(a*=1.1),n.id.startsWith("property_")&&r>.4&&(a*=1+r),n.options&&n.options.some(d=>d.effects&&d.effects.nextEvent)&&(a*=1.3),n.id==="meet_mucs")return 0;this.triggeredEvents.has(n.id)?a*=.2:a*=2;const l=this.eventHistory.filter(d=>d.id===n.id).length;if(l>0){if(!n.repeatable)return 0;const m=Math.max(.2,Math.pow(.5,l));a*=m}return console.log(`事件权重计算 - ${n.id}: ${a.toFixed(2)}`),i+=a,a});if(i<=0)return null;let s=Math.random()*i;for(let n=0;n<t.length;n++)if(s-=o[n],s<=0)return t[n];return t[0]}getEventById(t){const r=this.events.find(i=>i.id===t);return r?this.prepareEvent(r):null}triggerSpecificEvent(t,r){const i=this.getEventById(t);return i?(this.recordEvent(t,r.currentWeek),ne.emit(ae.EVENT_TRIGGERED,{event:i,week:r.currentWeek,isSpecific:!0}),i):null}prepareEvent(t){if(!t)return null;const r={...t};return r.options&&(r.options=r.options.map(i=>(typeof i.text=="function"?i.displayText=i.text():i.displayText=i.text,i))),r}updateActiveEvents(){this.activeEvents=this.activeEvents.filter(r=>!r.expired);const t=Date.now();return this.activeEvents.forEach(r=>{r.expiryTime&&t>r.expiryTime&&(r.expired=!0)}),this.activeEvents}getActiveMarketModifiers(){this.updateActiveEvents();const t={globalPriceModifier:1,categoryModifiers:{},productModifiers:{},specialProducts:[]};return this.activeEvents.forEach(r=>{r.expired||(r.globalPriceModifier&&(t.globalPriceModifier*=r.globalPriceModifier),r.categoryModifiers&&Object.entries(r.categoryModifiers).forEach(([i,o])=>{t.categoryModifiers[i]=(t.categoryModifiers[i]||1)*o}),r.productModifiers&&Object.entries(r.productModifiers).forEach(([i,o])=>{t.productModifiers[i]=(t.productModifiers[i]||1)*o}),r.specialProducts&&(t.specialProducts=[...t.specialProducts,...r.specialProducts]))}),t}applyEventEffects(t,r){var o;const i={appliedEffects:[],failedEffects:[]};if(console.log("应用事件效果:",r),r.money!==void 0){const s=r.money;s>0?(t.player.money+=s,i.appliedEffects.push({type:"money",value:s,success:!0})):s<0&&(t.player.money+s<0?(console.warn("EventSystem - 金钱不足，无法扣款",{required:Math.abs(s),available:t.player.money}),i.failedEffects.push({type:"money",value:s,reason:"insufficient_funds"})):(t.player.money+=s,i.appliedEffects.push({type:"money",value:s,success:!0})))}if(r.debt!==void 0){const s=r.debt;if(s>0)t.player.debt+=s,i.appliedEffects.push({type:"debt",value:s,success:!0});else if(s<0){const n=Math.min(t.player.debt,Math.abs(s));t.player.debt-=n,i.appliedEffects.push({type:"debt",value:-n,success:!0})}}if(r.items&&r.items.forEach(s=>{if(s.quantity>0){const n=t.products.find(a=>a.id===s.productId);if(n){const a=n.size*s.quantity;if(t.player.inventoryUsed+a<=t.player.capacity){const l=t.player.inventory.find(d=>d.productId===s.productId&&d.purchasePrice===(s.price||0));l?l.quantity+=s.quantity:t.player.inventory.push({productId:s.productId,name:n.name,quantity:s.quantity,purchasePrice:s.price||0,size:n.size}),t.player.inventoryUsed+=a,i.appliedEffects.push({type:"item_add",productId:s.productId,quantity:s.quantity,success:!0})}else i.failedEffects.push({type:"item_add",productId:s.productId,quantity:s.quantity,reason:"inventory_full"})}else i.failedEffects.push({type:"item_add",productId:s.productId,quantity:s.quantity,reason:"product_not_found"})}else if(s.quantity<0){const n=t.player.inventory.find(a=>a.productId===s.productId);if(n&&n.quantity>=Math.abs(s.quantity)){const a=Math.abs(s.quantity),l=n.size*a;if(n.quantity-=a,t.player.inventoryUsed-=l,n.quantity<=0){const d=t.player.inventory.indexOf(n);t.player.inventory.splice(d,1)}i.appliedEffects.push({type:"item_remove",productId:s.productId,quantity:a,success:!0})}else i.failedEffects.push({type:"item_remove",productId:s.productId,quantity:Math.abs(s.quantity),reason:"insufficient_items"})}}),r.capacity&&(t.player.capacity+=r.capacity,i.appliedEffects.push({type:"capacity",value:r.capacity,success:!0})),r.attributes&&Object.keys(r.attributes).length>0){t.player.attributes||(t.player.attributes={});for(const[s,n]of Object.entries(r.attributes)){const a=t.player.attributes[s]||0;t.player.attributes[s]=n,i.appliedEffects.push({type:"attribute",attribute:s,oldValue:a,newValue:n,success:!0})}}if(r.market){const s={...r.market,startTime:Date.now(),expiryTime:r.market.duration?Date.now()+r.market.duration*7*24*60*60*1e3:Date.now()+12096e5,expired:!1};if(this.activeEvents.push(s),t.market&&t.market.productPrices){if(s.globalPriceModifier){console.log(`应用全局价格修正: ${s.globalPriceModifier}`);for(const[n,a]of Object.entries(t.market.productPrices))t.market.productPrices[n]*=s.globalPriceModifier}if(s.categoryModifiers)for(const[n,a]of Object.entries(s.categoryModifiers)){console.log(`应用类别 ${n} 价格修正: ${a}`);const l=((o=t.products)==null?void 0:o.filter(d=>d.category===n))||[];for(const d of l)t.market.productPrices[d.id]&&(t.market.productPrices[d.id]*=a)}if(s.productModifiers)for(const[n,a]of Object.entries(s.productModifiers))console.log(`应用产品 ${n} 价格修正: ${a}`),t.market.productPrices[n]&&(t.market.productPrices[n]*=a)}i.appliedEffects.some(n=>n.type==="market")||i.appliedEffects.push({type:"market",effect:{globalPriceModifier:s.globalPriceModifier,categoryModifiers:s.categoryModifiers,productModifiers:s.productModifiers,locationModifiers:s.locationModifiers,locationProductModifiers:s.locationProductModifiers,duration:s.duration},success:!0})}return r.nextEvent&&i.appliedEffects.push({type:"next_event",eventId:r.nextEvent,success:!0}),r.locationChange&&i.appliedEffects.push({type:"location_change",locationId:r.locationChange,success:!0}),ne.emit(ae.EVENT_EFFECTS_APPLIED,{effects:i.appliedEffects,failedEffects:i.failedEffects}),i}reset(){this.triggeredEvents.clear(),this.activeEvents=[],this.eventHistory=[],this.cooldowns={}}getSaveState(){return{triggeredEvents:Array.from(this.triggeredEvents),activeEvents:this.activeEvents,eventHistory:this.eventHistory,cooldowns:this.cooldowns}}loadFromSaveState(t){t&&(this.triggeredEvents=new Set(t.triggeredEvents||[]),this.activeEvents=t.activeEvents||[],this.eventHistory=t.eventHistory||[],this.cooldowns=t.cooldowns||{})}}const Z=ce("event",{state:()=>({activeEvents:[],activeEvent:null,forceLocationChange:!1,targetLocation:null,nextEventId:null,triggeredEvents:[],eventSystem:null}),actions:{initializeEvents(){return console.log("EventStore - 初始化事件系统"),new Promise(e=>{setTimeout(()=>{this.initEventSystem(),console.log("EventStore - 事件系统初始化完成"),e()},300)})},initEventSystem(){this.eventSystem=new dr(ar()),this.activeEvents=[],this.activeEvent=null,this.forceLocationChange=!1,this.targetLocation=null,this.nextEventId=null,this.triggeredEvents=[],this.setupEventListeners()},setupEventListeners(){ne.on(ae.EVENT_TRIGGERED,e=>{this.activeEvent=e.event}),ne.on(ae.EVENT_COMPLETED,e=>{this.activeEvent=null,e.nextEventId&&(this.nextEventId=e.nextEventId)}),ne.on(ae.EVENT_EFFECTS_APPLIED,e=>{const t=e.effects.find(i=>i.type==="location_change");t&&(this.forceLocationChange=!0,this.targetLocation=t.locationId);const r=e.effects.find(i=>i.type==="next_event");r&&(this.nextEventId=r.eventId)})},resetEvents(){this.eventSystem?this.eventSystem.reset():this.initEventSystem(),this.activeEvents=[],this.activeEvent=null,this.forceLocationChange=!1,this.targetLocation=null,this.nextEventId=null,this.triggeredEvents=[]},generateRandomEvent(e,t,r){if(console.log("EventStore - 尝试生成随机事件, 当前周数:",e),this.activeEvent!==null)return console.log("EventStore - 已有待处理事件，跳过生成:",this.activeEvent.id),null;if(this.nextEventId){console.log("EventStore - 检测到预设的下一个事件:",this.nextEventId);const i=this.eventSystem.getEventById(this.nextEventId);if(this.nextEventId=null,i)return console.log("EventStore - 触发预设事件:",i.id,i.title),this.triggeredEvents.push({id:i.id,week:e}),this.activeEvent=i,i}console.log("EventStore - 创建游戏状态对象"),console.log("EventStore - playerData:",t?"已提供":"未提供"),console.log("EventStore - marketData:",r?"已提供":"未提供");try{const i={currentWeek:e,player:t,market:r,currentLocation:r.currentLocation};if(console.log("EventStore - 游戏状态对象创建成功"),console.log("EventStore - 当前地点:",i.currentLocation?i.currentLocation.id:"未知"),Math.random()<.15){console.log("EventStore - 尝试触发彩蛋事件");const l=this.eventSystem.getEventById("meet_mucs");if(l&&this.eventSystem.checkEventConditions(l,i))return console.log("EventStore - 成功触发彩蛋事件:",l.id,l.title),this.triggeredEvents.push({id:l.id,week:e}),this.activeEvent=l,l}const n=Math.min(.3,e*.01);console.log("EventStore - 调用事件系统检查事件，额外概率:",n);let a=this.eventSystem.checkForEvents(i);return!a&&Math.random()<n&&(console.log("EventStore - 应用额外概率，强制尝试生成事件"),a=this.eventSystem.generateStageAppropriateEvent(i)),a?(console.log("EventStore - 成功生成事件:",a.id,a.title),this.triggeredEvents.push({id:a.id,week:e}),this.activeEvent=a,a):(console.log("EventStore - 没有生成事件"),null)}catch(i){return L(i,"EventState.generateRandomEvent",S.GAME_LOGIC,P.ERROR),console.error("EventStore - 生成随机事件时出错:",i),null}},triggerSpecificEvent(e,t,r){const i={currentWeek:t.statistics.weekCount,player:t,market:r,currentLocation:r.currentLocation},o=this.eventSystem.triggerSpecificEvent(e,i);return o?(this.triggeredEvents.push({id:o.id,week:t.statistics.weekCount}),o):null},triggerTutorialEvent(e){const t=e.startsWith("tutorial_")?e:`tutorial_${e}`,r=this.eventSystem.getEventById(t);return r?(this.activeEvent=r,r):null},triggerEvent(e){var t;try{if(e.startsWith("tutorial_"))return!!this.triggerTutorialEvent(e);{const r=(t=this.eventSystem)==null?void 0:t.getEventById(e);if(r)return this.activeEvent=r,!0}return!1}catch(r){return L(r,"EventState.triggerEvent",S.GAME_LOGIC,P.WARNING),console.error("触发事件失败:",r),!1}},handleEventOption(e,t,r){if(!this.activeEvent||!e)return{success:!1,message:"无效的事件或选项",appliedEffects:[]};console.log("EventState - 处理事件选项:",e),console.log("EventState - 当前事件:",this.activeEvent.id);const i={currentWeek:t.statistics.weekCount,player:t,market:r,currentLocation:r.currentLocation,products:r.products};let o;try{o=this.eventSystem.applyEventEffects(i,e.effects),console.log("EventState - 事件效果应用结果:",o)}catch(n){console.error("EventState - 应用事件效果时出错:",n),L(n,"EventState.handleEventOption",S.GAME_LOGIC,P.ERROR),o={success:!1,message:"应用事件效果时出错",appliedEffects:[]}}const s=o||{success:!0,appliedEffects:[]};if(typeof s.success>"u"&&(s.success=!0),s.appliedEffects||(s.appliedEffects=[]),e.effects&&e.effects.nextEvent&&(this.nextEventId=e.effects.nextEvent,console.log("EventState - 设置下一个事件:",this.nextEventId)),e.effects&&e.effects.forceLocationChange&&(this.forceLocationChange=!0,this.targetLocation=e.effects.targetLocation,console.log("EventState - 设置强制地点变更:",this.targetLocation)),e.effects&&e.effects.capacity&&e.effects.capacity>0&&(console.log("EventState - 背包容量增加:",e.effects.capacity),t.capacity+=e.effects.capacity,s.appliedEffects.some(n=>n.type==="capacity")||s.appliedEffects.push({type:"capacity",value:e.effects.capacity,success:!0})),e.effects&&e.effects.attributes){console.log("EventState - 玩家属性变化:",e.effects.attributes),t.attributes||(t.attributes={});for(const[n,a]of Object.entries(e.effects.attributes)){const l=t.attributes[n];t.attributes[n]=a,s.appliedEffects.push({type:"attribute",attribute:n,oldValue:l,newValue:a,success:!0})}}return r&&s.appliedEffects&&s.appliedEffects.filter(a=>a.type==="market").length>0&&(console.log("EventState - 应用市场效果到市场数据"),typeof r.calculateAllPrices=="function"?r.calculateAllPrices():typeof r.updatePrices=="function"&&r.updatePrices()),ne.emit(ae.EVENT_COMPLETED,{eventId:this.activeEvent.id,optionId:e.id,nextEventId:this.nextEventId,effects:s.appliedEffects}),this.activeEvent=null,s},getActiveMarketModifiers(){return this.eventSystem?this.eventSystem.getActiveMarketModifiers():{}},clearForceLocationChange(){this.forceLocationChange=!1,this.targetLocation=null},clearNextEvent(){this.nextEventId=null}},getters:{currentEvent(e){return e.activeEvent},needsLocationChange(e){return e.forceLocationChange},targetLocationId(e){return e.targetLocation},eventStatistics(e){if(!e.eventSystem)return{total:0,byType:{}};const t=e.triggeredEvents.length,r={};return e.triggeredEvents.forEach(i=>{const o=e.eventSystem.getEventById(i.id);if(o){const s=o.type||"unknown";r[s]=(r[s]||0)+1}}),{total:t,byType:r}}}}),Lr=()=>{const e=Z(),t=H(),r=B(),i=m=>{const p={money:t.money,debt:t.debt,inventory:t.inventory,statistics:t.statistics,purchasedHouses:t.purchasedHouses},y={marketModifiers:r.marketModifiers,currentLocation:r.currentLocation?r.currentLocation.id:null,productPrices:r.productPrices};return e.generateRandomEvent(m,p,y)},o=m=>{const p=e.currentEvent;if(!p)return{success:!1,message:"没有活跃事件"};let y=m;if(typeof m=="number"){if(m<0||m>=p.options.length)return{success:!1,message:"无效的选项索引"};y=p.options[m]}if(!y)return console.warn("EventActions - 无法处理空选项"),{success:!1,message:"无效的选项"};try{console.log("EventActions - 处理选项:",y);const k=y.effects||{},C=t,N=r,b={money:t.money,debt:t.debt,capacity:t.capacity,inventoryUsed:t.inventoryUsed,inventoryCount:t.inventory.length};console.log("EventActions - 处理选项前状态:",b);const M=e.handleEventOption(y,C,N),I={money:t.money,debt:t.debt,capacity:t.capacity,inventoryUsed:t.inventoryUsed,inventoryCount:t.inventory.length};console.log("EventActions - 处理选项后状态:",I);const x={money:I.money-b.money,debt:I.debt-b.debt,capacity:I.capacity-b.capacity,inventoryUsed:I.inventoryUsed-b.inventoryUsed,inventoryCount:I.inventoryCount-b.inventoryCount};console.log("EventActions - 状态变化:",x);const w=M||{success:!0};if(w.success!==!1){if(w.success=!0,w.appliedEffects||(w.appliedEffects=[]),x.money!==0&&!w.appliedEffects.some(O=>O.type==="money")&&w.appliedEffects.push({type:"money",value:x.money,success:!0}),x.debt!==0&&!w.appliedEffects.some(O=>O.type==="debt")&&w.appliedEffects.push({type:"debt",value:x.debt,success:!0}),x.capacity!==0&&!w.appliedEffects.some(O=>O.type==="capacity")&&w.appliedEffects.push({type:"capacity",value:x.capacity,success:!0}),k.market&&!w.appliedEffects.some(O=>O.type==="market")){const O={type:"market",effect:{...k.market},success:!0};(k.market.globalPriceModifier||k.market.categoryModifiers||k.market.productModifiers||k.market.locationModifiers||k.market.locationProductModifiers)&&w.appliedEffects.push(O)}if(w.effects&&w.effects.locationChanged&&e.needsLocationChange){const O=e.targetLocationId;O&&(r.changeLocation(O),e.clearForceLocationChange(),w.appliedEffects.push({type:"info",description:`已前往${s(O)}`,success:!0}))}w.appliedEffects.length===0&&w.appliedEffects.push({type:"info",description:"选项已执行，但没有产生直接效果",success:!0})}return w}catch(k){return console.error("EventActions - 处理选项出错:",k),{success:!1,message:"处理选项时出错: "+(k.message||"未知错误"),appliedEffects:[{type:"error",description:"处理选项失败: "+(k.message||"未知错误"),success:!1}]}}},s=m=>({commodity_market:"大宗商品市场",second_hand_market:"二手市场",premium_mall:"高端商场",electronics_hub:"电子产品中心",black_market:"黑市"})[m]||m;return{generateRandomEvent:i,handleEventOption:o,triggerSpecificEvent:m=>{const p={money:t.money,debt:t.debt,inventory:t.inventory,statistics:t.statistics,purchasedHouses:t.purchasedHouses},y={marketModifiers:r.marketModifiers,currentLocation:r.currentLocation?r.currentLocation.id:null,productPrices:r.productPrices};return e.triggerSpecificEvent(m,p,y)},triggerTutorialEvent:m=>e.triggerTutorialEvent(m),getCurrentEvent:()=>e.currentEvent,hasPendingEvent:()=>e.currentEvent!==null,getEventStatistics:()=>e.eventStatistics}},K=ce("gameCore",{state:()=>({currentWeek:1,maxWeeks:52,gameStarted:!1,gamePaused:!1,gameOver:!1,victoryAchieved:!1,gameResult:null,notifications:[],initialized:!1,gameGoals:{requiredNetWorth:4e5,targetWeeks:30}}),actions:{async startNewGame(e){console.log("GameCore - 开始新游戏:",e),this.currentWeek=1,this.gameStarted=!0,this.gamePaused=!1,this.gameOver=!1,this.victoryAchieved=!1,this.gameResult=null;try{const t=H(),r=B(),i=Z();await t.initializePlayer(e),!t.name&&e&&(t.name=e),r.initializeMarket().then(()=>{r.updateLocationProducts(),console.log("GameCore - 市场商品已更新")}),i.resetEvents(),localStorage.setItem("lastPlayerName",e),console.log("GameCore - 游戏初始化完成")}catch(t){throw L(t,"gameState (gameCore)",S.UNKNOWN,P.ERROR),console.error("GameCore - 初始化游戏模块时出错:",t),t}},advanceWeek(){if(this.currentWeek<=this.maxWeeks&&!this.gameOver){this.currentWeek++,console.log(`GameCore - 进入第 ${this.currentWeek} 周`);const e=H(),t=B(),r=Z();console.log("GameCore - 更新玩家状态"),e.updateWeeklyPlayerState(this.currentWeek),console.log("GameCore - 更新市场状态"),t.updateMarketState(this.currentWeek),console.log("GameCore - 准备生成随机事件");const i={money:e.money,debt:e.debt,inventory:e.inventory,statistics:e.statistics,purchasedHouses:e.purchasedHouses,name:e.name,capacity:e.capacity,inventoryUsed:e.inventoryUsed};console.log("GameCore - 已准备玩家数据:",{money:i.money,debt:i.debt,inventoryCount:i.inventory.length});const o={marketModifiers:t.marketModifiers,currentLocation:t.currentLocation,productPrices:t.productPrices,products:t.products,locations:t.locations};console.log("GameCore - 已准备市场数据:",{currentLocationId:o.currentLocation?o.currentLocation.id:"未设置",productCount:o.products.length,locationCount:o.locations.length}),console.log("GameCore - 调用事件生成函数");let s=r.generateRandomEvent(this.currentWeek,i,o);return!s&&this.currentWeek%3===0&&(console.log("GameCore - 第一次未生成事件，尝试第二次生成"),s=r.generateRandomEvent(this.currentWeek,i,o)),s?(console.log("GameCore - 成功生成随机事件:",s.id,s.title),r.activeEvents.includes(s)||(r.activeEvents.push(s),console.log("GameCore - 事件已加入活跃队列, 当前队列长度:",r.activeEvents.length))):console.log("GameCore - 本周未触发事件"),this.checkGameEnd(),!0}else{if(this.maxWeeks===52&&this.currentWeek>this.maxWeeks)this.gameOver=!0;else{this.currentWeek++;const e=H(),t=B(),r=Z();e.updateWeeklyPlayerState(this.currentWeek),t.updateMarketState(this.currentWeek);const i={money:e.money,debt:e.debt,inventory:e.inventory,statistics:e.statistics,purchasedHouses:e.purchasedHouses,name:e.name,capacity:e.capacity,inventoryUsed:e.inventoryUsed},o={marketModifiers:t.marketModifiers,currentLocation:t.currentLocation,productPrices:t.productPrices,products:t.products,locations:t.locations};let s=r.generateRandomEvent(this.currentWeek,i,o);return!s&&this.currentWeek%3===0&&(s=r.generateRandomEvent(this.currentWeek,i,o)),s&&(r.activeEvents.includes(s)||r.activeEvents.push(s)),this.checkGameEnd(),!0}return!1}},hasAffordableProducts(e=!0){const t=H(),r=B(),i=e?t.money+t.bankDeposit:t.money;if(t.inventoryUsed>0)return!0;for(const o of r.locations){const s=r.getLocationAvailableProducts(o);for(const n of s){if(!r.products.find(d=>d.id===n))continue;if(r.getCurrentProductPrice(n)<=i)return!0}}return!1},checkGameEnd(){if(this.gameOver)return;if(this.currentWeek>this.maxWeeks){this.endGameWithTimeLimit();return}const t=H().netWorth;if(t>=1e6&&!this.victoryAchieved){this.achieveVictory();return}if(this.currentWeek>1&&t<0&&!this.hasAffordableProducts(!0)){this.endGame("bankruptcy");return}},endGameWithTimeLimit(){var r,i,o,s,n,a,l;const e=H(),t=e.purchasedHouses&&e.purchasedHouses.length>0;if(console.log("游戏时间限制达到 - endGameWithTimeLimit",{victoryAchieved:this.victoryAchieved,hasHouses:t,purchasedHouses:(r=e.purchasedHouses)==null?void 0:r.length,netWorth:e.netWorth}),this.victoryAchieved||t){const d=this.calculateGameScore("victoryTimeLimit"),h=this.calculateRank(d),m=this.calculateScoreDetails("victoryTimeLimit");if(console.log("时间限制胜利 - 直接计算得分",{finalScore:d,rank:h}),this.gameResult={reason:"victoryTimeLimit",week:this.currentWeek,weeksPassed:this.currentWeek,score:d,achievementName:null,victoryAchieved:!0,firstVictoryWeek:((i=this.gameResult)==null?void 0:i.firstVictoryWeek)||this.currentWeek,firstVictoryHouse:((o=this.gameResult)==null?void 0:o.firstVictoryHouse)||null,finalMoney:e.money,finalAssets:e.netWorth,debt:e.debt,tradeStats:{totalTrades:((s=e.statistics)==null?void 0:s.transactionCount)||0,totalProfit:((n=e.statistics)==null?void 0:n.totalProfit)||0,averageProfit:((a=e.statistics)==null?void 0:a.transactionCount)>0?(((l=e.statistics)==null?void 0:l.totalProfit)||0)/e.statistics.transactionCount:0},scoreDetails:{score:d,rank:h,details:m},endReason:"victoryTimeLimit"},this.gameOver=!0,e.purchasedHouses.length>0){this.gameResult.allPurchasedHouses=e.purchasedHouses,this.gameResult.houseCount=e.purchasedHouses.length;let p=e.purchasedHouses[0],y=e.purchasedHouses[0];e.purchasedHouses.forEach(k=>{k.purchasePrice>p.purchasePrice&&(p=k),(k.level>y.level||k.level===y.level&&k.purchasePrice>y.purchasePrice)&&(y=k)}),this.gameResult.mostExpensiveHouse=p,this.gameResult.highestLevelHouse=y}console.log("时间限制胜利 - 游戏结果对象已创建",{score:this.gameResult.score,scoreDetails:this.gameResult.scoreDetails})}else this.endGame("timeLimit")},achieveVictory(){const e=H();this.gameResult={reason:"victory",week:this.currentWeek,score:this.calculateGameScore("victory"),continuedPlay:!0,firstVictoryWeek:this.currentWeek,firstVictoryHouse:e.mostExpensiveHouse},e.addMoney(5e4),this.addNotification("reward","作为购买豪宅的奖励，您获得了额外的50,000元！")},achieveVictoryWithHouse(e){var a,l,d,h;this.victoryAchieved=!0;const t=H();console.log("购房胜利 - 开始计算结果",{houseCount:t.purchasedHouses.length,netWorth:t.netWorth}),e&&(e.image?e.image.startsWith("./")?e.image=e.image.replace("./","/"):e.image.startsWith("/")||(e.image=`/${e.image}`):e.image="/resources/assets/images/house_1.jpeg"),t.purchasedHouses.some(m=>m.houseId===e.id||m.id===e.id)||console.warn("房屋购买记录不一致，这种情况不应该出现");const i=this.calculateGameScore("houseVictory"),o=this.calculateRank(i),s=this.calculateScoreDetails("houseVictory");console.log("购房胜利 - 计算得分结果",{finalScore:i,scoreRank:o,details:s});const n={...e};(!n.image||n.image.includes("NaN"))&&(console.warn("房屋图片路径无效，使用默认值"),n.image="/resources/assets/images/house_1.jpeg"),this.gameResult={reason:"houseVictory",week:this.currentWeek,weeksPassed:this.currentWeek,score:i,victoryAchieved:!0,firstVictoryWeek:this.currentWeek,firstVictoryHouse:n,canContinue:!0,finalMoney:t.money,finalAssets:t.netWorth,debt:t.debt,purchasedHouse:n,tradeStats:{totalTrades:((a=t.statistics)==null?void 0:a.transactionCount)||0,totalProfit:((l=t.statistics)==null?void 0:l.totalProfit)||0,averageProfit:((d=t.statistics)==null?void 0:d.transactionCount)>0?(((h=t.statistics)==null?void 0:h.totalProfit)||0)/t.statistics.transactionCount:0},scoreDetails:{score:i,rank:o,details:s},endReason:"houseVictory"},this.gameOver=!0,console.log("购房胜利 - 游戏结果对象创建完成",{score:this.gameResult.score,scoreDetails:this.gameResult.scoreDetails})},continueGame(){this.gameOver=!1,this.victoryAchieved=!0},endGame(e,t=null){var n,a,l,d,h,m,p,y;this.gameOver=!0,this.victoryAchieved&&e!=="victory"&&e!=="victoryTimeLimit"&&(e="victoryOther");const r=H();console.log("游戏结束 - endGame",{reason:e,week:this.currentWeek,netWorth:r.netWorth,houseCount:((n=r.purchasedHouses)==null?void 0:n.length)||0});const i=this.calculateGameScore(e),o=this.calculateRank(i),s=this.calculateScoreDetails(e);console.log("endGame得分计算完成",{score:i,rank:o,details:s}),this.gameResult={reason:e,week:this.currentWeek,weeksPassed:this.currentWeek,score:i,achievementName:t,victoryAchieved:this.victoryAchieved,firstVictoryWeek:((a=this.gameResult)==null?void 0:a.firstVictoryWeek)||null,firstVictoryHouse:((l=this.gameResult)==null?void 0:l.firstVictoryHouse)||null,finalMoney:r.money,finalAssets:r.netWorth,debt:r.debt,tradeStats:{totalTrades:((d=r.statistics)==null?void 0:d.transactionCount)||0,totalProfit:((h=r.statistics)==null?void 0:h.totalProfit)||0,averageProfit:((m=r.statistics)==null?void 0:m.transactionCount)>0?(((p=r.statistics)==null?void 0:p.totalProfit)||0)/r.statistics.transactionCount:0},scoreDetails:{score:i,rank:o,details:s},endReason:e,data:{debt:r.debt,firstVictoryWeek:((y=this.gameResult)==null?void 0:y.firstVictoryWeek)||this.currentWeek}},console.log("游戏结果对象已创建",{score:this.gameResult.score,scoreInDetails:this.gameResult.scoreDetails.score})},calculateGameScore(e){var r,i;const t=H();try{console.log("计算游戏得分 - 原始数据",{netWorth:t.netWorth,money:t.money,debt:t.debt,week:this.currentWeek,endReason:e,purchasedHouses:((r=t.purchasedHouses)==null?void 0:r.length)||0});let o=t.netWorth;(isNaN(o)||o===void 0)&&(console.warn("计算游戏得分 - 净资产无效，使用备用计算"),o=(t.money||0)-(t.debt||0)),o=Math.max(1e3,o);const s=o/1e3;let n=1;switch(e){case"victory":case"houseVictory":n=1.5;break;case"victoryTimeLimit":n=2;break;case"bankruptcy":n=.5;break;case"achievement":n=1.2;break;default:n=1;break}let a=1;if(e.includes("victory")){const p=Math.max(1,this.currentWeek);a=Math.max(.5,1+10/p)}let d=1;const h=((i=t.purchasedHouses)==null?void 0:i.length)||0;h>0&&(d=1+h*.2);let m=s*n*a*d;return m=Math.max(1,Math.floor(m)),console.log("计算游戏得分 - 最终结果",{baseScore:s,multiplier:n,speedMultiplier:a,houseBonus:d,totalScore:m}),m}catch(o){return console.error("计算游戏得分时发生错误:",o),Math.max(1,Math.floor(t.netWorth/1e3))}},calculateRank(e){return e>=1e6?"S":e>=5e5?"A":e>=2e5?"B":e>=1e5?"C":"D"},calculateScoreDetails(e){var t,r,i;try{const o=H();console.log("计算得分明细 - 开始",{endReason:e,playerNetWorth:o.netWorth});let s=0;try{s=Math.max(0,Math.floor(o.netWorth/800)),console.log("资产得分计算",{netWorth:o.netWorth,assetsScore:s})}catch(m){console.error("资产得分计算错误:",m),s=100}let n=0;try{if(e.includes("victory")){const m=Math.max(1,this.currentWeek);n=Math.round(5e5/m),console.log("时间效率得分计算",{week:m,timeScore:n})}}catch(m){console.error("时间效率得分计算错误:",m),n=50}let a=0;try{if(o.purchasedHouses&&o.purchasedHouses.length>0){let m=0;o.purchasedHouses.forEach(p=>{const y=p.purchasePrice||p.price||0;m+=y}),a=Math.floor(m/5e3),o.purchasedHouses.length>1&&(a*=1+(o.purchasedHouses.length-1)*.2),console.log("房产得分计算",{houseCount:o.purchasedHouses.length,totalHouseValue:m,houseScore:a})}}catch(m){console.error("房产得分计算错误:",m),a=100}let l=0;try{const m=((t=o.statistics)==null?void 0:t.totalProfit)||0,p=((r=o.statistics)==null?void 0:r.transactionCount)||0;p>0&&(l=Math.floor(m/1e3),p>10&&(l*=1+(p-10)*.02)),console.log("交易得分计算",{tradeCount:p,totalProfit:m,tradeScore:l})}catch(m){console.error("交易得分计算错误:",m),l=50}let d=0;try{const m=((i=o.statistics)==null?void 0:i.totalInterestEarned)||0;m>0?d=Math.floor(m/500):d=Math.floor(o.bankDeposit/1e4),console.log("银行得分计算",{totalInterest:m,bankDeposit:o.bankDeposit,bankScore:d})}catch(m){console.error("银行得分计算错误:",m),d=10}const h=s+n+a+l+d;return console.log("得分明细总结",{assetsScore:s,timeScore:n,houseScore:a,tradeScore:l,bankScore:d,totalScore:h}),{assetsScore:s,timeScore:n,houseScore:a,tradeScore:l,bankScore:d,totalScore:h}}catch(o){return console.error("计算得分明细时出错:",o),{assetsScore:100,timeScore:50,houseScore:100,tradeScore:50,bankScore:10,totalScore:310}}},addNotification(e,t){this.notifications.push({id:Date.now(),type:e,message:t,timestamp:new Date().toISOString()}),this.notifications.length>10&&this.notifications.shift()},pauseGame(){this.gameStarted&&!this.gameOver&&(this.gamePaused=!0)},resumeGame(){this.gamePaused=!1},manualEndGame(){const e=H();let t="playerChoice";e.purchasedHouses&&e.purchasedHouses.length>0&&(t="victory",this.victoryAchieved||(this.victoryAchieved=!0,this.gameResult={firstVictoryWeek:this.currentWeek,firstVictoryHouse:e.purchasedHouses[e.purchasedHouses.length-1]})),this.endGame(t)},triggerSpecificEvent(e){console.log("GameCore - 尝试触发特定事件:",e);try{const t=Z(),r=H(),i=B(),o={money:r.money,debt:r.debt,inventory:r.inventory,statistics:r.statistics,purchasedHouses:r.purchasedHouses,name:r.name,capacity:r.capacity,inventoryUsed:r.inventoryUsed},s={marketModifiers:i.marketModifiers,currentLocation:i.currentLocation,productPrices:i.productPrices,products:i.products,locations:i.locations},n=t.triggerSpecificEvent(e,o,s);return n?(console.log("GameCore - 成功触发特定事件:",n.id,n.title),this.activeEvents.includes(n)||(this.activeEvents.push(n),console.log("GameCore - 事件已添加到活跃队列, 当前队列长度:",this.activeEvents.length)),n):(console.warn("GameCore - 触发特定事件失败:",e),null)}catch(t){return L(t,"gameState.triggerSpecificEvent",S.GAME_LOGIC,P.ERROR),console.error("GameCore - 触发特定事件时出错:",t),null}},initializeGameCore(){return new Promise(e=>{console.log("GameCore - 初始化游戏核心"),setTimeout(()=>{this.initialized=!0,console.log("GameCore - 游戏核心初始化完成"),e()},300)})},updateGameState(){console.log("GameCore - 更新游戏状态"),this.gameStarted&&!this.gameOver&&this.checkGameEnd(),this.notifications.length>10&&(this.notifications=this.notifications.slice(-10))}},getters:{gameProgress(){if(this.maxWeeks>52)return Math.min(5,this.currentWeek/1e3*100);const e=(this.currentWeek-1)/this.maxWeeks*100;return Math.max(0,Math.min(100,e))},isGameActive(){return this.gameStarted&&!this.gameOver&&!this.gamePaused},remainingWeeks(){if(this.maxWeeks>52)return"∞";const e=this.maxWeeks-this.currentWeek+1;return Math.max(0,e)},isEndlessMode(){return this.maxWeeks>52}}}),wr=Object.freeze(Object.defineProperty({__proto__:null,useGameCoreStore:K},Symbol.toStringTag,{value:"Module"}));function Ue(e){const t=[];if(!e||typeof e!="object")return{isValid:!1,issues:["存档数据无效或已损坏"]};e.version||t.push("缺少版本信息");const r=["gameCore","player","market","event"];for(const i of r)e[i]||t.push(`缺少${i}部分`);if(e.gameCore&&(typeof e.gameCore.currentWeek!="number"&&t.push("游戏周数无效"),typeof e.gameCore.maxWeeks!="number"&&t.push("最大周数无效"),e.gameCore.currentWeek>e.gameCore.maxWeeks&&t.push("游戏周数超过最大周数")),e.player)if(typeof e.player.name!="string"&&t.push("玩家名称无效"),typeof e.player.money!="number"&&t.push("玩家金钱无效"),e.player.money<0&&t.push("玩家金钱为负数"),Array.isArray(e.player.inventory)||t.push("库存数据无效"),Array.isArray(e.player.purchasedHouses)||t.push("房产数据无效"),!e.player.statistics||typeof e.player.statistics!="object")t.push("玩家统计数据无效");else{const i=["weekCount","transactionCount","totalProfit","maxMoney"];for(const o of i)typeof e.player.statistics[o]!="number"&&t.push(`统计数据 ${o} 无效或缺失`)}return e.market&&(Array.isArray(e.market.locations)||t.push("地点数据无效"),(!e.market.productPrices||typeof e.market.productPrices!="object")&&t.push("价格数据无效"),Array.isArray(e.market.products)&&e.market.products.length!==new Set(e.market.products).size&&t.push("产品数据包含重复项")),e.event&&(e.event.activeEvent&&typeof e.event.activeEvent!="object"&&t.push("活动事件数据无效"),Array.isArray(e.event.triggeredEvents)||t.push("触发事件记录无效")),{isValid:t.length===0,issues:t}}function tt(e,t=null){const r=e||{};let i=[];t||(t=mr(),i.push("使用默认模板数据")),r.version=r.version||"0.1.1",r.timestamp=r.timestamp||new Date().toISOString(),i.push(`设置版本为: ${r.version}`),r.gameCore=r.gameCore||{},r.player=r.player||{},r.market=r.market||{},r.event=r.event||{},r.gameCore.currentWeek=J(r.gameCore.currentWeek,1),r.gameCore.maxWeeks=J(r.gameCore.maxWeeks,52),r.gameCore.gameStarted=Ve(r.gameCore.gameStarted,!0),r.gameCore.gamePaused=Ve(r.gameCore.gamePaused,!1),r.gameCore.gameOver=Ve(r.gameCore.gameOver,!1),r.gameCore.notifications=Array.isArray(r.gameCore.notifications)?r.gameCore.notifications:[],r.gameCore.gameGoals=r.gameCore.gameGoals||{requiredNetWorth:4e5,targetWeeks:30,debtRatio:.4},r.gameCore.currentWeek>r.gameCore.maxWeeks&&(r.gameCore.currentWeek=r.gameCore.maxWeeks,i.push("修复: 调整当前周数不超过最大周数")),r.player.name=r.player.name||"玩家",r.player.money=J(r.player.money,5e3),r.player.money<0&&(r.player.money=0,i.push("修复: 重置负数金钱为0")),r.player.debt=J(r.player.debt,2e3),r.player.capacity=J(r.player.capacity,100),r.player.inventoryUsed=J(r.player.inventoryUsed,0),r.player.inventory=Array.isArray(r.player.inventory)?r.player.inventory:[],r.player.purchasedHouses=Array.isArray(r.player.purchasedHouses)?r.player.purchasedHouses:[];const o=r.player.inventory.reduce((s,n)=>s+(n.quantity||0),0);if(r.player.inventoryUsed!==o&&(r.player.inventoryUsed=o,i.push("修复: 调整库存使用量以匹配实际库存")),r.player.statistics=r.player.statistics||{},r.player.statistics.weekCount=J(r.player.statistics.weekCount,r.gameCore.currentWeek),r.player.statistics.transactionCount=J(r.player.statistics.transactionCount,0),r.player.statistics.totalProfit=J(r.player.statistics.totalProfit,0),r.player.statistics.maxMoney=J(r.player.statistics.maxMoney,Math.max(r.player.money,5e3)),r.player.purchasedHouses.length>0&&(!r.player.statistics.housePurchases||r.player.statistics.housePurchases.length===0)?(r.player.statistics.housePurchases=r.player.purchasedHouses.map(s=>({houseId:s.houseId,name:s.name||`${s.level}级房产`,level:s.level||1,price:s.purchasePrice,week:s.purchaseWeek||r.gameCore.currentWeek})),i.push("修复: 重建房屋购买记录")):r.player.statistics.housePurchases||(r.player.statistics.housePurchases=[]),r.player.purchasedHouses.length>0&&r.player.statistics.firstHousePurchaseWeek===null){const s=[...r.player.purchasedHouses].sort((n,a)=>(n.purchaseWeek||1/0)-(a.purchaseWeek||1/0))[0];r.player.statistics.firstHousePurchaseWeek=s.purchaseWeek||Math.max(1,r.gameCore.currentWeek-1),i.push("修复: 设置首次购房周数")}if((!Array.isArray(r.market.locations)||r.market.locations.length===0)&&(r.market.locations=t.market&&Array.isArray(t.market.locations)?[...t.market.locations]:[],r.market.locations.length>0&&i.push("修复: 从模板恢复地点数据")),r.market.productPrices=r.market.productPrices||{},t&&t.market&&t.market.productPrices){let s=0;for(const n in t.market.productPrices)r.market.productPrices[n]||(r.market.productPrices[n]=t.market.productPrices[n],s++);s>0&&i.push(`修复: 从模板恢复${s}个产品价格数据`)}return Array.isArray(r.event.triggeredEvents)||(r.event.triggeredEvents=[],i.push("修复: 初始化触发事件记录")),console.log("存档修复日志:",i),{data:r,repairLog:i}}function mr(){return{version:"0.1.0",gameCore:{currentWeek:1,maxWeeks:52,gameStarted:!0,gamePaused:!1,gameOver:!1},player:{name:"玩家",money:5e3,debt:2e3,capacity:100,inventory:[],purchasedHouses:[]},market:{locations:[{id:"location1",name:"市中心",specialProducts:["product1","product2"]},{id:"location2",name:"郊区",specialProducts:["product3","product4"]},{id:"location3",name:"商业区",specialProducts:["product5","product6"]},{id:"location4",name:"住宅区",specialProducts:["product7","product8"]},{id:"location5",name:"工业区",specialProducts:["product9","product10"]}],productPrices:{}},event:{activeEvent:null,triggeredEvents:[]}}}function J(e,t){const r=Number(e);return isNaN(r)?t:r}function Ve(e,t){return typeof e=="boolean"?e:t}function pr(e,t="0.1.1"){if(!e)return null;if(e.version||(e.version="0.1.0"),e.version===t)return e;let r={...e};return e.version==="0.1.0"&&t==="0.1.1"&&(r.gameState||(r.gameState={})),r.version=t,r}class ct{async getData(t){throw new Error("StorageService.getData must be implemented by subclass")}async setData(t,r){throw new Error("StorageService.setData must be implemented by subclass")}async removeData(t){throw new Error("StorageService.removeData must be implemented by subclass")}async clearAll(){throw new Error("StorageService.clearAll must be implemented by subclass")}}class fr extends ct{constructor(t="game_"){super(),this.prefix=t}getFullKey(t){return`${this.prefix}${t}`}async getData(t){try{const r=this.getFullKey(t),i=localStorage.getItem(r);return i?JSON.parse(i):null}catch(r){throw L(r,"storageService (persistence)",S.STORAGE,P.ERROR),Ge(`Failed to get data for key ${t}`,{originalError:r.message})}}_safeStringify(t){try{return JSON.stringify(t)}catch{if(console.warn("标准序列化失败，尝试手动序列化"),t==null)return JSON.stringify(null);if(typeof t!="object")return JSON.stringify(t);if(Array.isArray(t)){const o=[];for(let s=0;s<t.length;s++)try{const n=t[s];typeof n=="object"&&n!==null?o.push(JSON.parse(this._safeStringify(n))):o.push(n)}catch{o.push(null)}return JSON.stringify(o)}const i={};for(const o in t)if(Object.prototype.hasOwnProperty.call(t,o))try{const s=t[o];typeof s=="object"&&s!==null?i[o]=JSON.parse(this._safeStringify(s)):typeof s=="function"?i[o]="[函数]":i[o]=s}catch{console.warn(`无法序列化属性 ${o}`),i[o]=null}return JSON.stringify(i)}}async setData(t,r){try{console.log(`LocalStorage: 保存数据到 ${t}`);const i=this.getFullKey(t);let o;try{o=this._safeStringify(r)}catch(s){console.warn("序列化失败，使用基本数据",s),o=JSON.stringify({_simplified:!0,timestamp:new Date().toISOString(),key:t})}return localStorage.setItem(i,o),!0}catch(i){return L(i,"storageService (persistence)",S.STORAGE,P.ERROR),console.error(`保存数据到本地存储失败: ${t}`,i),!1}}async removeData(t){try{const r=this.getFullKey(t);return localStorage.removeItem(r),!0}catch(r){throw L(r,"storageService (persistence)",S.STORAGE,P.ERROR),Ge(`Failed to remove data for key ${t}`,{originalError:r.message})}}async clearAll(){try{return Object.keys(localStorage).forEach(t=>{t.startsWith(this.prefix)&&localStorage.removeItem(t)}),!0}catch(t){throw L(t,"storageService (persistence)",S.STORAGE,P.ERROR),Ge("Failed to clear all data",{originalError:t.message})}}}class hr extends ct{constructor(t="game_"){super(),this.prefix=t,this.isInitialized=!1,this.fallbackStorage=new fr,this.initializeElectronAPI()}async initializeElectronAPI(){try{window.electronAPI&&window.electronAPI.getConfig?(await window.electronAPI.getConfig(),this.isInitialized=!0,console.log("ElectronStorageService初始化成功")):console.warn("Electron API不可用，将使用LocalStorage作为备用")}catch(t){L(t,"storageService (persistence)",S.STORAGE,P.ERROR),console.error("初始化ElectronStorageService失败:",t)}return this.isInitialized}async getData(t){try{if(!this.isInitialized)return await this.fallbackStorage.getData(t);if(!window.electronAPI||!window.electronAPI.getConfig)throw new Error("Electron API不可用");const r=this.prefix+t,i=await window.electronAPI.getConfig();return i&&i[r]!==void 0?i[r]:null}catch(r){return L(r,"storageService (persistence)",S.UNKNOWN,P.ERROR),console.error(`获取数据失败 [${t}]:`,r),await this.fallbackStorage.getData(t)}}_safeSerialize(t){try{return console.log("尝试安全序列化数据"),JSON.parse(JSON.stringify(t))}catch(r){if(console.warn("标准JSON序列化失败，尝试手动序列化",r),t==null||typeof t!="object")return t;if(Array.isArray(t))return t.map(o=>this._safeSerialize(o));const i={};for(const o in t)if(Object.prototype.hasOwnProperty.call(t,o))try{i[o]=this._safeSerialize(t[o])}catch(s){console.warn(`无法序列化属性 ${o}:`,s),typeof t[o]=="function"?i[o]="[函数]":typeof t[o]=="object"?i[o]="[复杂对象]":i[o]=null}return i}}async setData(t,r){try{console.log(`正在保存数据 [${t}]...`);const i=await this.fallbackStorage.setData(t,r);if(console.log(`备用存储保存${i?"成功":"失败"}`),!this.isInitialized)return console.log("ElectronAPI未初始化，仅使用备用存储"),i;if(!window.electronAPI||!window.electronAPI.setConfig)throw new Error("Electron API不可用");const o=this._safeSerialize(r);console.log("数据已安全序列化");const n={[this.prefix+t]:o};return await window.electronAPI.setConfig(n),console.log(`数据成功保存到 [${t}]`),!0}catch(i){if(L(i,"storageService (persistence)",S.UNKNOWN,P.ERROR),console.error(`设置数据失败 [${t}]:`,i),t.includes("Save_")&&window.electronAPI&&window.electronAPI.saveGame)try{console.log("尝试使用saveGame API保存...");const o=t.replace(this.prefix,"").replace("Save_",""),s=await window.electronAPI.saveGame({name:o,gameState:r});if(s&&s.success)return console.log("使用saveGame API保存成功"),!0}catch(o){console.error("saveGame API保存失败",o)}return await this.fallbackStorage.setData(t,r)}}async removeData(t){try{if(!this.isInitialized)return await this.fallbackStorage.removeData(t);if(!window.electronAPI||!window.electronAPI.setConfig)throw new Error("Electron API不可用");const i={[this.prefix+t]:void 0};return await window.electronAPI.setConfig(i),!0}catch(r){return L(r,"storageService (persistence)",S.UNKNOWN,P.ERROR),console.error(`删除数据失败 [${t}]:`,r),await this.fallbackStorage.removeData(t)}}async clearAll(){try{if(!this.isInitialized)return await this.fallbackStorage.clearAll();if(!window.electronAPI||!window.electronAPI.clearConfig)throw new Error("Electron API不可用");const t=await window.electronAPI.getConfig(),r=Object.keys(t).filter(o=>o.startsWith(this.prefix));if(r.length===0)return!0;const i={};return r.forEach(o=>{i[o]=void 0}),await window.electronAPI.setConfig(i),!0}catch(t){return L(t,"storageService (persistence)",S.UNKNOWN,P.ERROR),console.error("清除所有数据失败:",t),await this.fallbackStorage.clearAll()}}}const X=new hr,be="saveList",Ee="houseJourneySave_",xe=3,gr=5,ge="0.1.1",yr=ce("save",{state:()=>({saveList:[],isLoading:!1,lastAutoSaveWeek:0,autoSaveEnabled:!0,saveTemplate:null,lastValidatedSave:null}),actions:{async init(){try{await this.loadSaveList(),this.createSaveTemplate(),this.autoSaveEnabled&&setInterval(()=>{const e=K();e.gameStarted&&!e.gameOver&&!e.gamePaused&&this.checkAutoSave(e.currentWeek)},6e4)}catch(e){L(e,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("初始化存档系统失败",e)}},createSaveTemplate(){K(),H();const e=B();Z(),this.saveTemplate={version:ge,timestamp:new Date().toISOString(),gameCore:{currentWeek:1,maxWeeks:52,gameStarted:!0,gamePaused:!1,gameOver:!1,gameResult:null,notifications:[],gameGoals:{requiredNetWorth:4e5,targetWeeks:30,debtRatio:.4}},player:{name:"玩家",money:5e3,debt:2e3,capacity:100,inventoryUsed:0,inventory:[],purchasedHouses:[],statistics:{weekCount:1,transactionCount:0,totalProfit:0,maxMoney:5e3,visitedLocations:[]}},market:{locations:e.locations||[],currentLocation:null,productPrices:{},products:[],houses:[],marketModifiers:{}},event:{activeEvent:null,forceLocationChange:!1,targetLocation:null,nextEventId:null,triggeredEvents:[]}}},async loadSaveList(){try{console.log("尝试加载存档列表...");const e=await X.getData(be);if(!e||!Array.isArray(e)||e.length===0){console.log("存档列表为空或无效，尝试从文件系统获取...");try{if(window.electronAPI&&window.electronAPI.listSaves){const t=await window.electronAPI.listSaves();if(t&&t.success&&Array.isArray(t.saves)){console.log("从Electron API获取到",t.saves.length,"个存档");const r=t.saves.map(i=>({id:i.name,name:i.name,isAuto:i.name.startsWith("autosave_")||i.name.includes("自动存档"),timestamp:i.lastModified?new Date(i.lastModified).getTime():Date.now(),lastModified:i.lastModified}));return this.saveList=r,await X.setData(be,r),r}}}catch(t){console.error("从Electron API获取存档列表失败",t)}this.saveList=[]}else console.log("成功从存储中加载存档列表，数量:",e.length),this.saveList=e}catch(e){L(e,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("加载存档列表失败",e),this.saveList=[]}return this.saveList},async validateSave(e){try{const t=e||this.lastValidatedSave;if(!t)return{success:!1,message:"未指定存档ID"};const r=await X.getData(`${Ee}${t}`);if(!r)return{success:!1,message:"存档不存在或已损坏"};const i=Ue(r);return{success:i.isValid,issues:i.issues,saveData:r,canRepair:i.issues.length>0}}catch(t){return L(t,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("验证存档失败",t),{success:!1,message:`验证失败: ${t.message}`,error:t}}},async saveGame(e,t=!1){return De(async()=>{const r=K(),i=H(),o=B(),s=Z(),n=ke();let a={version:ge,timestamp:new Date().toISOString()};try{console.log("准备存档数据...");const p=r.gameResult?JSON.parse(JSON.stringify({reason:r.gameResult.reason,week:r.gameResult.week,score:r.gameResult.score,endReason:r.gameResult.endReason,victoryAchieved:r.gameResult.victoryAchieved,firstVictoryWeek:r.gameResult.firstVictoryWeek})):null,y=r.notifications?r.notifications.map(b=>({id:b.id,type:b.type,message:b.message,timestamp:b.timestamp})):[],k=i.inventory?i.inventory.map(b=>({productId:b.productId,name:b.name,quantity:b.quantity,purchasePrice:b.purchasePrice,purchaseWeek:b.purchaseWeek})):[],C=i.purchasedHouses?i.purchasedHouses.map(b=>({houseId:b.houseId,name:b.name,level:b.level,purchasePrice:b.purchasePrice,purchaseWeek:b.purchaseWeek,location:typeof b.location=="string"?b.location:null})):[];let N=null;s.activeEvent&&(N={id:s.activeEvent.id,title:s.activeEvent.title,type:s.activeEvent.type}),a={version:ge,timestamp:new Date().toISOString(),gameCore:{currentWeek:r.currentWeek,maxWeeks:r.maxWeeks,gameStarted:r.gameStarted,gamePaused:r.gamePaused,gameOver:r.gameOver,gameResult:p,notifications:y,gameGoals:JSON.parse(JSON.stringify(r.gameGoals||{}))},player:{name:i.name,money:i.money,debt:i.debt,capacity:i.capacity,inventoryUsed:i.inventoryUsed,inventory:k,purchasedHouses:C,statistics:JSON.parse(JSON.stringify(i.statistics||{}))},market:{locations:JSON.parse(JSON.stringify(o.locations||[])),currentLocation:o.currentLocation?o.currentLocation.id:null,productPrices:JSON.parse(JSON.stringify(o.productPrices||{})),products:o.products?o.products.map(b=>typeof b=="object"?b.id:b):[],houses:o.houses?o.houses.map(b=>typeof b=="object"?b.id:b):[],marketModifiers:JSON.parse(JSON.stringify(o.marketModifiers||{}))},event:{activeEvent:N,forceLocationChange:s.forceLocationChange,targetLocation:s.targetLocation,nextEventId:s.nextEventId,triggeredEvents:JSON.parse(JSON.stringify(s.triggeredEvents||[]))}},console.log("存档数据准备完成")}catch(p){L(p,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("准备存档数据时出错:",p),a={version:ge,timestamp:new Date().toISOString(),gameCore:{currentWeek:r.currentWeek,maxWeeks:r.maxWeeks,gameStarted:!0,gamePaused:!1,gameOver:r.gameOver},player:{name:i.name,money:i.money,debt:i.debt,capacity:100,inventoryUsed:0,inventory:[],purchasedHouses:[]},market:{currentLocation:null,productPrices:{},products:[],houses:[],marketModifiers:{}},event:{triggeredEvents:[]}},t||n.showToast({type:"warning",message:"存档数据处理出错，使用简化版本",duration:3e3})}const l=Ue(a);if(!l.isValid){console.warn("生成的存档数据有问题，尝试修复...",l.issues),t||n.showToast({type:"warning",message:"存档数据有问题，正在修复...",duration:3e3});const p=tt(a,this.saveTemplate);a=p.data,!t&&p.repairLog.length>0&&(console.info("存档修复完成",p.repairLog),n.showToast({type:"info",message:`存档已修复 (${p.repairLog.length}项问题)`,duration:3e3}))}let d,h=!0;if(t)d=`auto_${Date.now()}`,e=`自动存档 - 第${r.currentWeek}周 - ${new Date().toLocaleString()}`;else{const p=this.saveList.find(y=>y.name===e);p?(d=p.id,h=!1):d=`save_${Date.now()}`}const m={id:d,name:e,isAuto:t,timestamp:Date.now(),week:r.currentWeek,playerMoney:i.money,playerDebt:i.debt,location:o.currentLocation?o.currentLocation.name:"未知位置",version:ge};try{if(console.log("正在保存游戏数据到存储..."),await X.setData(`${Ee}${d}`,a),console.log("游戏数据已保存到存储"),window.electronAPI&&window.electronAPI.saveGame){console.log("尝试使用Electron API保存游戏...");const p=await window.electronAPI.saveGame({name:e,gameState:a});p&&p.success?console.log("游戏已成功保存到文件系统:",p.path):console.warn("Electron保存可能失败:",(p==null?void 0:p.error)||"未知错误")}if(console.log("更新存档列表..."),h)this.saveList.unshift(m);else{const p=this.saveList.findIndex(y=>y.id===d);p!==-1&&(this.saveList[p]=m)}}catch(p){if(L(p,"saveSystem (persistence)",S.STORAGE,P.ERROR),console.error("保存游戏数据时出错:",p),window.electronAPI&&window.electronAPI.saveGame){console.log("尝试使用备用方法保存游戏...");const y=await window.electronAPI.saveGame({name:e,gameState:a});if(!y||!y.success)throw p;console.log("已使用备用方法保存游戏")}else throw p}if(t){const p=this.saveList.filter(y=>y.isAuto);if(p.length>xe){const y=p.sort((k,C)=>k.timestamp-C.timestamp).slice(0,p.length-xe);for(const k of y)await this.deleteSave(k.id,!0)}}return await X.setData(be,this.saveList),t||n.showToast({type:"success",message:h?"游戏已保存":"存档已更新",duration:2e3}),t&&(this.lastAutoSaveWeek=r.currentWeek),{success:!0,saveId:d,isNewSave:h}},"saveGame",S.STORAGE,P.ERROR)},async loadGame(e){return De(async()=>{const t=K(),r=H(),i=B(),o=Z(),s=ke();try{this.lastValidatedSave=e;const n=await this.validateSave(e);if(n.success)await this.loadStoresFromSaveData(n.saveData);else{s.showToast({type:"warning",message:"存档可能已损坏，正在尝试修复...",duration:3e3});const l=await X.getData(`${Ee}${e}`);if(!l)return s.showToast({type:"error",message:"存档数据无法读取，无法修复",duration:5e3}),this.isLoading=!1,{success:!1,message:"存档数据无法读取"};const d=tt(l,this.saveTemplate),h=d.data;if(!Ue(h).isValid)return s.showToast({type:"error",message:"存档损坏严重，无法修复",duration:5e3}),this.isLoading=!1,{success:!1,message:"存档无法修复"};s.showToast({type:"success",message:`存档已成功修复 (${d.repairLog.length}项问题)`,duration:5e3}),await X.setData(`${Ee}${e}`,h),console.info("已保存修复后的存档",h),await this.loadStoresFromSaveData(h)}const a=this.saveList.find(l=>l.id===e);return a&&(a.previewData={purchasedHouses:r.purchasedHouses.length,debt:r.debt,inventory:r.inventory.length,netWorth:r.netWorth},await X.setData(be,this.saveList)),this.isLoading=!1,{success:!0,message:"加载成功"}}catch(n){return L(n,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("加载游戏失败",n),this.isLoading=!1,s.showToast({type:"error",message:"加载存档失败: "+n.message,duration:5e3}),{success:!1,error:n,message:"加载失败: "+n.message}}},"loadGame",S.STORAGE,P.ERROR)},async loadStoresFromSaveData(e){const t=K(),r=H(),i=B(),o=Z();e=pr(e,ge),e.gameCore&&(t.currentWeek=e.gameCore.currentWeek||1,t.maxWeeks=e.gameCore.maxWeeks||52,t.gameStarted=!!e.gameCore.gameStarted,t.gamePaused=!!e.gameCore.gamePaused,t.gameOver=!!e.gameCore.gameOver,t.gameResult=e.gameCore.gameResult||null,t.notifications=Array.isArray(e.gameCore.notifications)?e.gameCore.notifications:[],t.gameGoals=e.gameCore.gameGoals||{requiredNetWorth:4e5,targetWeeks:30,debtRatio:.4}),e.player&&(r.name=e.player.name||"玩家",r.money=e.player.money||5e3,r.debt=e.player.debt||2e3,r.capacity=e.player.capacity||100,r.inventoryUsed=e.player.inventoryUsed||0,r.inventory=Array.isArray(e.player.inventory)?e.player.inventory:[],r.purchasedHouses=Array.isArray(e.player.purchasedHouses)?e.player.purchasedHouses:[],r.statistics=e.player.statistics||{weekCount:e.gameCore.currentWeek||1,transactionCount:0,totalProfit:0,maxMoney:r.money,visitedLocations:[],housePurchases:[],firstHousePurchaseWeek:null}),e.market&&(i.locations=Array.isArray(e.market.locations)?e.market.locations:[],i.productPrices=e.market.productPrices||{},e.market.currentLocation&&i.locations.length>0?i.currentLocation=i.locations.find(s=>s.id===e.market.currentLocation)||i.locations[0]:i.locations.length>0&&(i.currentLocation=i.locations[0]),i.loadProducts(e.market.products||[]),i.loadHouses(e.market.houses||[]),i.marketModifiers=e.market.marketModifiers||{}),e.event&&(o.activeEvent=e.event.activeEvent||null,o.forceLocationChange=!!e.event.forceLocationChange,o.targetLocation=e.event.targetLocation||null,o.nextEventId=e.event.nextEventId||null,o.triggeredEvents=Array.isArray(e.event.triggeredEvents)?e.event.triggeredEvents:[])},async deleteSave(e,t=!1){return De(async()=>{const r=this.saveList.findIndex(i=>i.id===e);try{return await X.removeData(`${Ee}${e}`),r!==-1&&this.saveList.splice(r,1),await X.setData(be,this.saveList),t||ke().showToast({type:"success",message:"存档已删除",duration:2e3}),!0}catch(i){return L(i,"saveSystem (persistence)",S.UNKNOWN,P.ERROR),console.error("删除存档失败",i),t||ke().showToast({type:"error",message:"删除存档失败: "+i.message,duration:5e3}),!1}},"deleteSave",S.STORAGE,P.WARNING)},async cleanupOldAutoSaves(){const e=this.saveList.filter(t=>t.isAuto);if(e.length>xe){e.sort((t,r)=>r.timestamp-t.timestamp);for(let t=xe;t<e.length;t++)await this.deleteSave(e[t].id,!0)}},async checkAutoSave(e){if(!this.autoSaveEnabled)return;const t=K();!t.gameStarted||t.gameOver||e>this.lastAutoSaveWeek&&e%gr===0&&await this.autoSave()},async autoSave(){const e=K();H();const t=`自动存档 (第${e.currentWeek}周)`;await this.saveGame(t,!0),console.log(`自动存档完成: ${t}`)},async triggerImportantActionAutoSave(e){if(!this.autoSaveEnabled)return;const t=K();if(!t.gameStarted||t.gameOver)return;let r="";switch(e){case"house_purchase":r=`购房存档 (第${t.currentWeek}周)`;break;case"major_transaction":r=`大额交易存档 (第${t.currentWeek}周)`;break;case"event_completed":r=`事件完成存档 (第${t.currentWeek}周)`;break;case"debt_repaid":r=`还清债务存档 (第${t.currentWeek}周)`;break;default:r=`重要操作存档 (第${t.currentWeek}周)`}await this.saveGame(r,!0),console.log(`重要操作自动存档完成: ${r}`)}},getters:{autoSaves(e){return e.saveList.filter(t=>t.isAuto).sort((t,r)=>r.timestamp-t.timestamp)},manualSaves(e){return e.saveList.filter(t=>!t.isAuto).sort((t,r)=>r.timestamp-t.timestamp)},latestSave(e){return e.saveList.length===0?null:e.saveList.sort((t,r)=>r.timestamp-t.timestamp)[0]}}}),Rr=ce("gameCompat",()=>{const e=K(),t=H(),r=B(),i=Z(),o=yr(),s=Nt(),n=D(()=>e.currentWeek),a=D(()=>e.maxWeeks),l=D(()=>e.gameStarted),d=D(()=>e.gamePaused),h=D(()=>e.gameOver),m=D(()=>e.gameResult),p=D(()=>e.notifications),y=D(()=>e.gameGoals),k=D(()=>e.gameProgress),C=D(()=>e.isGameActive),N=D(()=>t),b=D(()=>r.locations),M=D(()=>r.currentLocation),I=D(()=>r.productPrices),x=D(()=>r.products),w=D(()=>r.availableProducts),O=D(()=>r.houses),U=D(()=>r.marketModifiers),W=D(()=>i.currentEvent),V=D(()=>i.eventHistory);function ee(_){e.startNewGame(_)}function q(){return e.advanceWeek()}function ue(_){return r.changeLocation(_)}function le(){r.updateProductPrices(e.currentWeek)}function de(){r.updateLocationProducts(e.currentWeek)}function me(){i.generateRandomEvent(e.currentWeek)}function Se(_,R){var pe;const T=String(_),G=r.availableProducts.find(F=>String(F.id)===T);if(!G)return console.log("商品不存在:",_,"可用商品IDs:",r.availableProducts.map(F=>F.id)),{success:!1,message:"商品不存在"};const j=(pe=r.productPrices[T])==null?void 0:pe.price;if(!j){console.log("价格未定义:",_,"价格列表keys:",Object.keys(r.productPrices));const F=G.basePrice||0;return F>0?(console.log("使用商品基本价格:",F),Oe(G,F,R)):{success:!1,message:"价格未定义"}}const re=j*R;if(t.money<re)return{success:!1,message:"资金不足"};const se=s.addToInventory(G,R,j);return se.success?(t.money-=re,t.statistics.transactionCount+=1,{success:!0}):se}function Me(_,R){var Xe;if(!_||R<=0)return{success:!1,message:"无效的参数"};const T=String(_),G=t.inventory.find(oe=>String(oe.productId)===T);if(!G)return console.log("物品不存在于库存中:",_,"库存物品IDs:",t.inventory.map(oe=>oe.productId)),{success:!1,message:"物品不存在"};if(G.quantity<R)return{success:!1,message:"数量不足"};const j=((Xe=r.productPrices[T])==null?void 0:Xe.price)||0;if(j<=0){console.log("当前市场不收购此物品:",_,"价格:",j);const oe=r.products.find(lt=>String(lt.id)===T);return oe&&oe.basePrice>0?(console.log("使用商品基本价格出售:",oe.basePrice),z(G,oe.basePrice,R)):{success:!1,message:"当前市场不收购此物品"}}const re=j*R,se=t.inventory.indexOf(G),F=G.purchasePrice*R,Je=s.removeFromInventory(se,R);if(!Je.success)return{success:!1,message:"出售失败："+Je.message};const Ne=re-F;return t.money+=re,t.statistics.totalProfit+=Ne,t.statistics.transactionCount+=1,{success:!0,income:re,profit:Ne,profitPercent:F>0?(Ne/F*100).toFixed(1):0}}function ye(_,R=!1){return o.saveGame(_,R)}function te(_){return o.loadGame(_)}function ve(){return o.getSaves()}function We(){e.checkGameEnd()}function Le(_){var j;if(!_)return 0;const R=String(_),T=(j=r.productPrices[R])==null?void 0:j.price;if(T!=null)return T;const G=r.products.find(re=>String(re.id)===R);return G&&G.basePrice?G.basePrice:0}function we(_){return r.getProductPriceTrend(_)}function Re(_){return _<=0||_>t.money?{success:!1,message:"无效的还款金额"}:(_>t.debt&&(_=t.debt),t.money-=_,t.debt-=_,{success:!0,amountRepaid:_})}function Ae(_){const R=r.houses.find(T=>T.id===_);return R?t.money<R.price?{success:!1,message:"资金不足"}:t.purchasedHouses.some(T=>T.houseId===_)?{success:!1,message:"已拥有此房屋"}:(t.money-=R.price,t.purchasedHouses.push({houseId:R.id,name:R.name,purchasePrice:R.price,purchaseDate:new Date().toISOString()}),e.checkGameEnd(),{success:!0}):{success:!1,message:"房屋不存在"}}function Ie(_,R){e.addNotification(_,R)}function Oe(_,R,T){const G=R*T;if(t.money<G)return{success:!1,message:"资金不足"};const j=s.addToInventory(_,T,R);return j.success?(t.money-=G,t.statistics.transactionCount+=1,{success:!0}):j}function z(_,R,T){const G=R*T,j=t.inventory.indexOf(_),se=_.purchasePrice*T,pe=s.removeFromInventory(j,T);if(!pe.success)return{success:!1,message:"出售失败："+pe.message};const F=G-se;return t.money+=G,t.statistics.totalProfit+=F,t.statistics.transactionCount+=1,{success:!0,income:G,profit:F,profitPercent:se>0?(F/se*100).toFixed(1):0}}return{currentWeek:n,maxWeeks:a,gameStarted:l,gamePaused:d,gameOver:h,gameResult:m,notifications:p,gameGoals:y,gameProgress:k,isGameActive:C,player:N,locations:b,currentLocation:M,productPrices:I,products:x,availableProducts:w,houses:O,marketModifiers:U,currentEvent:W,eventHistory:V,startNewGame:ee,advanceWeek:q,changeLocation:ue,updateProductPrices:le,updateLocationProducts:de,generateRandomEvent:me,buyProduct:Se,sellProduct:Me,saveGame:ye,loadGame:te,getSaves:ve,checkGameEnd:We,getCurrentProductPrice:Le,getProductPriceTrend:we,repayDebt:Re,buyHouse:Ae,addNotification:Ie}});export{Sr as A,wr as B,P as E,E as P,ft as _,S as a,Wt as b,Rr as c,Z as d,Nt as e,K as f,H as g,L as h,$ as i,Lr as j,B as k,hr as l,ne as m,Zt as n,je as o,Tt as p,yr as q,Er as r,Kt as s,Rt as t,ke as u,kr as v,_r as w,Pr as x,Ot as y,Ct as z};
